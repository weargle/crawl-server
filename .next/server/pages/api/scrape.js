"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(() => {
var exports = {};
exports.id = "pages/api/scrape";
exports.ids = ["pages/api/scrape"];
exports.modules = {

/***/ "@dqbd/tiktoken":
/*!*********************************!*\
  !*** external "@dqbd/tiktoken" ***!
  \*********************************/
/***/ ((module) => {

module.exports = require("@dqbd/tiktoken");

/***/ }),

/***/ "@supabase/supabase-js":
/*!****************************************!*\
  !*** external "@supabase/supabase-js" ***!
  \****************************************/
/***/ ((module) => {

module.exports = require("@supabase/supabase-js");

/***/ }),

/***/ "ajv":
/*!**********************!*\
  !*** external "ajv" ***!
  \**********************/
/***/ ((module) => {

module.exports = require("ajv");

/***/ }),

/***/ "async":
/*!************************!*\
  !*** external "async" ***!
  \************************/
/***/ ((module) => {

module.exports = require("async");

/***/ }),

/***/ "dotenv":
/*!*************************!*\
  !*** external "dotenv" ***!
  \*************************/
/***/ ((module) => {

module.exports = require("dotenv");

/***/ }),

/***/ "dotenv/config":
/*!********************************!*\
  !*** external "dotenv/config" ***!
  \********************************/
/***/ ((module) => {

module.exports = require("dotenv/config");

/***/ }),

/***/ "form-data":
/*!****************************!*\
  !*** external "form-data" ***!
  \****************************/
/***/ ((module) => {

module.exports = require("form-data");

/***/ }),

/***/ "ioredis":
/*!**************************!*\
  !*** external "ioredis" ***!
  \**************************/
/***/ ((module) => {

module.exports = require("ioredis");

/***/ }),

/***/ "joplin-turndown-plugin-gfm":
/*!*********************************************!*\
  !*** external "joplin-turndown-plugin-gfm" ***!
  \*********************************************/
/***/ ((module) => {

module.exports = require("joplin-turndown-plugin-gfm");

/***/ }),

/***/ "openai?22eb":
/*!*************************!*\
  !*** external "openai" ***!
  \*************************/
/***/ ((module) => {

module.exports = require("openai");

/***/ }),

/***/ "pdf-parse":
/*!****************************!*\
  !*** external "pdf-parse" ***!
  \****************************/
/***/ ((module) => {

module.exports = require("pdf-parse");

/***/ }),

/***/ "rate-limiter-flexible":
/*!****************************************!*\
  !*** external "rate-limiter-flexible" ***!
  \****************************************/
/***/ ((module) => {

module.exports = require("rate-limiter-flexible");

/***/ }),

/***/ "redis":
/*!************************!*\
  !*** external "redis" ***!
  \************************/
/***/ ((module) => {

module.exports = require("redis");

/***/ }),

/***/ "robots-parser":
/*!********************************!*\
  !*** external "robots-parser" ***!
  \********************************/
/***/ ((module) => {

module.exports = require("robots-parser");

/***/ }),

/***/ "scrapingbee":
/*!******************************!*\
  !*** external "scrapingbee" ***!
  \******************************/
/***/ ((module) => {

module.exports = require("scrapingbee");

/***/ }),

/***/ "turndown":
/*!***************************!*\
  !*** external "turndown" ***!
  \***************************/
/***/ ((module) => {

module.exports = require("turndown");

/***/ }),

/***/ "xml2js":
/*!*************************!*\
  !*** external "xml2js" ***!
  \*************************/
/***/ ((module) => {

module.exports = require("xml2js");

/***/ }),

/***/ "@anthropic-ai/sdk":
/*!************************************!*\
  !*** external "@anthropic-ai/sdk" ***!
  \************************************/
/***/ ((module) => {

module.exports = import("@anthropic-ai/sdk");;

/***/ }),

/***/ "axios":
/*!************************!*\
  !*** external "axios" ***!
  \************************/
/***/ ((module) => {

module.exports = import("axios");;

/***/ }),

/***/ "cheerio":
/*!**************************!*\
  !*** external "cheerio" ***!
  \**************************/
/***/ ((module) => {

module.exports = import("cheerio");;

/***/ }),

/***/ "openai?089f":
/*!*************************!*\
  !*** external "openai" ***!
  \*************************/
/***/ ((module) => {

module.exports = import("openai");;

/***/ }),

/***/ "fs":
/*!*********************!*\
  !*** external "fs" ***!
  \*********************/
/***/ ((module) => {

module.exports = require("fs");

/***/ }),

/***/ "node:fs":
/*!**************************!*\
  !*** external "node:fs" ***!
  \**************************/
/***/ ((module) => {

module.exports = require("node:fs");

/***/ }),

/***/ "os":
/*!*********************!*\
  !*** external "os" ***!
  \*********************/
/***/ ((module) => {

module.exports = require("os");

/***/ }),

/***/ "path":
/*!***********************!*\
  !*** external "path" ***!
  \***********************/
/***/ ((module) => {

module.exports = require("path");

/***/ }),

/***/ "url":
/*!**********************!*\
  !*** external "url" ***!
  \**********************/
/***/ ((module) => {

module.exports = require("url");

/***/ }),

/***/ "(api)/./src/lib/LLM-extraction/helpers.ts":
/*!*******************************************!*\
  !*** ./src/lib/LLM-extraction/helpers.ts ***!
  \*******************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   numTokensFromString: () => (/* binding */ numTokensFromString)\n/* harmony export */ });\n/* harmony import */ var _dqbd_tiktoken__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @dqbd/tiktoken */ \"@dqbd/tiktoken\");\n/* harmony import */ var _dqbd_tiktoken__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_dqbd_tiktoken__WEBPACK_IMPORTED_MODULE_0__);\n\n// This function calculates the number of tokens in a text string using GPT-3.5-turbo model\nfunction numTokensFromString(message, model) {\n    const encoder = (0,_dqbd_tiktoken__WEBPACK_IMPORTED_MODULE_0__.encoding_for_model)(model);\n    // Encode the message into tokens\n    const tokens = encoder.encode(message);\n    // Free the encoder resources after use\n    encoder.free();\n    // Return the number of tokens\n    return tokens.length;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwaSkvLi9zcmMvbGliL0xMTS1leHRyYWN0aW9uL2hlbHBlcnMudHMiLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBQW9EO0FBR3BELDJGQUEyRjtBQUNwRixTQUFTQyxvQkFBb0JDLE9BQWUsRUFBRUMsS0FBYTtJQUNoRSxNQUFNQyxVQUFVSixrRUFBa0JBLENBQUNHO0lBRW5DLGlDQUFpQztJQUNqQyxNQUFNRSxTQUFTRCxRQUFRRSxPQUFPSjtJQUU5Qix1Q0FBdUM7SUFDdkNFLFFBQVFHO0lBRVIsOEJBQThCO0lBQzlCLE9BQU9GLE9BQU9HO0FBQ2hCIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vZmlyZWNyYXdsLXNjcmFwZXItanMvLi9zcmMvbGliL0xMTS1leHRyYWN0aW9uL2hlbHBlcnMudHM/YTViZCJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBlbmNvZGluZ19mb3JfbW9kZWwgfSBmcm9tIFwiQGRxYmQvdGlrdG9rZW5cIjtcbmltcG9ydCB7IFRpa3Rva2VuTW9kZWwgfSBmcm9tIFwiQGRxYmQvdGlrdG9rZW5cIjtcblxuLy8gVGhpcyBmdW5jdGlvbiBjYWxjdWxhdGVzIHRoZSBudW1iZXIgb2YgdG9rZW5zIGluIGEgdGV4dCBzdHJpbmcgdXNpbmcgR1BULTMuNS10dXJibyBtb2RlbFxuZXhwb3J0IGZ1bmN0aW9uIG51bVRva2Vuc0Zyb21TdHJpbmcobWVzc2FnZTogc3RyaW5nLCBtb2RlbDogc3RyaW5nKTogbnVtYmVyIHtcbiAgY29uc3QgZW5jb2RlciA9IGVuY29kaW5nX2Zvcl9tb2RlbChtb2RlbCBhcyBUaWt0b2tlbk1vZGVsKTtcblxuICAvLyBFbmNvZGUgdGhlIG1lc3NhZ2UgaW50byB0b2tlbnNcbiAgY29uc3QgdG9rZW5zID0gZW5jb2Rlci5lbmNvZGUobWVzc2FnZSk7XG5cbiAgLy8gRnJlZSB0aGUgZW5jb2RlciByZXNvdXJjZXMgYWZ0ZXIgdXNlXG4gIGVuY29kZXIuZnJlZSgpO1xuXG4gIC8vIFJldHVybiB0aGUgbnVtYmVyIG9mIHRva2Vuc1xuICByZXR1cm4gdG9rZW5zLmxlbmd0aDtcbn1cbiJdLCJuYW1lcyI6WyJlbmNvZGluZ19mb3JfbW9kZWwiLCJudW1Ub2tlbnNGcm9tU3RyaW5nIiwibWVzc2FnZSIsIm1vZGVsIiwiZW5jb2RlciIsInRva2VucyIsImVuY29kZSIsImZyZWUiLCJsZW5ndGgiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(api)/./src/lib/LLM-extraction/helpers.ts\n");

/***/ }),

/***/ "(api)/./src/lib/LLM-extraction/index.ts":
/*!*****************************************!*\
  !*** ./src/lib/LLM-extraction/index.ts ***!
  \*****************************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.a(module, async (__webpack_handle_async_dependencies__, __webpack_async_result__) => { try {\n__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   generateCompletions: () => (/* binding */ generateCompletions)\n/* harmony export */ });\n/* harmony import */ var openai__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! openai */ \"openai?089f\");\n/* harmony import */ var ajv__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ajv */ \"ajv\");\n/* harmony import */ var ajv__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(ajv__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var _models__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./models */ \"(api)/./src/lib/LLM-extraction/models.ts\");\nvar __webpack_async_dependencies__ = __webpack_handle_async_dependencies__([openai__WEBPACK_IMPORTED_MODULE_0__]);\nopenai__WEBPACK_IMPORTED_MODULE_0__ = (__webpack_async_dependencies__.then ? (await __webpack_async_dependencies__)() : __webpack_async_dependencies__)[0];\n\n\nconst ajv = new (ajv__WEBPACK_IMPORTED_MODULE_1___default())(); // Initialize AJV for JSON schema validation\n\n// Generate completion using OpenAI\nasync function generateCompletions(documents, extractionOptions) {\n    // const schema = zodToJsonSchema(options.schema)\n    const schema = extractionOptions.extractionSchema;\n    const prompt = extractionOptions.extractionPrompt;\n    const switchVariable = \"openAI\"; // Placholder, want to think more about how we abstract the model provider\n    const completions = await Promise.all(documents.map(async (document)=>{\n        switch(switchVariable){\n            case \"openAI\":\n                const llm = new openai__WEBPACK_IMPORTED_MODULE_0__[\"default\"]();\n                try {\n                    const completionResult = await (0,_models__WEBPACK_IMPORTED_MODULE_2__.generateOpenAICompletions)({\n                        client: llm,\n                        document: document,\n                        schema: schema,\n                        prompt: prompt\n                    });\n                    // Validate the JSON output against the schema using AJV\n                    const validate = ajv.compile(schema);\n                    if (!validate(completionResult.llm_extraction)) {\n                        //TODO: add Custom Error handling middleware that bubbles this up with proper Error code, etc.\n                        throw new Error(`JSON parsing error(s): ${validate.errors?.map((err)=>err.message).join(\", \")}\\n\\nLLM extraction did not match the extraction schema you provided. This could be because of a model hallucination, or an Error on our side. Try adjusting your prompt, and if it doesn't work reach out to support.`);\n                    }\n                    return completionResult;\n                } catch (error) {\n                    console.error(`Error generating completions: ${error}`);\n                    throw new Error(`Error generating completions: ${error.message}`);\n                }\n            default:\n                throw new Error(\"Invalid client\");\n        }\n    }));\n    return completions;\n}\n\n__webpack_async_result__();\n} catch(e) { __webpack_async_result__(e); } });//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwaSkvLi9zcmMvbGliL0xMTS1leHRyYWN0aW9uL2luZGV4LnRzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7O0FBQzRCO0FBQ047QUFDdEIsTUFBTUUsTUFBTSxJQUFJRCw0Q0FBR0EsSUFBSSw0Q0FBNEM7QUFFZDtBQUdyRCxtQ0FBbUM7QUFDNUIsZUFBZUcsb0JBQ3BCQyxTQUFxQixFQUNyQkMsaUJBQW1DO0lBRW5DLGlEQUFpRDtJQUVqRCxNQUFNQyxTQUFTRCxrQkFBa0JFO0lBQ2pDLE1BQU1DLFNBQVNILGtCQUFrQkk7SUFFakMsTUFBTUMsaUJBQWlCLFVBQVUsMEVBQTBFO0lBRTNHLE1BQU1DLGNBQWMsTUFBTUMsUUFBUUMsSUFDaENULFVBQVVVLElBQUksT0FBT0M7UUFDbkIsT0FBUUw7WUFDTixLQUFLO2dCQUNILE1BQU1NLE1BQU0sSUFBSWpCLDhDQUFNQTtnQkFDdEIsSUFBRztvQkFDSCxNQUFNa0IsbUJBQW1CLE1BQU1mLGtFQUF5QkEsQ0FBQzt3QkFDdkRnQixRQUFRRjt3QkFDUkQsVUFBVUE7d0JBQ1ZULFFBQVFBO3dCQUNSRSxRQUFRQTtvQkFDVjtvQkFDQSx3REFBd0Q7b0JBQ3hELE1BQU1XLFdBQVdsQixJQUFJbUIsUUFBUWQ7b0JBQzdCLElBQUksQ0FBQ2EsU0FBU0YsaUJBQWlCSSxpQkFBaUI7d0JBQzlDLDhGQUE4Rjt3QkFDOUYsTUFBTSxJQUFJQyxNQUNSLENBQUMsdUJBQXVCLEVBQUVILFNBQVNJLFFBQy9CVCxJQUFJLENBQUNVLE1BQVFBLElBQUlDLFNBQ2xCQyxLQUFLLE1BQU0scU5BQXFOLENBQUM7b0JBRXhPO29CQUVBLE9BQU9UO2dCQUNULEVBQUUsT0FBT1UsT0FBTztvQkFDZEMsUUFBUUQsTUFBTSxDQUFDLDhCQUE4QixFQUFFQSxNQUFNLENBQUM7b0JBQ3RELE1BQU0sSUFBSUwsTUFBTSxDQUFDLDhCQUE4QixFQUFFSyxNQUFNRixRQUFRLENBQUM7Z0JBQ2xFO1lBQ0E7Z0JBQ0UsTUFBTSxJQUFJSCxNQUFNO1FBQ3BCO0lBQ0Y7SUFHRixPQUFPWDtBQUNUIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vZmlyZWNyYXdsLXNjcmFwZXItanMvLi9zcmMvbGliL0xMTS1leHRyYWN0aW9uL2luZGV4LnRzP2EyYTAiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IFR1cm5kb3duIGZyb20gXCJ0dXJuZG93blwiO1xuaW1wb3J0IE9wZW5BSSBmcm9tIFwib3BlbmFpXCI7XG5pbXBvcnQgQWp2IGZyb20gXCJhanZcIjtcbmNvbnN0IGFqdiA9IG5ldyBBanYoKTsgLy8gSW5pdGlhbGl6ZSBBSlYgZm9yIEpTT04gc2NoZW1hIHZhbGlkYXRpb25cblxuaW1wb3J0IHsgZ2VuZXJhdGVPcGVuQUlDb21wbGV0aW9ucyB9IGZyb20gXCIuL21vZGVsc1wiO1xuaW1wb3J0IHsgRG9jdW1lbnQsIEV4dHJhY3Rvck9wdGlvbnMgfSBmcm9tIFwiLi4vZW50aXRpZXNcIjtcblxuLy8gR2VuZXJhdGUgY29tcGxldGlvbiB1c2luZyBPcGVuQUlcbmV4cG9ydCBhc3luYyBmdW5jdGlvbiBnZW5lcmF0ZUNvbXBsZXRpb25zKFxuICBkb2N1bWVudHM6IERvY3VtZW50W10sXG4gIGV4dHJhY3Rpb25PcHRpb25zOiBFeHRyYWN0b3JPcHRpb25zXG4pOiBQcm9taXNlPERvY3VtZW50W10+IHtcbiAgLy8gY29uc3Qgc2NoZW1hID0gem9kVG9Kc29uU2NoZW1hKG9wdGlvbnMuc2NoZW1hKVxuXG4gIGNvbnN0IHNjaGVtYSA9IGV4dHJhY3Rpb25PcHRpb25zLmV4dHJhY3Rpb25TY2hlbWE7XG4gIGNvbnN0IHByb21wdCA9IGV4dHJhY3Rpb25PcHRpb25zLmV4dHJhY3Rpb25Qcm9tcHQ7XG5cbiAgY29uc3Qgc3dpdGNoVmFyaWFibGUgPSBcIm9wZW5BSVwiOyAvLyBQbGFjaG9sZGVyLCB3YW50IHRvIHRoaW5rIG1vcmUgYWJvdXQgaG93IHdlIGFic3RyYWN0IHRoZSBtb2RlbCBwcm92aWRlclxuXG4gIGNvbnN0IGNvbXBsZXRpb25zID0gYXdhaXQgUHJvbWlzZS5hbGwoXG4gICAgZG9jdW1lbnRzLm1hcChhc3luYyAoZG9jdW1lbnQ6IERvY3VtZW50KSA9PiB7XG4gICAgICBzd2l0Y2ggKHN3aXRjaFZhcmlhYmxlKSB7XG4gICAgICAgIGNhc2UgXCJvcGVuQUlcIjpcbiAgICAgICAgICBjb25zdCBsbG0gPSBuZXcgT3BlbkFJKCk7XG4gICAgICAgICAgdHJ5e1xuICAgICAgICAgIGNvbnN0IGNvbXBsZXRpb25SZXN1bHQgPSBhd2FpdCBnZW5lcmF0ZU9wZW5BSUNvbXBsZXRpb25zKHtcbiAgICAgICAgICAgIGNsaWVudDogbGxtLFxuICAgICAgICAgICAgZG9jdW1lbnQ6IGRvY3VtZW50LFxuICAgICAgICAgICAgc2NoZW1hOiBzY2hlbWEsXG4gICAgICAgICAgICBwcm9tcHQ6IHByb21wdCxcbiAgICAgICAgICB9KTtcbiAgICAgICAgICAvLyBWYWxpZGF0ZSB0aGUgSlNPTiBvdXRwdXQgYWdhaW5zdCB0aGUgc2NoZW1hIHVzaW5nIEFKVlxuICAgICAgICAgIGNvbnN0IHZhbGlkYXRlID0gYWp2LmNvbXBpbGUoc2NoZW1hKTtcbiAgICAgICAgICBpZiAoIXZhbGlkYXRlKGNvbXBsZXRpb25SZXN1bHQubGxtX2V4dHJhY3Rpb24pKSB7XG4gICAgICAgICAgICAvL1RPRE86IGFkZCBDdXN0b20gRXJyb3IgaGFuZGxpbmcgbWlkZGxld2FyZSB0aGF0IGJ1YmJsZXMgdGhpcyB1cCB3aXRoIHByb3BlciBFcnJvciBjb2RlLCBldGMuXG4gICAgICAgICAgICB0aHJvdyBuZXcgRXJyb3IoXG4gICAgICAgICAgICAgIGBKU09OIHBhcnNpbmcgZXJyb3Iocyk6ICR7dmFsaWRhdGUuZXJyb3JzXG4gICAgICAgICAgICAgICAgPy5tYXAoKGVycikgPT4gZXJyLm1lc3NhZ2UpXG4gICAgICAgICAgICAgICAgLmpvaW4oXCIsIFwiKX1cXG5cXG5MTE0gZXh0cmFjdGlvbiBkaWQgbm90IG1hdGNoIHRoZSBleHRyYWN0aW9uIHNjaGVtYSB5b3UgcHJvdmlkZWQuIFRoaXMgY291bGQgYmUgYmVjYXVzZSBvZiBhIG1vZGVsIGhhbGx1Y2luYXRpb24sIG9yIGFuIEVycm9yIG9uIG91ciBzaWRlLiBUcnkgYWRqdXN0aW5nIHlvdXIgcHJvbXB0LCBhbmQgaWYgaXQgZG9lc24ndCB3b3JrIHJlYWNoIG91dCB0byBzdXBwb3J0LmBcbiAgICAgICAgICAgICk7XG4gICAgICAgICAgfVxuXG4gICAgICAgICAgcmV0dXJuIGNvbXBsZXRpb25SZXN1bHQ7XG4gICAgICAgIH0gY2F0Y2ggKGVycm9yKSB7XG4gICAgICAgICAgY29uc29sZS5lcnJvcihgRXJyb3IgZ2VuZXJhdGluZyBjb21wbGV0aW9uczogJHtlcnJvcn1gKTtcbiAgICAgICAgICB0aHJvdyBuZXcgRXJyb3IoYEVycm9yIGdlbmVyYXRpbmcgY29tcGxldGlvbnM6ICR7ZXJyb3IubWVzc2FnZX1gKTtcbiAgICAgICAgfVxuICAgICAgICBkZWZhdWx0OlxuICAgICAgICAgIHRocm93IG5ldyBFcnJvcihcIkludmFsaWQgY2xpZW50XCIpO1xuICAgICAgfVxuICAgIH0pXG4gICk7XG5cbiAgcmV0dXJuIGNvbXBsZXRpb25zO1xufVxuIl0sIm5hbWVzIjpbIk9wZW5BSSIsIkFqdiIsImFqdiIsImdlbmVyYXRlT3BlbkFJQ29tcGxldGlvbnMiLCJnZW5lcmF0ZUNvbXBsZXRpb25zIiwiZG9jdW1lbnRzIiwiZXh0cmFjdGlvbk9wdGlvbnMiLCJzY2hlbWEiLCJleHRyYWN0aW9uU2NoZW1hIiwicHJvbXB0IiwiZXh0cmFjdGlvblByb21wdCIsInN3aXRjaFZhcmlhYmxlIiwiY29tcGxldGlvbnMiLCJQcm9taXNlIiwiYWxsIiwibWFwIiwiZG9jdW1lbnQiLCJsbG0iLCJjb21wbGV0aW9uUmVzdWx0IiwiY2xpZW50IiwidmFsaWRhdGUiLCJjb21waWxlIiwibGxtX2V4dHJhY3Rpb24iLCJFcnJvciIsImVycm9ycyIsImVyciIsIm1lc3NhZ2UiLCJqb2luIiwiZXJyb3IiLCJjb25zb2xlIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(api)/./src/lib/LLM-extraction/index.ts\n");

/***/ }),

/***/ "(api)/./src/lib/LLM-extraction/models.ts":
/*!******************************************!*\
  !*** ./src/lib/LLM-extraction/models.ts ***!
  \******************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   generateOpenAICompletions: () => (/* binding */ generateOpenAICompletions)\n/* harmony export */ });\nconst defaultPrompt = \"You are a professional web scraper. Extract the contents of the webpage\";\nfunction prepareOpenAIDoc(document) {\n    // Check if the markdown content exists in the document\n    if (!document.markdown) {\n        throw new Error(\"Markdown content is missing in the document. This is likely due to an error in the scraping process. Please try again or reach out to help@mendable.ai\");\n    }\n    return [\n        {\n            type: \"text\",\n            text: document.markdown\n        }\n    ];\n}\nasync function generateOpenAICompletions({ client, model = \"gpt-4-turbo\", document, schema, prompt = defaultPrompt, temperature }) {\n    const openai = client;\n    const content = prepareOpenAIDoc(document);\n    const completion = await openai.chat.completions.create({\n        model,\n        messages: [\n            {\n                role: \"system\",\n                content: prompt\n            },\n            {\n                role: \"user\",\n                content\n            }\n        ],\n        tools: [\n            {\n                type: \"function\",\n                function: {\n                    name: \"extract_content\",\n                    description: \"Extracts the content from the given webpage(s)\",\n                    parameters: schema\n                }\n            }\n        ],\n        tool_choice: {\n            \"type\": \"function\",\n            \"function\": {\n                \"name\": \"extract_content\"\n            }\n        },\n        temperature\n    });\n    const c = completion.choices[0].message.tool_calls[0].function.arguments;\n    // Extract the LLM extraction content from the completion response\n    const llmExtraction = JSON.parse(c);\n    // Return the document with the LLM extraction content added\n    return {\n        ...document,\n        llm_extraction: llmExtraction\n    };\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwaSkvLi9zcmMvbGliL0xMTS1leHRyYWN0aW9uL21vZGVscy50cyIsIm1hcHBpbmdzIjoiOzs7O0FBUUEsTUFBTUEsZ0JBQ0o7QUFFRixTQUFTQyxpQkFDUEMsUUFBa0I7SUFFbEIsdURBQXVEO0lBQ3ZELElBQUksQ0FBQ0EsU0FBU0MsVUFBVTtRQUN0QixNQUFNLElBQUlDLE1BQ1I7SUFFSjtJQUVBLE9BQU87UUFBQztZQUFFQyxNQUFNO1lBQVFDLE1BQU1KLFNBQVNDO1FBQVM7S0FBRTtBQUNwRDtBQUVPLGVBQWVJLDBCQUEwQixFQUM5Q0MsTUFBTSxFQUNOQyxRQUFRLGFBQWEsRUFDckJQLFFBQVEsRUFDUlEsTUFBTSxFQUNOQyxTQUFTWCxhQUFhLEVBQ3RCWSxXQUFXLEVBUVo7SUFDQyxNQUFNQyxTQUFTTDtJQUNmLE1BQU1NLFVBQVViLGlCQUFpQkM7SUFFakMsTUFBTWEsYUFBYSxNQUFNRixPQUFPRyxLQUFLQyxZQUFZQyxPQUFPO1FBQ3REVDtRQUNBVSxVQUFVO1lBQ1I7Z0JBQ0VDLE1BQU07Z0JBQ05OLFNBQVNIO1lBQ1g7WUFDQTtnQkFBRVMsTUFBTTtnQkFBUU47WUFBUTtTQUN6QjtRQUNETyxPQUFPO1lBQ0w7Z0JBQ0VoQixNQUFNO2dCQUNOaUIsVUFBVTtvQkFDUkMsTUFBTTtvQkFDTkMsYUFBYTtvQkFDYkMsWUFBWWY7Z0JBQ2Q7WUFDRjtTQUNEO1FBQ0RnQixhQUFhO1lBQUUsUUFBUTtZQUFZLFlBQVk7Z0JBQUMsUUFBUTtZQUFpQjtRQUFDO1FBQzFFZDtJQUNGO0lBRUEsTUFBTWUsSUFBSVosV0FBV2EsT0FBTyxDQUFDLEVBQUUsQ0FBQ0MsUUFBUUMsVUFBVSxDQUFDLEVBQUUsQ0FBQ1IsU0FBU1M7SUFFL0Qsa0VBQWtFO0lBQ2xFLE1BQU1DLGdCQUFnQkMsS0FBS0MsTUFBTVA7SUFFakMsNERBQTREO0lBQzVELE9BQU87UUFDTCxHQUFHekIsUUFBUTtRQUNYaUMsZ0JBQWdCSDtJQUNsQjtBQUNGIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vZmlyZWNyYXdsLXNjcmFwZXItanMvLi9zcmMvbGliL0xMTS1leHRyYWN0aW9uL21vZGVscy50cz9jNDkwIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBPcGVuQUkgZnJvbSBcIm9wZW5haVwiO1xuaW1wb3J0IHsgRG9jdW1lbnQgfSBmcm9tIFwiLi4vLi4vbGliL2VudGl0aWVzXCI7XG5cbmV4cG9ydCB0eXBlIFNjcmFwZXJDb21wbGV0aW9uUmVzdWx0ID0ge1xuICBkYXRhOiBhbnkgfCBudWxsO1xuICB1cmw6IHN0cmluZztcbn07XG5cbmNvbnN0IGRlZmF1bHRQcm9tcHQgPVxuICBcIllvdSBhcmUgYSBwcm9mZXNzaW9uYWwgd2ViIHNjcmFwZXIuIEV4dHJhY3QgdGhlIGNvbnRlbnRzIG9mIHRoZSB3ZWJwYWdlXCI7XG5cbmZ1bmN0aW9uIHByZXBhcmVPcGVuQUlEb2MoXG4gIGRvY3VtZW50OiBEb2N1bWVudFxuKTogT3BlbkFJLkNoYXQuQ29tcGxldGlvbnMuQ2hhdENvbXBsZXRpb25Db250ZW50UGFydFtdIHtcbiAgLy8gQ2hlY2sgaWYgdGhlIG1hcmtkb3duIGNvbnRlbnQgZXhpc3RzIGluIHRoZSBkb2N1bWVudFxuICBpZiAoIWRvY3VtZW50Lm1hcmtkb3duKSB7XG4gICAgdGhyb3cgbmV3IEVycm9yKFxuICAgICAgXCJNYXJrZG93biBjb250ZW50IGlzIG1pc3NpbmcgaW4gdGhlIGRvY3VtZW50LiBUaGlzIGlzIGxpa2VseSBkdWUgdG8gYW4gZXJyb3IgaW4gdGhlIHNjcmFwaW5nIHByb2Nlc3MuIFBsZWFzZSB0cnkgYWdhaW4gb3IgcmVhY2ggb3V0IHRvIGhlbHBAbWVuZGFibGUuYWlcIlxuICAgICk7XG4gIH1cblxuICByZXR1cm4gW3sgdHlwZTogXCJ0ZXh0XCIsIHRleHQ6IGRvY3VtZW50Lm1hcmtkb3duIH1dO1xufVxuXG5leHBvcnQgYXN5bmMgZnVuY3Rpb24gZ2VuZXJhdGVPcGVuQUlDb21wbGV0aW9ucyh7XG4gIGNsaWVudCxcbiAgbW9kZWwgPSBcImdwdC00LXR1cmJvXCIsXG4gIGRvY3VtZW50LFxuICBzY2hlbWEsIC8vVE9ETyAtIGFkZCB6b2QgZHluYW1pYyB0eXBlIGNoZWNraW5nXG4gIHByb21wdCA9IGRlZmF1bHRQcm9tcHQsXG4gIHRlbXBlcmF0dXJlLFxufToge1xuICBjbGllbnQ6IE9wZW5BSTtcbiAgbW9kZWw/OiBzdHJpbmc7XG4gIGRvY3VtZW50OiBEb2N1bWVudDtcbiAgc2NoZW1hOiBhbnk7IC8vIFRoaXMgc2hvdWxkIGJlIHJlcGxhY2VkIHdpdGggYSBwcm9wZXIgWm9kIHNjaGVtYSB0eXBlIHdoZW4gYXZhaWxhYmxlXG4gIHByb21wdD86IHN0cmluZztcbiAgdGVtcGVyYXR1cmU/OiBudW1iZXI7XG59KTogUHJvbWlzZTxEb2N1bWVudD4ge1xuICBjb25zdCBvcGVuYWkgPSBjbGllbnQgYXMgT3BlbkFJO1xuICBjb25zdCBjb250ZW50ID0gcHJlcGFyZU9wZW5BSURvYyhkb2N1bWVudCk7XG5cbiAgY29uc3QgY29tcGxldGlvbiA9IGF3YWl0IG9wZW5haS5jaGF0LmNvbXBsZXRpb25zLmNyZWF0ZSh7XG4gICAgbW9kZWwsXG4gICAgbWVzc2FnZXM6IFtcbiAgICAgIHtcbiAgICAgICAgcm9sZTogXCJzeXN0ZW1cIixcbiAgICAgICAgY29udGVudDogcHJvbXB0LFxuICAgICAgfSxcbiAgICAgIHsgcm9sZTogXCJ1c2VyXCIsIGNvbnRlbnQgfSxcbiAgICBdLFxuICAgIHRvb2xzOiBbXG4gICAgICB7XG4gICAgICAgIHR5cGU6IFwiZnVuY3Rpb25cIixcbiAgICAgICAgZnVuY3Rpb246IHtcbiAgICAgICAgICBuYW1lOiBcImV4dHJhY3RfY29udGVudFwiLFxuICAgICAgICAgIGRlc2NyaXB0aW9uOiBcIkV4dHJhY3RzIHRoZSBjb250ZW50IGZyb20gdGhlIGdpdmVuIHdlYnBhZ2UocylcIixcbiAgICAgICAgICBwYXJhbWV0ZXJzOiBzY2hlbWEsXG4gICAgICAgIH0sXG4gICAgICB9LFxuICAgIF0sXG4gICAgdG9vbF9jaG9pY2U6IHsgXCJ0eXBlXCI6IFwiZnVuY3Rpb25cIiwgXCJmdW5jdGlvblwiOiB7XCJuYW1lXCI6IFwiZXh0cmFjdF9jb250ZW50XCJ9fSxcbiAgICB0ZW1wZXJhdHVyZSxcbiAgfSk7XG5cbiAgY29uc3QgYyA9IGNvbXBsZXRpb24uY2hvaWNlc1swXS5tZXNzYWdlLnRvb2xfY2FsbHNbMF0uZnVuY3Rpb24uYXJndW1lbnRzO1xuXG4gIC8vIEV4dHJhY3QgdGhlIExMTSBleHRyYWN0aW9uIGNvbnRlbnQgZnJvbSB0aGUgY29tcGxldGlvbiByZXNwb25zZVxuICBjb25zdCBsbG1FeHRyYWN0aW9uID0gSlNPTi5wYXJzZShjKTtcblxuICAvLyBSZXR1cm4gdGhlIGRvY3VtZW50IHdpdGggdGhlIExMTSBleHRyYWN0aW9uIGNvbnRlbnQgYWRkZWRcbiAgcmV0dXJuIHtcbiAgICAuLi5kb2N1bWVudCxcbiAgICBsbG1fZXh0cmFjdGlvbjogbGxtRXh0cmFjdGlvbixcbiAgfTtcbn1cblxuIl0sIm5hbWVzIjpbImRlZmF1bHRQcm9tcHQiLCJwcmVwYXJlT3BlbkFJRG9jIiwiZG9jdW1lbnQiLCJtYXJrZG93biIsIkVycm9yIiwidHlwZSIsInRleHQiLCJnZW5lcmF0ZU9wZW5BSUNvbXBsZXRpb25zIiwiY2xpZW50IiwibW9kZWwiLCJzY2hlbWEiLCJwcm9tcHQiLCJ0ZW1wZXJhdHVyZSIsIm9wZW5haSIsImNvbnRlbnQiLCJjb21wbGV0aW9uIiwiY2hhdCIsImNvbXBsZXRpb25zIiwiY3JlYXRlIiwibWVzc2FnZXMiLCJyb2xlIiwidG9vbHMiLCJmdW5jdGlvbiIsIm5hbWUiLCJkZXNjcmlwdGlvbiIsInBhcmFtZXRlcnMiLCJ0b29sX2Nob2ljZSIsImMiLCJjaG9pY2VzIiwibWVzc2FnZSIsInRvb2xfY2FsbHMiLCJhcmd1bWVudHMiLCJsbG1FeHRyYWN0aW9uIiwiSlNPTiIsInBhcnNlIiwibGxtX2V4dHJhY3Rpb24iXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(api)/./src/lib/LLM-extraction/models.ts\n");

/***/ }),

/***/ "(api)/./src/lib/html-to-markdown.ts":
/*!*************************************!*\
  !*** ./src/lib/html-to-markdown.ts ***!
  \*************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   parseMarkdown: () => (/* binding */ parseMarkdown)\n/* harmony export */ });\nfunction parseMarkdown(html) {\n    var TurndownService = __webpack_require__(/*! turndown */ \"turndown\");\n    var turndownPluginGfm = __webpack_require__(/*! joplin-turndown-plugin-gfm */ \"joplin-turndown-plugin-gfm\");\n    const turndownService = new TurndownService();\n    turndownService.addRule(\"inlineLink\", {\n        filter: function(node, options) {\n            return options.linkStyle === \"inlined\" && node.nodeName === \"A\" && node.getAttribute(\"href\");\n        },\n        replacement: function(content, node) {\n            var href = node.getAttribute(\"href\").trim();\n            var title = node.title ? ' \"' + node.title + '\"' : \"\";\n            return \"[\" + content.trim() + \"](\" + href + title + \")\\n\";\n        }\n    });\n    var gfm = turndownPluginGfm.gfm;\n    turndownService.use(gfm);\n    let markdownContent = turndownService.turndown(html);\n    // multiple line links\n    let insideLinkContent = false;\n    let newMarkdownContent = \"\";\n    let linkOpenCount = 0;\n    for(let i = 0; i < markdownContent.length; i++){\n        const char = markdownContent[i];\n        if (char == \"[\") {\n            linkOpenCount++;\n        } else if (char == \"]\") {\n            linkOpenCount = Math.max(0, linkOpenCount - 1);\n        }\n        insideLinkContent = linkOpenCount > 0;\n        if (insideLinkContent && char == \"\\n\") {\n            newMarkdownContent += \"\\\\\" + \"\\n\";\n        } else {\n            newMarkdownContent += char;\n        }\n    }\n    markdownContent = newMarkdownContent;\n    // Remove [Skip to Content](#page) and [Skip to content](#skip)\n    markdownContent = markdownContent.replace(/\\[Skip to Content\\]\\(#[^\\)]*\\)/gi, \"\");\n    return markdownContent;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwaSkvLi9zcmMvbGliL2h0bWwtdG8tbWFya2Rvd24udHMiLCJtYXBwaW5ncyI6Ijs7OztBQUNPLFNBQVNBLGNBQWNDLElBQVk7SUFDeEMsSUFBSUMsa0JBQWtCQyxtQkFBT0EsQ0FBQywwQkFBVTtJQUN4QyxJQUFJQyxvQkFBb0JELG1CQUFPQSxDQUFDO0lBR2hDLE1BQU1FLGtCQUFrQixJQUFJSDtJQUM1QkcsZ0JBQWdCQyxRQUFRLGNBQWM7UUFDcENDLFFBQVEsU0FBVUMsSUFBSSxFQUFFQyxPQUFPO1lBQzdCLE9BQ0VBLFFBQVFDLGNBQWMsYUFDdEJGLEtBQUtHLGFBQWEsT0FDbEJILEtBQUtJLGFBQWE7UUFFdEI7UUFDQUMsYUFBYSxTQUFVQyxPQUFPLEVBQUVOLElBQUk7WUFDbEMsSUFBSU8sT0FBT1AsS0FBS0ksYUFBYSxRQUFRSTtZQUNyQyxJQUFJQyxRQUFRVCxLQUFLUyxRQUFRLE9BQU9ULEtBQUtTLFFBQVEsTUFBTTtZQUNuRCxPQUFPLE1BQU1ILFFBQVFFLFNBQVMsT0FBT0QsT0FBT0UsUUFBUTtRQUN0RDtJQUNGO0lBQ0EsSUFBSUMsTUFBTWQsa0JBQWtCYztJQUM1QmIsZ0JBQWdCYyxJQUFJRDtJQUNwQixJQUFJRSxrQkFBa0JmLGdCQUFnQmdCLFNBQVNwQjtJQUUvQyxzQkFBc0I7SUFDdEIsSUFBSXFCLG9CQUFvQjtJQUN4QixJQUFJQyxxQkFBcUI7SUFDekIsSUFBSUMsZ0JBQWdCO0lBQ3BCLElBQUssSUFBSUMsSUFBSSxHQUFHQSxJQUFJTCxnQkFBZ0JNLFFBQVFELElBQUs7UUFDL0MsTUFBTUUsT0FBT1AsZUFBZSxDQUFDSyxFQUFFO1FBRS9CLElBQUlFLFFBQVEsS0FBSztZQUNmSDtRQUNGLE9BQU8sSUFBSUcsUUFBUSxLQUFLO1lBQ3RCSCxnQkFBZ0JJLEtBQUtDLElBQUksR0FBR0wsZ0JBQWdCO1FBQzlDO1FBQ0FGLG9CQUFvQkUsZ0JBQWdCO1FBRXBDLElBQUlGLHFCQUFxQkssUUFBUSxNQUFNO1lBQ3JDSixzQkFBc0IsT0FBTztRQUMvQixPQUFPO1lBQ0xBLHNCQUFzQkk7UUFDeEI7SUFDRjtJQUNBUCxrQkFBa0JHO0lBRWxCLCtEQUErRDtJQUMvREgsa0JBQWtCQSxnQkFBZ0JVLFFBQ2hDLG9DQUNBO0lBR0YsT0FBT1Y7QUFDVCIsInNvdXJjZXMiOlsid2VicGFjazovL2ZpcmVjcmF3bC1zY3JhcGVyLWpzLy4vc3JjL2xpYi9odG1sLXRvLW1hcmtkb3duLnRzP2M2MWUiXSwic291cmNlc0NvbnRlbnQiOlsiXG5leHBvcnQgZnVuY3Rpb24gcGFyc2VNYXJrZG93bihodG1sOiBzdHJpbmcpIHtcbiAgdmFyIFR1cm5kb3duU2VydmljZSA9IHJlcXVpcmUoXCJ0dXJuZG93blwiKTtcbiAgdmFyIHR1cm5kb3duUGx1Z2luR2ZtID0gcmVxdWlyZSgnam9wbGluLXR1cm5kb3duLXBsdWdpbi1nZm0nKVxuXG5cbiAgY29uc3QgdHVybmRvd25TZXJ2aWNlID0gbmV3IFR1cm5kb3duU2VydmljZSgpO1xuICB0dXJuZG93blNlcnZpY2UuYWRkUnVsZShcImlubGluZUxpbmtcIiwge1xuICAgIGZpbHRlcjogZnVuY3Rpb24gKG5vZGUsIG9wdGlvbnMpIHtcbiAgICAgIHJldHVybiAoXG4gICAgICAgIG9wdGlvbnMubGlua1N0eWxlID09PSBcImlubGluZWRcIiAmJlxuICAgICAgICBub2RlLm5vZGVOYW1lID09PSBcIkFcIiAmJlxuICAgICAgICBub2RlLmdldEF0dHJpYnV0ZShcImhyZWZcIilcbiAgICAgICk7XG4gICAgfSxcbiAgICByZXBsYWNlbWVudDogZnVuY3Rpb24gKGNvbnRlbnQsIG5vZGUpIHtcbiAgICAgIHZhciBocmVmID0gbm9kZS5nZXRBdHRyaWJ1dGUoXCJocmVmXCIpLnRyaW0oKTtcbiAgICAgIHZhciB0aXRsZSA9IG5vZGUudGl0bGUgPyAnIFwiJyArIG5vZGUudGl0bGUgKyAnXCInIDogXCJcIjtcbiAgICAgIHJldHVybiBcIltcIiArIGNvbnRlbnQudHJpbSgpICsgXCJdKFwiICsgaHJlZiArIHRpdGxlICsgXCIpXFxuXCI7XG4gICAgfSxcbiAgfSk7XG4gIHZhciBnZm0gPSB0dXJuZG93blBsdWdpbkdmbS5nZm07XG4gIHR1cm5kb3duU2VydmljZS51c2UoZ2ZtKTtcbiAgbGV0IG1hcmtkb3duQ29udGVudCA9IHR1cm5kb3duU2VydmljZS50dXJuZG93bihodG1sKTtcblxuICAvLyBtdWx0aXBsZSBsaW5lIGxpbmtzXG4gIGxldCBpbnNpZGVMaW5rQ29udGVudCA9IGZhbHNlO1xuICBsZXQgbmV3TWFya2Rvd25Db250ZW50ID0gXCJcIjtcbiAgbGV0IGxpbmtPcGVuQ291bnQgPSAwO1xuICBmb3IgKGxldCBpID0gMDsgaSA8IG1hcmtkb3duQ29udGVudC5sZW5ndGg7IGkrKykge1xuICAgIGNvbnN0IGNoYXIgPSBtYXJrZG93bkNvbnRlbnRbaV07XG5cbiAgICBpZiAoY2hhciA9PSBcIltcIikge1xuICAgICAgbGlua09wZW5Db3VudCsrO1xuICAgIH0gZWxzZSBpZiAoY2hhciA9PSBcIl1cIikge1xuICAgICAgbGlua09wZW5Db3VudCA9IE1hdGgubWF4KDAsIGxpbmtPcGVuQ291bnQgLSAxKTtcbiAgICB9XG4gICAgaW5zaWRlTGlua0NvbnRlbnQgPSBsaW5rT3BlbkNvdW50ID4gMDtcblxuICAgIGlmIChpbnNpZGVMaW5rQ29udGVudCAmJiBjaGFyID09IFwiXFxuXCIpIHtcbiAgICAgIG5ld01hcmtkb3duQ29udGVudCArPSBcIlxcXFxcIiArIFwiXFxuXCI7XG4gICAgfSBlbHNlIHtcbiAgICAgIG5ld01hcmtkb3duQ29udGVudCArPSBjaGFyO1xuICAgIH1cbiAgfVxuICBtYXJrZG93bkNvbnRlbnQgPSBuZXdNYXJrZG93bkNvbnRlbnQ7XG5cbiAgLy8gUmVtb3ZlIFtTa2lwIHRvIENvbnRlbnRdKCNwYWdlKSBhbmQgW1NraXAgdG8gY29udGVudF0oI3NraXApXG4gIG1hcmtkb3duQ29udGVudCA9IG1hcmtkb3duQ29udGVudC5yZXBsYWNlKFxuICAgIC9cXFtTa2lwIHRvIENvbnRlbnRcXF1cXCgjW15cXCldKlxcKS9naSxcbiAgICBcIlwiXG4gICk7XG5cbiAgcmV0dXJuIG1hcmtkb3duQ29udGVudDtcbn1cbiJdLCJuYW1lcyI6WyJwYXJzZU1hcmtkb3duIiwiaHRtbCIsIlR1cm5kb3duU2VydmljZSIsInJlcXVpcmUiLCJ0dXJuZG93blBsdWdpbkdmbSIsInR1cm5kb3duU2VydmljZSIsImFkZFJ1bGUiLCJmaWx0ZXIiLCJub2RlIiwib3B0aW9ucyIsImxpbmtTdHlsZSIsIm5vZGVOYW1lIiwiZ2V0QXR0cmlidXRlIiwicmVwbGFjZW1lbnQiLCJjb250ZW50IiwiaHJlZiIsInRyaW0iLCJ0aXRsZSIsImdmbSIsInVzZSIsIm1hcmtkb3duQ29udGVudCIsInR1cm5kb3duIiwiaW5zaWRlTGlua0NvbnRlbnQiLCJuZXdNYXJrZG93bkNvbnRlbnQiLCJsaW5rT3BlbkNvdW50IiwiaSIsImxlbmd0aCIsImNoYXIiLCJNYXRoIiwibWF4IiwicmVwbGFjZSJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(api)/./src/lib/html-to-markdown.ts\n");

/***/ }),

/***/ "(api)/./src/lib/parseApi.ts":
/*!*****************************!*\
  !*** ./src/lib/parseApi.ts ***!
  \*****************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   parseApi: () => (/* binding */ parseApi),\n/* harmony export */   uuidToFcUuid: () => (/* binding */ uuidToFcUuid)\n/* harmony export */ });\nfunction parseApi(api) {\n    // Handle older versions of the API that don't have the fc- prefix\n    if (!api.startsWith(\"fc-\")) {\n        return api;\n    }\n    // remove the fc- prefix\n    // re add all the dashes based on the uuidv4 format\n    // 3d478a29-6e59-403e-85c7-94aba81ffd2a\n    const uuid = api.replace(/^fc-/, \"\").replace(/(.{8})(.{4})(.{4})(.{4})(.{12})/, \"$1-$2-$3-$4-$5\");\n    return uuid;\n}\nfunction uuidToFcUuid(uuid) {\n    const uuidWithoutDashes = uuid.replace(/-/g, \"\");\n    return `fc-${uuidWithoutDashes}`;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwaSkvLi9zcmMvbGliL3BhcnNlQXBpLnRzIiwibWFwcGluZ3MiOiI7Ozs7O0FBQU8sU0FBU0EsU0FBU0MsR0FBVztJQUNsQyxrRUFBa0U7SUFDbEUsSUFBSSxDQUFDQSxJQUFJQyxXQUFXLFFBQVE7UUFDMUIsT0FBT0Q7SUFDVDtJQUVBLHdCQUF3QjtJQUN4QixtREFBbUQ7SUFDbkQsdUNBQXVDO0lBQ3ZDLE1BQU1FLE9BQU9GLElBQ1ZHLFFBQVEsUUFBUSxJQUNoQkEsUUFBUSxtQ0FBbUM7SUFDOUMsT0FBT0Q7QUFDVDtBQUdPLFNBQVNFLGFBQWFGLElBQVk7SUFDdkMsTUFBTUcsb0JBQW9CSCxLQUFLQyxRQUFRLE1BQU07SUFDN0MsT0FBTyxDQUFDLEdBQUcsRUFBRUUsa0JBQWtCLENBQUM7QUFDbEMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9maXJlY3Jhd2wtc2NyYXBlci1qcy8uL3NyYy9saWIvcGFyc2VBcGkudHM/ZThjYSJdLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQgZnVuY3Rpb24gcGFyc2VBcGkoYXBpOiBzdHJpbmcpIHtcbiAgLy8gSGFuZGxlIG9sZGVyIHZlcnNpb25zIG9mIHRoZSBBUEkgdGhhdCBkb24ndCBoYXZlIHRoZSBmYy0gcHJlZml4XG4gIGlmICghYXBpLnN0YXJ0c1dpdGgoXCJmYy1cIikpIHtcbiAgICByZXR1cm4gYXBpO1xuICB9XG5cbiAgLy8gcmVtb3ZlIHRoZSBmYy0gcHJlZml4XG4gIC8vIHJlIGFkZCBhbGwgdGhlIGRhc2hlcyBiYXNlZCBvbiB0aGUgdXVpZHY0IGZvcm1hdFxuICAvLyAzZDQ3OGEyOS02ZTU5LTQwM2UtODVjNy05NGFiYTgxZmZkMmFcbiAgY29uc3QgdXVpZCA9IGFwaVxuICAgIC5yZXBsYWNlKC9eZmMtLywgXCJcIilcbiAgICAucmVwbGFjZSgvKC57OH0pKC57NH0pKC57NH0pKC57NH0pKC57MTJ9KS8sIFwiJDEtJDItJDMtJDQtJDVcIik7XG4gIHJldHVybiB1dWlkO1xufVxuXG5cbmV4cG9ydCBmdW5jdGlvbiB1dWlkVG9GY1V1aWQodXVpZDogc3RyaW5nKSB7XG4gIGNvbnN0IHV1aWRXaXRob3V0RGFzaGVzID0gdXVpZC5yZXBsYWNlKC8tL2csIFwiXCIpO1xuICByZXR1cm4gYGZjLSR7dXVpZFdpdGhvdXREYXNoZXN9YDtcbn1cbiJdLCJuYW1lcyI6WyJwYXJzZUFwaSIsImFwaSIsInN0YXJ0c1dpdGgiLCJ1dWlkIiwicmVwbGFjZSIsInV1aWRUb0ZjVXVpZCIsInV1aWRXaXRob3V0RGFzaGVzIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(api)/./src/lib/parseApi.ts\n");

/***/ }),

/***/ "(api)/./src/lib/redis.ts":
/*!**************************!*\
  !*** ./src/lib/redis.ts ***!
  \**************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var redis__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! redis */ \"redis\");\n/* harmony import */ var redis__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(redis__WEBPACK_IMPORTED_MODULE_0__);\n\nlet redisClient;\nif (true) {\n    if (!global.redis) {\n        redisClient = redis__WEBPACK_IMPORTED_MODULE_0__.createClient({\n            url: process.env.REDIS_URL,\n            legacyMode: true\n        });\n        redisClient.connect().catch(console.error);\n        global.redis = redisClient;\n    } else {\n        redisClient = global.redis;\n    }\n    console.log(process.env.REDIS_URL);\n    redisClient.on(\"connect\", (err)=>{\n        try {\n            if (!err) console.log(\"Connected to Redis Session Store!\");\n        } catch (error) {}\n    });\n}\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (redisClient);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwaSkvLi9zcmMvbGliL3JlZGlzLnRzIiwibWFwcGluZ3MiOiI7Ozs7OztBQUErQjtBQUUvQixJQUFJQztBQUVKLElBQUksSUFBa0IsRUFBYTtJQUNqQyxJQUFJLENBQUNDLE9BQU9GLE9BQU87UUFDakJDLGNBQWNELCtDQUFrQkcsQ0FBQztZQUMvQkMsS0FBS0MsUUFBUUMsSUFBSUM7WUFDakJDLFlBQVk7UUFDZDtRQUNBUCxZQUFZUSxVQUFVQyxNQUFNQyxRQUFRQztRQUNwQ1YsT0FBT0YsUUFBUUM7SUFDakIsT0FBTztRQUNMQSxjQUFjQyxPQUFPRjtJQUN2QjtJQUNBVyxRQUFRRSxJQUFJUixRQUFRQyxJQUFJQztJQUN4Qk4sWUFBWWEsR0FBRyxXQUFXLENBQUNDO1FBQ3pCLElBQUk7WUFDRixJQUFJLENBQUNBLEtBQUtKLFFBQVFFLElBQUk7UUFDeEIsRUFBRSxPQUFPRCxPQUFPLENBQUM7SUFDbkI7QUFDRjtBQUVBLGlFQUFlWCxXQUFXQSxFQUFDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vZmlyZWNyYXdsLXNjcmFwZXItanMvLi9zcmMvbGliL3JlZGlzLnRzPzkyNWQiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0ICogYXMgcmVkaXMgZnJvbSAncmVkaXMnO1xuXG5sZXQgcmVkaXNDbGllbnQ6IHJlZGlzLlJlZGlzQ2xpZW50VHlwZTtcblxuaWYgKHR5cGVvZiB3aW5kb3cgPT09ICd1bmRlZmluZWQnKSB7XG4gIGlmICghZ2xvYmFsLnJlZGlzKSB7XG4gICAgcmVkaXNDbGllbnQgPSByZWRpcy5jcmVhdGVDbGllbnQoe1xuICAgICAgdXJsOiBwcm9jZXNzLmVudi5SRURJU19VUkwsXG4gICAgICBsZWdhY3lNb2RlOiB0cnVlLFxuICAgIH0pO1xuICAgIHJlZGlzQ2xpZW50LmNvbm5lY3QoKS5jYXRjaChjb25zb2xlLmVycm9yKTtcbiAgICBnbG9iYWwucmVkaXMgPSByZWRpc0NsaWVudDtcbiAgfSBlbHNlIHtcbiAgICByZWRpc0NsaWVudCA9IGdsb2JhbC5yZWRpcztcbiAgfVxuICBjb25zb2xlLmxvZyhwcm9jZXNzLmVudi5SRURJU19VUkwpXG4gIHJlZGlzQ2xpZW50Lm9uKFwiY29ubmVjdFwiLCAoZXJyKSA9PiB7XG4gICAgdHJ5IHtcbiAgICAgIGlmICghZXJyKSBjb25zb2xlLmxvZyhcIkNvbm5lY3RlZCB0byBSZWRpcyBTZXNzaW9uIFN0b3JlIVwiKTtcbiAgICB9IGNhdGNoIChlcnJvcikge31cbiAgfSk7XG59XG5cbmV4cG9ydCBkZWZhdWx0IHJlZGlzQ2xpZW50OyJdLCJuYW1lcyI6WyJyZWRpcyIsInJlZGlzQ2xpZW50IiwiZ2xvYmFsIiwiY3JlYXRlQ2xpZW50IiwidXJsIiwicHJvY2VzcyIsImVudiIsIlJFRElTX1VSTCIsImxlZ2FjeU1vZGUiLCJjb25uZWN0IiwiY2F0Y2giLCJjb25zb2xlIiwiZXJyb3IiLCJsb2ciLCJvbiIsImVyciJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(api)/./src/lib/redis.ts\n");

/***/ }),

/***/ "(api)/./src/lib/withAuth.ts":
/*!*****************************!*\
  !*** ./src/lib/withAuth.ts ***!
  \*****************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   withAuth: () => (/* binding */ withAuth)\n/* harmony export */ });\nlet warningCount = 0;\nfunction withAuth(originalFunction) {\n    return async function(...args) {\n        if (process.env.USE_DB_AUTHENTICATION === \"false\") {\n            if (warningCount < 5) {\n                console.warn(\"WARNING - You're bypassing authentication\");\n                warningCount++;\n            }\n            return {\n                success: true\n            };\n        } else {\n            try {\n                return await originalFunction(...args);\n            } catch (error) {\n                console.error(\"Error in withAuth function: \", error);\n                return {\n                    success: false,\n                    error: error.message\n                };\n            }\n        }\n    };\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwaSkvLi9zcmMvbGliL3dpdGhBdXRoLnRzIiwibWFwcGluZ3MiOiI7Ozs7QUFFQSxJQUFJQSxlQUFlO0FBRVosU0FBU0MsU0FDZEMsZ0JBQTRDO0lBRTVDLE9BQU8sZUFBZ0IsR0FBR0MsSUFBTztRQUMvQixJQUFJQyxRQUFRQyxJQUFJQywwQkFBMEIsU0FBUztZQUNqRCxJQUFJTixlQUFlLEdBQUc7Z0JBQ3BCTyxRQUFRQyxLQUFLO2dCQUNiUjtZQUNGO1lBQ0EsT0FBTztnQkFBRVMsU0FBUztZQUFLO1FBQ3pCLE9BQU87WUFDTCxJQUFJO2dCQUNGLE9BQU8sTUFBTVAsb0JBQW9CQztZQUNuQyxFQUFFLE9BQU9PLE9BQU87Z0JBQ2RILFFBQVFHLE1BQU0sZ0NBQWdDQTtnQkFDOUMsT0FBTztvQkFBRUQsU0FBUztvQkFBT0MsT0FBT0EsTUFBTUM7Z0JBQVE7WUFDaEQ7UUFDRjtJQUNGO0FBQ0YiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9maXJlY3Jhd2wtc2NyYXBlci1qcy8uL3NyYy9saWIvd2l0aEF1dGgudHM/NjM3YSJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBBdXRoUmVzcG9uc2UgfSBmcm9tIFwiLi4vLi4vc3JjL3R5cGVzXCI7XG5cbmxldCB3YXJuaW5nQ291bnQgPSAwO1xuXG5leHBvcnQgZnVuY3Rpb24gd2l0aEF1dGg8VCBleHRlbmRzIEF1dGhSZXNwb25zZSwgVSBleHRlbmRzIGFueVtdPihcbiAgb3JpZ2luYWxGdW5jdGlvbjogKC4uLmFyZ3M6IFUpID0+IFByb21pc2U8VD5cbikge1xuICByZXR1cm4gYXN5bmMgZnVuY3Rpb24gKC4uLmFyZ3M6IFUpOiBQcm9taXNlPFQ+IHtcbiAgICBpZiAocHJvY2Vzcy5lbnYuVVNFX0RCX0FVVEhFTlRJQ0FUSU9OID09PSBcImZhbHNlXCIpIHtcbiAgICAgIGlmICh3YXJuaW5nQ291bnQgPCA1KSB7XG4gICAgICAgIGNvbnNvbGUud2FybihcIldBUk5JTkcgLSBZb3UncmUgYnlwYXNzaW5nIGF1dGhlbnRpY2F0aW9uXCIpO1xuICAgICAgICB3YXJuaW5nQ291bnQrKztcbiAgICAgIH1cbiAgICAgIHJldHVybiB7IHN1Y2Nlc3M6IHRydWUgfSBhcyBUO1xuICAgIH0gZWxzZSB7XG4gICAgICB0cnkge1xuICAgICAgICByZXR1cm4gYXdhaXQgb3JpZ2luYWxGdW5jdGlvbiguLi5hcmdzKTtcbiAgICAgIH0gY2F0Y2ggKGVycm9yKSB7XG4gICAgICAgIGNvbnNvbGUuZXJyb3IoXCJFcnJvciBpbiB3aXRoQXV0aCBmdW5jdGlvbjogXCIsIGVycm9yKTtcbiAgICAgICAgcmV0dXJuIHsgc3VjY2VzczogZmFsc2UsIGVycm9yOiBlcnJvci5tZXNzYWdlIH0gYXMgVDtcbiAgICAgIH1cbiAgICB9XG4gIH07XG59XG4iXSwibmFtZXMiOlsid2FybmluZ0NvdW50Iiwid2l0aEF1dGgiLCJvcmlnaW5hbEZ1bmN0aW9uIiwiYXJncyIsInByb2Nlc3MiLCJlbnYiLCJVU0VfREJfQVVUSEVOVElDQVRJT04iLCJjb25zb2xlIiwid2FybiIsInN1Y2Nlc3MiLCJlcnJvciIsIm1lc3NhZ2UiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(api)/./src/lib/withAuth.ts\n");

/***/ }),

/***/ "(api)/./src/pages/api/auth.ts":
/*!*******************************!*\
  !*** ./src/pages/api/auth.ts ***!
  \*******************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   authenticateUser: () => (/* binding */ authenticateUser),\n/* harmony export */   supaAuthenticateUser: () => (/* binding */ supaAuthenticateUser)\n/* harmony export */ });\n/* harmony import */ var _lib_parseApi__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../lib/parseApi */ \"(api)/./src/lib/parseApi.ts\");\n/* harmony import */ var _services_rate_limiter__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../services/rate-limiter */ \"(api)/./src/services/rate-limiter.ts\");\n/* harmony import */ var _types__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../types */ \"(api)/./src/types.ts\");\n/* harmony import */ var _services_supabase__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../services/supabase */ \"(api)/./src/services/supabase.ts\");\n/* harmony import */ var _lib_withAuth__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../lib/withAuth */ \"(api)/./src/lib/withAuth.ts\");\n\n\n\n\n\nasync function authenticateUser(req, res, mode) {\n    return (0,_lib_withAuth__WEBPACK_IMPORTED_MODULE_4__.withAuth)(supaAuthenticateUser)(req, res, mode);\n}\nasync function supaAuthenticateUser(req, res, mode) {\n    const authHeader = req.headers.authorization;\n    if (!authHeader) {\n        return {\n            success: false,\n            error: \"Unauthorized\",\n            status: 401\n        };\n    }\n    const token = authHeader.split(\" \")[1]; // Extract the token from \"Bearer <token>\"\n    if (!token) {\n        return {\n            success: false,\n            error: \"Unauthorized: Token missing\",\n            status: 401\n        };\n    }\n    try {\n        const incomingIP = req.headers[\"x-forwarded-for\"] || req.socket.remoteAddress;\n        const iptoken = incomingIP + token;\n        await (0,_services_rate_limiter__WEBPACK_IMPORTED_MODULE_1__.getRateLimiter)(token === \"this_is_just_a_preview_token\" ? _types__WEBPACK_IMPORTED_MODULE_2__.RateLimiterMode.Preview : mode).consume(iptoken);\n    } catch (rateLimiterRes) {\n        console.error(rateLimiterRes);\n        return {\n            success: false,\n            error: \"Rate limit exceeded. Too many requests, try again in 1 minute.\",\n            status: 429\n        };\n    }\n    if (token === \"this_is_just_a_preview_token\" && (mode === _types__WEBPACK_IMPORTED_MODULE_2__.RateLimiterMode.Scrape || mode === _types__WEBPACK_IMPORTED_MODULE_2__.RateLimiterMode.Preview || mode === _types__WEBPACK_IMPORTED_MODULE_2__.RateLimiterMode.Search)) {\n        return {\n            success: true,\n            team_id: \"preview\"\n        };\n    // check the origin of the request and make sure its from firecrawl.dev\n    // const origin = req.headers.origin;\n    // if (origin && origin.includes(\"firecrawl.dev\")){\n    //   return { success: true, team_id: \"preview\" };\n    // }\n    // if(process.env.ENV !== \"production\") {\n    //   return { success: true, team_id: \"preview\" };\n    // }\n    // return { success: false, error: \"Unauthorized: Invalid token\", status: 401 };\n    }\n    const normalizedApi = (0,_lib_parseApi__WEBPACK_IMPORTED_MODULE_0__.parseApi)(token);\n    // make sure api key is valid, based on the api_keys table in supabase\n    const { data, error } = await _services_supabase__WEBPACK_IMPORTED_MODULE_3__.supabase_service.from(\"api_keys\").select(\"*\").eq(\"key\", normalizedApi);\n    if (error || !data || data.length === 0) {\n        return {\n            success: false,\n            error: \"Unauthorized: Invalid token\",\n            status: 401\n        };\n    }\n    return {\n        success: true,\n        team_id: data[0].team_id\n    };\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwaSkvLi9zcmMvcGFnZXMvYXBpL2F1dGgudHMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7OztBQUE4QztBQUNlO0FBQ0Q7QUFDRDtBQUNiO0FBR3ZDLGVBQWVLLGlCQUFpQkMsR0FBRyxFQUFFQyxHQUFHLEVBQUVDLElBQXNCO0lBQ3JFLE9BQU9KLHVEQUFRQSxDQUFDSyxzQkFBc0JILEtBQUtDLEtBQUtDO0FBQ2xEO0FBRU8sZUFBZUMscUJBQ3BCSCxHQUFHLEVBQ0hDLEdBQUcsRUFDSEMsSUFBc0I7SUFRdEIsTUFBTUUsYUFBYUosSUFBSUssUUFBUUM7SUFDL0IsSUFBSSxDQUFDRixZQUFZO1FBQ2YsT0FBTztZQUFFRyxTQUFTO1lBQU9DLE9BQU87WUFBZ0JDLFFBQVE7UUFBSTtJQUM5RDtJQUNBLE1BQU1DLFFBQVFOLFdBQVdPLE1BQU0sSUFBSSxDQUFDLEVBQUUsRUFBRSwwQ0FBMEM7SUFDbEYsSUFBSSxDQUFDRCxPQUFPO1FBQ1YsT0FBTztZQUNMSCxTQUFTO1lBQ1RDLE9BQU87WUFDUEMsUUFBUTtRQUNWO0lBQ0Y7SUFFQSxJQUFJO1FBQ0YsTUFBTUcsYUFBY1osSUFBSUssT0FBTyxDQUFDLGtCQUFrQixJQUNoREwsSUFBSWEsT0FBT0M7UUFDYixNQUFNQyxVQUFVSCxhQUFhRjtRQUM3QixNQUFNZixzRUFBY0EsQ0FDbEJlLFVBQVUsaUNBQWlDZCxtREFBZUEsQ0FBQ29CLFVBQVVkLE1BQ3JFZSxRQUFRRjtJQUNaLEVBQUUsT0FBT0csZ0JBQWdCO1FBQ3ZCQyxRQUFRWCxNQUFNVTtRQUNkLE9BQU87WUFDTFgsU0FBUztZQUNUQyxPQUFPO1lBQ1BDLFFBQVE7UUFDVjtJQUNGO0lBRUEsSUFDRUMsVUFBVSxrQ0FDVFIsQ0FBQUEsU0FBU04sbURBQWVBLENBQUN3QixVQUFVbEIsU0FBU04sbURBQWVBLENBQUNvQixXQUFXZCxTQUFTTixtREFBZUEsQ0FBQ3lCLE1BQUssR0FDdEc7UUFDQSxPQUFPO1lBQUVkLFNBQVM7WUFBTWUsU0FBUztRQUFVO0lBQzNDLHVFQUF1RTtJQUN2RSxxQ0FBcUM7SUFDckMsbURBQW1EO0lBQ25ELGtEQUFrRDtJQUNsRCxJQUFJO0lBQ0oseUNBQXlDO0lBQ3pDLGtEQUFrRDtJQUNsRCxJQUFJO0lBRUosZ0ZBQWdGO0lBQ2xGO0lBRUEsTUFBTUMsZ0JBQWdCN0IsdURBQVFBLENBQUNnQjtJQUMvQixzRUFBc0U7SUFDdEUsTUFBTSxFQUFFYyxJQUFJLEVBQUVoQixLQUFLLEVBQUUsR0FBRyxNQUFNWCxnRUFBZ0JBLENBQzNDNEIsS0FBSyxZQUNMQyxPQUFPLEtBQ1BDLEdBQUcsT0FBT0o7SUFDYixJQUFJZixTQUFTLENBQUNnQixRQUFRQSxLQUFLSSxXQUFXLEdBQUc7UUFDdkMsT0FBTztZQUNMckIsU0FBUztZQUNUQyxPQUFPO1lBQ1BDLFFBQVE7UUFDVjtJQUNGO0lBRUEsT0FBTztRQUFFRixTQUFTO1FBQU1lLFNBQVNFLElBQUksQ0FBQyxFQUFFLENBQUNGO0lBQVE7QUFDbkQiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9maXJlY3Jhd2wtc2NyYXBlci1qcy8uL3NyYy9wYWdlcy9hcGkvYXV0aC50cz9iMDM4Il0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IHBhcnNlQXBpIH0gZnJvbSBcIi4uLy4uL2xpYi9wYXJzZUFwaVwiO1xuaW1wb3J0IHsgZ2V0UmF0ZUxpbWl0ZXIgfSBmcm9tIFwiLi4vLi4vc2VydmljZXMvcmF0ZS1saW1pdGVyXCI7XG5pbXBvcnQgeyBBdXRoUmVzcG9uc2UsIFJhdGVMaW1pdGVyTW9kZSB9IGZyb20gXCIuLi8uLi90eXBlc1wiO1xuaW1wb3J0IHsgc3VwYWJhc2Vfc2VydmljZSB9IGZyb20gXCIuLi8uLi9zZXJ2aWNlcy9zdXBhYmFzZVwiO1xuaW1wb3J0IHsgd2l0aEF1dGggfSBmcm9tIFwiLi4vLi4vbGliL3dpdGhBdXRoXCI7XG5cblxuZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIGF1dGhlbnRpY2F0ZVVzZXIocmVxLCByZXMsIG1vZGU/OiBSYXRlTGltaXRlck1vZGUpIDogUHJvbWlzZTxBdXRoUmVzcG9uc2U+IHtcbiAgcmV0dXJuIHdpdGhBdXRoKHN1cGFBdXRoZW50aWNhdGVVc2VyKShyZXEsIHJlcywgbW9kZSk7XG59XG5cbmV4cG9ydCBhc3luYyBmdW5jdGlvbiBzdXBhQXV0aGVudGljYXRlVXNlcihcbiAgcmVxLFxuICByZXMsXG4gIG1vZGU/OiBSYXRlTGltaXRlck1vZGVcbik6IFByb21pc2U8e1xuICBzdWNjZXNzOiBib29sZWFuO1xuICB0ZWFtX2lkPzogc3RyaW5nO1xuICBlcnJvcj86IHN0cmluZztcbiAgc3RhdHVzPzogbnVtYmVyO1xufT4ge1xuXG4gIGNvbnN0IGF1dGhIZWFkZXIgPSByZXEuaGVhZGVycy5hdXRob3JpemF0aW9uO1xuICBpZiAoIWF1dGhIZWFkZXIpIHtcbiAgICByZXR1cm4geyBzdWNjZXNzOiBmYWxzZSwgZXJyb3I6IFwiVW5hdXRob3JpemVkXCIsIHN0YXR1czogNDAxIH07XG4gIH1cbiAgY29uc3QgdG9rZW4gPSBhdXRoSGVhZGVyLnNwbGl0KFwiIFwiKVsxXTsgLy8gRXh0cmFjdCB0aGUgdG9rZW4gZnJvbSBcIkJlYXJlciA8dG9rZW4+XCJcbiAgaWYgKCF0b2tlbikge1xuICAgIHJldHVybiB7XG4gICAgICBzdWNjZXNzOiBmYWxzZSxcbiAgICAgIGVycm9yOiBcIlVuYXV0aG9yaXplZDogVG9rZW4gbWlzc2luZ1wiLFxuICAgICAgc3RhdHVzOiA0MDEsXG4gICAgfTtcbiAgfVxuXG4gIHRyeSB7XG4gICAgY29uc3QgaW5jb21pbmdJUCA9IChyZXEuaGVhZGVyc1tcIngtZm9yd2FyZGVkLWZvclwiXSB8fFxuICAgICAgcmVxLnNvY2tldC5yZW1vdGVBZGRyZXNzKSBhcyBzdHJpbmc7XG4gICAgY29uc3QgaXB0b2tlbiA9IGluY29taW5nSVAgKyB0b2tlbjtcbiAgICBhd2FpdCBnZXRSYXRlTGltaXRlcihcbiAgICAgIHRva2VuID09PSBcInRoaXNfaXNfanVzdF9hX3ByZXZpZXdfdG9rZW5cIiA/IFJhdGVMaW1pdGVyTW9kZS5QcmV2aWV3IDogbW9kZVxuICAgICkuY29uc3VtZShpcHRva2VuKTtcbiAgfSBjYXRjaCAocmF0ZUxpbWl0ZXJSZXMpIHtcbiAgICBjb25zb2xlLmVycm9yKHJhdGVMaW1pdGVyUmVzKTtcbiAgICByZXR1cm4ge1xuICAgICAgc3VjY2VzczogZmFsc2UsXG4gICAgICBlcnJvcjogXCJSYXRlIGxpbWl0IGV4Y2VlZGVkLiBUb28gbWFueSByZXF1ZXN0cywgdHJ5IGFnYWluIGluIDEgbWludXRlLlwiLFxuICAgICAgc3RhdHVzOiA0MjksXG4gICAgfTtcbiAgfVxuXG4gIGlmIChcbiAgICB0b2tlbiA9PT0gXCJ0aGlzX2lzX2p1c3RfYV9wcmV2aWV3X3Rva2VuXCIgJiZcbiAgICAobW9kZSA9PT0gUmF0ZUxpbWl0ZXJNb2RlLlNjcmFwZSB8fCBtb2RlID09PSBSYXRlTGltaXRlck1vZGUuUHJldmlldyB8fCBtb2RlID09PSBSYXRlTGltaXRlck1vZGUuU2VhcmNoKVxuICApIHtcbiAgICByZXR1cm4geyBzdWNjZXNzOiB0cnVlLCB0ZWFtX2lkOiBcInByZXZpZXdcIiB9O1xuICAgIC8vIGNoZWNrIHRoZSBvcmlnaW4gb2YgdGhlIHJlcXVlc3QgYW5kIG1ha2Ugc3VyZSBpdHMgZnJvbSBmaXJlY3Jhd2wuZGV2XG4gICAgLy8gY29uc3Qgb3JpZ2luID0gcmVxLmhlYWRlcnMub3JpZ2luO1xuICAgIC8vIGlmIChvcmlnaW4gJiYgb3JpZ2luLmluY2x1ZGVzKFwiZmlyZWNyYXdsLmRldlwiKSl7XG4gICAgLy8gICByZXR1cm4geyBzdWNjZXNzOiB0cnVlLCB0ZWFtX2lkOiBcInByZXZpZXdcIiB9O1xuICAgIC8vIH1cbiAgICAvLyBpZihwcm9jZXNzLmVudi5FTlYgIT09IFwicHJvZHVjdGlvblwiKSB7XG4gICAgLy8gICByZXR1cm4geyBzdWNjZXNzOiB0cnVlLCB0ZWFtX2lkOiBcInByZXZpZXdcIiB9O1xuICAgIC8vIH1cblxuICAgIC8vIHJldHVybiB7IHN1Y2Nlc3M6IGZhbHNlLCBlcnJvcjogXCJVbmF1dGhvcml6ZWQ6IEludmFsaWQgdG9rZW5cIiwgc3RhdHVzOiA0MDEgfTtcbiAgfVxuXG4gIGNvbnN0IG5vcm1hbGl6ZWRBcGkgPSBwYXJzZUFwaSh0b2tlbik7XG4gIC8vIG1ha2Ugc3VyZSBhcGkga2V5IGlzIHZhbGlkLCBiYXNlZCBvbiB0aGUgYXBpX2tleXMgdGFibGUgaW4gc3VwYWJhc2VcbiAgY29uc3QgeyBkYXRhLCBlcnJvciB9ID0gYXdhaXQgc3VwYWJhc2Vfc2VydmljZVxuICAgIC5mcm9tKFwiYXBpX2tleXNcIilcbiAgICAuc2VsZWN0KFwiKlwiKVxuICAgIC5lcShcImtleVwiLCBub3JtYWxpemVkQXBpKTtcbiAgaWYgKGVycm9yIHx8ICFkYXRhIHx8IGRhdGEubGVuZ3RoID09PSAwKSB7XG4gICAgcmV0dXJuIHtcbiAgICAgIHN1Y2Nlc3M6IGZhbHNlLFxuICAgICAgZXJyb3I6IFwiVW5hdXRob3JpemVkOiBJbnZhbGlkIHRva2VuXCIsXG4gICAgICBzdGF0dXM6IDQwMSxcbiAgICB9O1xuICB9XG5cbiAgcmV0dXJuIHsgc3VjY2VzczogdHJ1ZSwgdGVhbV9pZDogZGF0YVswXS50ZWFtX2lkIH07XG59XG4iXSwibmFtZXMiOlsicGFyc2VBcGkiLCJnZXRSYXRlTGltaXRlciIsIlJhdGVMaW1pdGVyTW9kZSIsInN1cGFiYXNlX3NlcnZpY2UiLCJ3aXRoQXV0aCIsImF1dGhlbnRpY2F0ZVVzZXIiLCJyZXEiLCJyZXMiLCJtb2RlIiwic3VwYUF1dGhlbnRpY2F0ZVVzZXIiLCJhdXRoSGVhZGVyIiwiaGVhZGVycyIsImF1dGhvcml6YXRpb24iLCJzdWNjZXNzIiwiZXJyb3IiLCJzdGF0dXMiLCJ0b2tlbiIsInNwbGl0IiwiaW5jb21pbmdJUCIsInNvY2tldCIsInJlbW90ZUFkZHJlc3MiLCJpcHRva2VuIiwiUHJldmlldyIsImNvbnN1bWUiLCJyYXRlTGltaXRlclJlcyIsImNvbnNvbGUiLCJTY3JhcGUiLCJTZWFyY2giLCJ0ZWFtX2lkIiwibm9ybWFsaXplZEFwaSIsImRhdGEiLCJmcm9tIiwic2VsZWN0IiwiZXEiLCJsZW5ndGgiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(api)/./src/pages/api/auth.ts\n");

/***/ }),

/***/ "(api)/./src/pages/api/scrape.ts":
/*!*********************************!*\
  !*** ./src/pages/api/scrape.ts ***!
  \*********************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.a(module, async (__webpack_handle_async_dependencies__, __webpack_async_result__) => { try {\n__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__),\n/* harmony export */   scrapeHelper: () => (/* binding */ scrapeHelper)\n/* harmony export */ });\n/* harmony import */ var _auth__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./auth */ \"(api)/./src/pages/api/auth.ts\");\n/* harmony import */ var _lib_LLM_extraction_helpers__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../lib/LLM-extraction/helpers */ \"(api)/./src/lib/LLM-extraction/helpers.ts\");\n/* harmony import */ var _scraper_WebScraper__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../scraper/WebScraper */ \"(api)/./src/scraper/WebScraper/index.ts\");\n/* harmony import */ var _scraper_WebScraper_utils_blocklist__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../scraper/WebScraper/utils/blocklist */ \"(api)/./src/scraper/WebScraper/utils/blocklist.ts\");\n/* harmony import */ var _services_billing_credit_billing__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../..//services/billing/credit_billing */ \"(api)/./src/services/billing/credit_billing.ts\");\n/* harmony import */ var _services_logging_log_job__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../services/logging/log_job */ \"(api)/./src/services/logging/log_job.ts\");\n/* harmony import */ var _types__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../../types */ \"(api)/./src/types.ts\");\nvar __webpack_async_dependencies__ = __webpack_handle_async_dependencies__([_scraper_WebScraper__WEBPACK_IMPORTED_MODULE_2__]);\n_scraper_WebScraper__WEBPACK_IMPORTED_MODULE_2__ = (__webpack_async_dependencies__.then ? (await __webpack_async_dependencies__)() : __webpack_async_dependencies__)[0];\n\n\n\n\n\n\n\nasync function scrapeHelper(req, team_id, crawlerOptions, pageOptions, extractorOptions) {\n    const url = req.body.url;\n    if (!url) {\n        return {\n            success: false,\n            error: \"Url is required\",\n            returnCode: 400\n        };\n    }\n    if ((0,_scraper_WebScraper_utils_blocklist__WEBPACK_IMPORTED_MODULE_3__.isUrlBlocked)(url)) {\n        return {\n            success: false,\n            error: \"Firecrawl currently does not support social media scraping due to policy restrictions. We're actively working on building support for it.\",\n            returnCode: 403\n        };\n    }\n    const a = new _scraper_WebScraper__WEBPACK_IMPORTED_MODULE_2__.WebScraperDataProvider();\n    await a.setOptions({\n        mode: \"single_urls\",\n        urls: [\n            url\n        ],\n        crawlerOptions: {\n            ...crawlerOptions\n        },\n        pageOptions: pageOptions,\n        extractorOptions: extractorOptions\n    });\n    const docs = await a.getDocuments(false);\n    // make sure doc.content is not empty\n    const filteredDocs = docs.filter((doc)=>doc.content && doc.content.trim().length > 0);\n    if (filteredDocs.length === 0) {\n        return {\n            success: true,\n            error: \"No page found\",\n            returnCode: 200\n        };\n    }\n    let creditsToBeBilled = filteredDocs.length;\n    const creditsPerLLMExtract = 5;\n    if (extractorOptions.mode === \"llm-extraction\") {\n        creditsToBeBilled = creditsToBeBilled + creditsPerLLMExtract * filteredDocs.length;\n    }\n    const billingResult = await (0,_services_billing_credit_billing__WEBPACK_IMPORTED_MODULE_4__.billTeam)(team_id, creditsToBeBilled);\n    if (!billingResult.success) {\n        return {\n            success: false,\n            error: \"Failed to bill team. Insufficient credits or subscription not found.\",\n            returnCode: 402\n        };\n    }\n    return {\n        success: true,\n        data: filteredDocs[0],\n        returnCode: 200\n    };\n}\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (async (req, res)=>{\n    try {\n        // make sure to authenticate user first, Bearer <token>\n        const { success, team_id, error, status } = await (0,_auth__WEBPACK_IMPORTED_MODULE_0__.authenticateUser)(req, res, _types__WEBPACK_IMPORTED_MODULE_6__.RateLimiterMode.Scrape);\n        if (!success) {\n            res.status(status).json({\n                error\n            });\n        }\n        const crawlerOptions = req.body.crawlerOptions ?? {};\n        const pageOptions = req.body.pageOptions ?? {\n            onlyMainContent: false\n        };\n        const extractorOptions = req.body.extractorOptions ?? {\n            mode: \"markdown\"\n        };\n        const origin = req.body.origin ?? \"api\";\n        try {\n            const { success: creditsCheckSuccess, message: creditsCheckMessage } = await (0,_services_billing_credit_billing__WEBPACK_IMPORTED_MODULE_4__.checkTeamCredits)(team_id, 1);\n            if (!creditsCheckSuccess) {\n                res.status(402).json({\n                    error: \"Insufficient credits\"\n                });\n            }\n        } catch (error) {\n            console.error(error);\n            res.status(500).json({\n                error: \"Internal server error\"\n            });\n        }\n        const startTime = new Date().getTime();\n        const result = await scrapeHelper(req, team_id, crawlerOptions, pageOptions, extractorOptions);\n        const endTime = new Date().getTime();\n        const timeTakenInSeconds = (endTime - startTime) / 1000;\n        const numTokens = result.data && result.data.markdown ? (0,_lib_LLM_extraction_helpers__WEBPACK_IMPORTED_MODULE_1__.numTokensFromString)(result.data.markdown, \"gpt-3.5-turbo\") : 0;\n        (0,_services_logging_log_job__WEBPACK_IMPORTED_MODULE_5__.logJob)({\n            success: result.success,\n            message: result.error,\n            num_docs: 1,\n            docs: [\n                result.data\n            ],\n            time_taken: timeTakenInSeconds,\n            team_id: team_id,\n            mode: \"scrape\",\n            url: req.body.url,\n            crawlerOptions: crawlerOptions,\n            pageOptions: pageOptions,\n            origin: origin,\n            extractor_options: extractorOptions,\n            num_tokens: numTokens\n        });\n        res.status(result.returnCode).json(result);\n    } catch (error) {\n        console.error(error);\n        res.status(500).json({\n            error: error.message\n        });\n    }\n});\n\n__webpack_async_result__();\n} catch(e) { __webpack_async_result__(e); } });//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(api)/./src/pages/api/scrape.ts\n");

/***/ }),

/***/ "(api)/./src/scraper/WebScraper/crawler.ts":
/*!*******************************************!*\
  !*** ./src/scraper/WebScraper/crawler.ts ***!
  \*******************************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.a(module, async (__webpack_handle_async_dependencies__, __webpack_async_result__) => { try {\n__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   WebCrawler: () => (/* binding */ WebCrawler)\n/* harmony export */ });\n/* harmony import */ var axios__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! axios */ \"axios\");\n/* harmony import */ var cheerio__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! cheerio */ \"cheerio\");\n/* harmony import */ var url__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! url */ \"url\");\n/* harmony import */ var url__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(url__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var _sitemap__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./sitemap */ \"(api)/./src/scraper/WebScraper/sitemap.ts\");\n/* harmony import */ var async__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! async */ \"async\");\n/* harmony import */ var async__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(async__WEBPACK_IMPORTED_MODULE_4__);\n/* harmony import */ var _single_url__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./single_url */ \"(api)/./src/scraper/WebScraper/single_url.ts\");\n/* harmony import */ var robots_parser__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! robots-parser */ \"robots-parser\");\n/* harmony import */ var robots_parser__WEBPACK_IMPORTED_MODULE_6___default = /*#__PURE__*/__webpack_require__.n(robots_parser__WEBPACK_IMPORTED_MODULE_6__);\nvar __webpack_async_dependencies__ = __webpack_handle_async_dependencies__([axios__WEBPACK_IMPORTED_MODULE_0__, cheerio__WEBPACK_IMPORTED_MODULE_1__, _sitemap__WEBPACK_IMPORTED_MODULE_3__, _single_url__WEBPACK_IMPORTED_MODULE_5__]);\n([axios__WEBPACK_IMPORTED_MODULE_0__, cheerio__WEBPACK_IMPORTED_MODULE_1__, _sitemap__WEBPACK_IMPORTED_MODULE_3__, _single_url__WEBPACK_IMPORTED_MODULE_5__] = __webpack_async_dependencies__.then ? (await __webpack_async_dependencies__)() : __webpack_async_dependencies__);\n\n\n\n\n\n\n\nclass WebCrawler {\n    constructor({ initialUrl, includes, excludes, maxCrawledLinks, limit = 10000, generateImgAltText = false }){\n        this.visited = new Set();\n        this.crawledUrls = new Set();\n        this.initialUrl = initialUrl;\n        this.baseUrl = new url__WEBPACK_IMPORTED_MODULE_2__.URL(initialUrl).origin;\n        this.includes = includes ?? [];\n        this.excludes = excludes ?? [];\n        this.limit = limit;\n        this.robotsTxtUrl = `${this.baseUrl}/robots.txt`;\n        this.robots = robots_parser__WEBPACK_IMPORTED_MODULE_6___default()(this.robotsTxtUrl, \"\");\n        // Deprecated, use limit instead\n        this.maxCrawledLinks = maxCrawledLinks ?? limit;\n        this.generateImgAltText = generateImgAltText ?? false;\n    }\n    filterLinks(sitemapLinks, limit) {\n        return sitemapLinks.filter((link)=>{\n            const url = new url__WEBPACK_IMPORTED_MODULE_2__.URL(link);\n            const path = url.pathname;\n            // Check if the link should be excluded\n            if (this.excludes.length > 0 && this.excludes[0] !== \"\") {\n                if (this.excludes.some((excludePattern)=>new RegExp(excludePattern).test(path))) {\n                    return false;\n                }\n            }\n            // Check if the link matches the include patterns, if any are specified\n            if (this.includes.length > 0 && this.includes[0] !== \"\") {\n                return this.includes.some((includePattern)=>new RegExp(includePattern).test(path));\n            }\n            const isAllowed = this.robots.isAllowed(link, \"FireCrawlAgent\") ?? true;\n            // Check if the link is disallowed by robots.txt\n            if (!isAllowed) {\n                console.log(`Link disallowed by robots.txt: ${link}`);\n                return false;\n            }\n            return true;\n        }).slice(0, limit);\n    }\n    async start(inProgress, concurrencyLimit = 5, limit = 10000) {\n        // Fetch and parse robots.txt\n        try {\n            const response = await axios__WEBPACK_IMPORTED_MODULE_0__[\"default\"].get(this.robotsTxtUrl);\n            this.robots = robots_parser__WEBPACK_IMPORTED_MODULE_6___default()(this.robotsTxtUrl, response.data);\n        } catch (error) {\n            console.error(`Failed to fetch robots.txt from ${this.robotsTxtUrl}`);\n        }\n        const sitemapLinks = await this.tryFetchSitemapLinks(this.initialUrl);\n        if (sitemapLinks.length > 0) {\n            const filteredLinks = this.filterLinks(sitemapLinks, limit);\n            return filteredLinks;\n        }\n        const urls = await this.crawlUrls([\n            this.initialUrl\n        ], concurrencyLimit, inProgress);\n        if (urls.length === 0 && this.filterLinks([\n            this.initialUrl\n        ], limit).length > 0) {\n            return [\n                this.initialUrl\n            ];\n        }\n        // make sure to run include exclude here again\n        return this.filterLinks(urls, limit);\n    }\n    async crawlUrls(urls, concurrencyLimit, inProgress) {\n        const queue = async__WEBPACK_IMPORTED_MODULE_4___default().queue(async (task, callback)=>{\n            if (this.crawledUrls.size >= this.maxCrawledLinks) {\n                if (callback && typeof callback === \"function\") {\n                    callback();\n                }\n                return;\n            }\n            const newUrls = await this.crawl(task);\n            newUrls.forEach((url)=>this.crawledUrls.add(url));\n            if (inProgress && newUrls.length > 0) {\n                inProgress({\n                    current: this.crawledUrls.size,\n                    total: this.maxCrawledLinks,\n                    status: \"SCRAPING\",\n                    currentDocumentUrl: newUrls[newUrls.length - 1]\n                });\n            } else if (inProgress) {\n                inProgress({\n                    current: this.crawledUrls.size,\n                    total: this.maxCrawledLinks,\n                    status: \"SCRAPING\",\n                    currentDocumentUrl: task\n                });\n            }\n            await this.crawlUrls(newUrls, concurrencyLimit, inProgress);\n            if (callback && typeof callback === \"function\") {\n                callback();\n            }\n        }, concurrencyLimit);\n        queue.push(urls.filter((url)=>!this.visited.has(url) && this.robots.isAllowed(url, \"FireCrawlAgent\")), (err)=>{\n            if (err) console.error(err);\n        });\n        await queue.drain();\n        return Array.from(this.crawledUrls);\n    }\n    async crawl(url) {\n        if (this.visited.has(url) || !this.robots.isAllowed(url, \"FireCrawlAgent\")) return [];\n        this.visited.add(url);\n        if (!url.startsWith(\"http\")) {\n            url = \"https://\" + url;\n        }\n        if (url.endsWith(\"/\")) {\n            url = url.slice(0, -1);\n        }\n        if (this.isFile(url) || this.isSocialMediaOrEmail(url)) {\n            return [];\n        }\n        try {\n            let content;\n            // If it is the first link, fetch with scrapingbee\n            if (this.visited.size === 1) {\n                content = await (0,_single_url__WEBPACK_IMPORTED_MODULE_5__.scrapWithScrapingBee)(url, \"load\");\n            } else {\n                const response = await axios__WEBPACK_IMPORTED_MODULE_0__[\"default\"].get(url);\n                content = response.data;\n            }\n            const $ = (0,cheerio__WEBPACK_IMPORTED_MODULE_1__.load)(content);\n            let links = [];\n            $(\"a\").each((_, element)=>{\n                const href = $(element).attr(\"href\");\n                if (href) {\n                    let fullUrl = href;\n                    if (!href.startsWith(\"http\")) {\n                        fullUrl = new url__WEBPACK_IMPORTED_MODULE_2__.URL(href, this.baseUrl).toString();\n                    }\n                    const url = new url__WEBPACK_IMPORTED_MODULE_2__.URL(fullUrl);\n                    const path = url.pathname;\n                    if (// fullUrl.startsWith(this.initialUrl) && // this condition makes it stop crawling back the url\n                    this.isInternalLink(fullUrl) && this.matchesPattern(fullUrl) && this.noSections(fullUrl) && this.matchesIncludes(path) && !this.matchesExcludes(path) && this.robots.isAllowed(fullUrl, \"FireCrawlAgent\")) {\n                        links.push(fullUrl);\n                    }\n                }\n            });\n            return links.filter((link)=>!this.visited.has(link));\n        } catch (error) {\n            return [];\n        }\n    }\n    matchesIncludes(url) {\n        if (this.includes.length === 0 || this.includes[0] == \"\") return true;\n        return this.includes.some((pattern)=>new RegExp(pattern).test(url));\n    }\n    matchesExcludes(url) {\n        if (this.excludes.length === 0 || this.excludes[0] == \"\") return false;\n        return this.excludes.some((pattern)=>new RegExp(pattern).test(url));\n    }\n    noSections(link) {\n        return !link.includes(\"#\");\n    }\n    isInternalLink(link) {\n        const urlObj = new url__WEBPACK_IMPORTED_MODULE_2__.URL(link, this.baseUrl);\n        const domainWithoutProtocol = this.baseUrl.replace(/^https?:\\/\\//, \"\");\n        return urlObj.hostname === domainWithoutProtocol;\n    }\n    matchesPattern(link) {\n        return true; // Placeholder for future pattern matching implementation\n    }\n    isFile(url) {\n        const fileExtensions = [\n            \".png\",\n            \".jpg\",\n            \".jpeg\",\n            \".gif\",\n            \".css\",\n            \".js\",\n            \".ico\",\n            \".svg\",\n            // \".pdf\", \n            \".zip\",\n            \".exe\",\n            \".dmg\",\n            \".mp4\",\n            \".mp3\",\n            \".pptx\",\n            \".docx\",\n            \".xlsx\",\n            \".xml\"\n        ];\n        return fileExtensions.some((ext)=>url.endsWith(ext));\n    }\n    isSocialMediaOrEmail(url) {\n        const socialMediaOrEmail = [\n            \"facebook.com\",\n            \"twitter.com\",\n            \"linkedin.com\",\n            \"instagram.com\",\n            \"pinterest.com\",\n            \"mailto:\"\n        ];\n        return socialMediaOrEmail.some((ext)=>url.includes(ext));\n    }\n    async tryFetchSitemapLinks(url) {\n        const sitemapUrl = url.endsWith(\"/sitemap.xml\") ? url : `${url}/sitemap.xml`;\n        try {\n            const response = await axios__WEBPACK_IMPORTED_MODULE_0__[\"default\"].get(sitemapUrl);\n            if (response.status === 200) {\n                return await (0,_sitemap__WEBPACK_IMPORTED_MODULE_3__.getLinksFromSitemap)(sitemapUrl);\n            }\n        } catch (error) {\n        // Error handling for failed sitemap fetch\n        }\n        return [];\n    }\n}\n\n__webpack_async_result__();\n} catch(e) { __webpack_async_result__(e); } });//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(api)/./src/scraper/WebScraper/crawler.ts\n");

/***/ }),

/***/ "(api)/./src/scraper/WebScraper/index.ts":
/*!*****************************************!*\
  !*** ./src/scraper/WebScraper/index.ts ***!
  \*****************************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.a(module, async (__webpack_handle_async_dependencies__, __webpack_async_result__) => { try {\n__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   WebScraperDataProvider: () => (/* binding */ WebScraperDataProvider)\n/* harmony export */ });\n/* harmony import */ var _single_url__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./single_url */ \"(api)/./src/scraper/WebScraper/single_url.ts\");\n/* harmony import */ var _sitemap__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./sitemap */ \"(api)/./src/scraper/WebScraper/sitemap.ts\");\n/* harmony import */ var _crawler__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./crawler */ \"(api)/./src/scraper/WebScraper/crawler.ts\");\n/* harmony import */ var _services_redis__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../services/redis */ \"(api)/./src/services/redis.ts\");\n/* harmony import */ var _utils_imageDescription__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./utils/imageDescription */ \"(api)/./src/scraper/WebScraper/utils/imageDescription.ts\");\n/* harmony import */ var _utils_pdfProcessor__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./utils/pdfProcessor */ \"(api)/./src/scraper/WebScraper/utils/pdfProcessor.ts\");\n/* harmony import */ var _utils_replacePaths__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./utils/replacePaths */ \"(api)/./src/scraper/WebScraper/utils/replacePaths.ts\");\n/* harmony import */ var _lib_LLM_extraction__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../../lib/LLM-extraction */ \"(api)/./src/lib/LLM-extraction/index.ts\");\nvar __webpack_async_dependencies__ = __webpack_handle_async_dependencies__([_single_url__WEBPACK_IMPORTED_MODULE_0__, _sitemap__WEBPACK_IMPORTED_MODULE_1__, _crawler__WEBPACK_IMPORTED_MODULE_2__, _utils_imageDescription__WEBPACK_IMPORTED_MODULE_4__, _utils_pdfProcessor__WEBPACK_IMPORTED_MODULE_5__, _lib_LLM_extraction__WEBPACK_IMPORTED_MODULE_7__]);\n([_single_url__WEBPACK_IMPORTED_MODULE_0__, _sitemap__WEBPACK_IMPORTED_MODULE_1__, _crawler__WEBPACK_IMPORTED_MODULE_2__, _utils_imageDescription__WEBPACK_IMPORTED_MODULE_4__, _utils_pdfProcessor__WEBPACK_IMPORTED_MODULE_5__, _lib_LLM_extraction__WEBPACK_IMPORTED_MODULE_7__] = __webpack_async_dependencies__.then ? (await __webpack_async_dependencies__)() : __webpack_async_dependencies__);\n\n\n\n\n\n\n\n\nclass WebScraperDataProvider {\n    authorize() {\n        throw new Error(\"Method not implemented.\");\n    }\n    authorizeNango() {\n        throw new Error(\"Method not implemented.\");\n    }\n    async convertUrlsToDocuments(urls, inProgress) {\n        const totalUrls = urls.length;\n        let processedUrls = 0;\n        const results = new Array(urls.length).fill(null);\n        for(let i = 0; i < urls.length; i += this.concurrentRequests){\n            const batchUrls = urls.slice(i, i + this.concurrentRequests);\n            await Promise.all(batchUrls.map(async (url, index)=>{\n                const result = await (0,_single_url__WEBPACK_IMPORTED_MODULE_0__.scrapSingleUrl)(url, true, this.pageOptions);\n                processedUrls++;\n                if (inProgress) {\n                    inProgress({\n                        current: processedUrls,\n                        total: totalUrls,\n                        status: \"SCRAPING\",\n                        currentDocumentUrl: url\n                    });\n                }\n                results[i + index] = result;\n            }));\n        }\n        return results.filter((result)=>result !== null);\n    }\n    async getDocuments(useCaching = false, inProgress) {\n        if (this.urls[0].trim() === \"\") {\n            throw new Error(\"Url is required\");\n        }\n        if (!useCaching) {\n            if (this.mode === \"crawl\") {\n                const crawler = new _crawler__WEBPACK_IMPORTED_MODULE_2__.WebCrawler({\n                    initialUrl: this.urls[0],\n                    includes: this.includes,\n                    excludes: this.excludes,\n                    maxCrawledLinks: this.maxCrawledLinks,\n                    limit: this.limit,\n                    generateImgAltText: this.generateImgAltText\n                });\n                let links = await crawler.start(inProgress, 5, this.limit);\n                if (this.returnOnlyUrls) {\n                    inProgress({\n                        current: links.length,\n                        total: links.length,\n                        status: \"COMPLETED\",\n                        currentDocumentUrl: this.urls[0]\n                    });\n                    return links.map((url)=>({\n                            content: \"\",\n                            markdown: \"\",\n                            metadata: {\n                                sourceURL: url\n                            }\n                        }));\n                }\n                let pdfLinks = links.filter((link)=>link.endsWith(\".pdf\"));\n                let pdfDocuments = [];\n                for (let pdfLink of pdfLinks){\n                    const pdfContent = await (0,_utils_pdfProcessor__WEBPACK_IMPORTED_MODULE_5__.fetchAndProcessPdf)(pdfLink);\n                    pdfDocuments.push({\n                        content: pdfContent,\n                        metadata: {\n                            sourceURL: pdfLink\n                        },\n                        provider: \"web-scraper\"\n                    });\n                }\n                links = links.filter((link)=>!link.endsWith(\".pdf\"));\n                let documents = await this.convertUrlsToDocuments(links, inProgress);\n                documents = await this.getSitemapData(this.urls[0], documents);\n                if (this.replaceAllPathsWithAbsolutePaths) {\n                    documents = (0,_utils_replacePaths__WEBPACK_IMPORTED_MODULE_6__.replacePathsWithAbsolutePaths)(documents);\n                } else {\n                    documents = (0,_utils_replacePaths__WEBPACK_IMPORTED_MODULE_6__.replaceImgPathsWithAbsolutePaths)(documents);\n                }\n                if (this.generateImgAltText) {\n                    documents = await this.generatesImgAltText(documents);\n                }\n                documents = documents.concat(pdfDocuments);\n                // CACHING DOCUMENTS\n                // - parent document\n                const cachedParentDocumentString = await (0,_services_redis__WEBPACK_IMPORTED_MODULE_3__.getValue)(\"web-scraper-cache:\" + this.normalizeUrl(this.urls[0]));\n                if (cachedParentDocumentString != null) {\n                    let cachedParentDocument = JSON.parse(cachedParentDocumentString);\n                    if (!cachedParentDocument.childrenLinks || cachedParentDocument.childrenLinks.length < links.length - 1) {\n                        cachedParentDocument.childrenLinks = links.filter((link)=>link !== this.urls[0]);\n                        await (0,_services_redis__WEBPACK_IMPORTED_MODULE_3__.setValue)(\"web-scraper-cache:\" + this.normalizeUrl(this.urls[0]), JSON.stringify(cachedParentDocument), 60 * 60 * 24 * 10); // 10 days\n                    }\n                } else {\n                    let parentDocument = documents.filter((document)=>this.normalizeUrl(document.metadata.sourceURL) === this.normalizeUrl(this.urls[0]));\n                    await this.setCachedDocuments(parentDocument, links);\n                }\n                await this.setCachedDocuments(documents.filter((document)=>this.normalizeUrl(document.metadata.sourceURL) !== this.normalizeUrl(this.urls[0])), []);\n                documents = this.removeChildLinks(documents);\n                documents = documents.splice(0, this.limit);\n                return documents;\n            }\n            if (this.mode === \"single_urls\") {\n                let pdfLinks = this.urls.filter((link)=>link.endsWith(\".pdf\"));\n                let pdfDocuments = [];\n                for (let pdfLink of pdfLinks){\n                    const pdfContent = await (0,_utils_pdfProcessor__WEBPACK_IMPORTED_MODULE_5__.fetchAndProcessPdf)(pdfLink);\n                    pdfDocuments.push({\n                        content: pdfContent,\n                        metadata: {\n                            sourceURL: pdfLink\n                        },\n                        provider: \"web-scraper\"\n                    });\n                }\n                let documents = await this.convertUrlsToDocuments(this.urls.filter((link)=>!link.endsWith(\".pdf\")), inProgress);\n                if (this.replaceAllPathsWithAbsolutePaths) {\n                    documents = (0,_utils_replacePaths__WEBPACK_IMPORTED_MODULE_6__.replacePathsWithAbsolutePaths)(documents);\n                } else {\n                    documents = (0,_utils_replacePaths__WEBPACK_IMPORTED_MODULE_6__.replaceImgPathsWithAbsolutePaths)(documents);\n                }\n                if (this.generateImgAltText) {\n                    documents = await this.generatesImgAltText(documents);\n                }\n                const baseUrl = new URL(this.urls[0]).origin;\n                documents = await this.getSitemapData(baseUrl, documents);\n                documents = documents.concat(pdfDocuments);\n                if (this.extractorOptions.mode === \"llm-extraction\") {\n                    documents = await (0,_lib_LLM_extraction__WEBPACK_IMPORTED_MODULE_7__.generateCompletions)(documents, this.extractorOptions);\n                }\n                await this.setCachedDocuments(documents);\n                documents = this.removeChildLinks(documents);\n                documents = documents.splice(0, this.limit);\n                return documents;\n            }\n            if (this.mode === \"sitemap\") {\n                let links = await (0,_sitemap__WEBPACK_IMPORTED_MODULE_1__.getLinksFromSitemap)(this.urls[0]);\n                let pdfLinks = links.filter((link)=>link.endsWith(\".pdf\"));\n                let pdfDocuments = [];\n                for (let pdfLink of pdfLinks){\n                    const pdfContent = await (0,_utils_pdfProcessor__WEBPACK_IMPORTED_MODULE_5__.fetchAndProcessPdf)(pdfLink);\n                    pdfDocuments.push({\n                        content: pdfContent,\n                        metadata: {\n                            sourceURL: pdfLink\n                        },\n                        provider: \"web-scraper\"\n                    });\n                }\n                links = links.filter((link)=>!link.endsWith(\".pdf\"));\n                let documents = await this.convertUrlsToDocuments(links.slice(0, this.limit), inProgress);\n                documents = await this.getSitemapData(this.urls[0], documents);\n                if (this.replaceAllPathsWithAbsolutePaths) {\n                    documents = (0,_utils_replacePaths__WEBPACK_IMPORTED_MODULE_6__.replacePathsWithAbsolutePaths)(documents);\n                } else {\n                    documents = (0,_utils_replacePaths__WEBPACK_IMPORTED_MODULE_6__.replaceImgPathsWithAbsolutePaths)(documents);\n                }\n                if (this.generateImgAltText) {\n                    documents = await this.generatesImgAltText(documents);\n                }\n                documents = documents.concat(pdfDocuments);\n                await this.setCachedDocuments(documents);\n                documents = this.removeChildLinks(documents);\n                documents = documents.splice(0, this.limit);\n                return documents;\n            }\n            return [];\n        }\n        let documents = await this.getCachedDocuments(this.urls.slice(0, this.limit));\n        if (documents.length < this.limit) {\n            const newDocuments = await this.getDocuments(false, inProgress);\n            newDocuments.forEach((doc)=>{\n                if (!documents.some((d)=>this.normalizeUrl(d.metadata.sourceURL) === this.normalizeUrl(doc.metadata?.sourceURL))) {\n                    documents.push(doc);\n                }\n            });\n        }\n        documents = this.filterDocsExcludeInclude(documents);\n        documents = this.removeChildLinks(documents);\n        documents = documents.splice(0, this.limit);\n        return documents;\n    }\n    filterDocsExcludeInclude(documents) {\n        return documents.filter((document)=>{\n            const url = new URL(document.metadata.sourceURL);\n            const path = url.pathname;\n            if (this.excludes.length > 0 && this.excludes[0] !== \"\") {\n                // Check if the link should be excluded\n                if (this.excludes.some((excludePattern)=>new RegExp(excludePattern).test(path))) {\n                    return false;\n                }\n            }\n            if (this.includes.length > 0 && this.includes[0] !== \"\") {\n                // Check if the link matches the include patterns, if any are specified\n                if (this.includes.length > 0) {\n                    return this.includes.some((includePattern)=>new RegExp(includePattern).test(path));\n                }\n            }\n            return true;\n        });\n    }\n    normalizeUrl(url) {\n        if (url.includes(\"//www.\")) {\n            return url.replace(\"//www.\", \"//\");\n        }\n        return url;\n    }\n    removeChildLinks(documents) {\n        for (let document of documents){\n            if (document?.childrenLinks) delete document.childrenLinks;\n        }\n        return documents;\n    }\n    async setCachedDocuments(documents, childrenLinks) {\n        for (const document of documents){\n            if (document.content.trim().length === 0) {\n                continue;\n            }\n            const normalizedUrl = this.normalizeUrl(document.metadata.sourceURL);\n            await (0,_services_redis__WEBPACK_IMPORTED_MODULE_3__.setValue)(\"web-scraper-cache:\" + normalizedUrl, JSON.stringify({\n                ...document,\n                childrenLinks: childrenLinks || []\n            }), 60 * 60 * 24 * 10); // 10 days\n        }\n    }\n    async getCachedDocuments(urls) {\n        let documents = [];\n        for (const url of urls){\n            const normalizedUrl = this.normalizeUrl(url);\n            console.log(\"Getting cached document for web-scraper-cache:\" + normalizedUrl);\n            const cachedDocumentString = await (0,_services_redis__WEBPACK_IMPORTED_MODULE_3__.getValue)(\"web-scraper-cache:\" + normalizedUrl);\n            if (cachedDocumentString) {\n                const cachedDocument = JSON.parse(cachedDocumentString);\n                documents.push(cachedDocument);\n                // get children documents\n                for (const childUrl of cachedDocument.childrenLinks){\n                    const normalizedChildUrl = this.normalizeUrl(childUrl);\n                    const childCachedDocumentString = await (0,_services_redis__WEBPACK_IMPORTED_MODULE_3__.getValue)(\"web-scraper-cache:\" + normalizedChildUrl);\n                    if (childCachedDocumentString) {\n                        const childCachedDocument = JSON.parse(childCachedDocumentString);\n                        if (!documents.find((doc)=>doc.metadata.sourceURL === childCachedDocument.metadata.sourceURL)) {\n                            documents.push(childCachedDocument);\n                        }\n                    }\n                }\n            }\n        }\n        return documents;\n    }\n    setOptions(options) {\n        if (!options.urls) {\n            throw new Error(\"Urls are required\");\n        }\n        this.urls = options.urls;\n        this.mode = options.mode;\n        this.concurrentRequests = options.concurrentRequests ?? 20;\n        this.includes = options.crawlerOptions?.includes ?? [];\n        this.excludes = options.crawlerOptions?.excludes ?? [];\n        this.maxCrawledLinks = options.crawlerOptions?.maxCrawledLinks ?? 1000;\n        this.returnOnlyUrls = options.crawlerOptions?.returnOnlyUrls ?? false;\n        this.limit = options.crawlerOptions?.limit ?? 10000;\n        this.generateImgAltText = options.crawlerOptions?.generateImgAltText ?? false;\n        this.pageOptions = options.pageOptions ?? {\n            onlyMainContent: false\n        };\n        this.extractorOptions = options.extractorOptions ?? {\n            mode: \"markdown\"\n        };\n        this.replaceAllPathsWithAbsolutePaths = options.crawlerOptions?.replaceAllPathsWithAbsolutePaths ?? false;\n        //! @nicolas, for some reason this was being injected and breakign everything. Don't have time to find source of the issue so adding this check\n        this.excludes = this.excludes.filter((item)=>item !== \"\");\n        // make sure all urls start with https://\n        this.urls = this.urls.map((url)=>{\n            if (!url.trim().startsWith(\"http\")) {\n                return `https://${url}`;\n            }\n            return url;\n        });\n    }\n    async getSitemapData(baseUrl, documents) {\n        const sitemapData = await (0,_sitemap__WEBPACK_IMPORTED_MODULE_1__.fetchSitemapData)(baseUrl);\n        if (sitemapData) {\n            for(let i = 0; i < documents.length; i++){\n                const docInSitemapData = sitemapData.find((data)=>this.normalizeUrl(data.loc) === this.normalizeUrl(documents[i].metadata.sourceURL));\n                if (docInSitemapData) {\n                    let sitemapDocData = {};\n                    if (docInSitemapData.changefreq) {\n                        sitemapDocData.changefreq = docInSitemapData.changefreq;\n                    }\n                    if (docInSitemapData.priority) {\n                        sitemapDocData.priority = Number(docInSitemapData.priority);\n                    }\n                    if (docInSitemapData.lastmod) {\n                        sitemapDocData.lastmod = docInSitemapData.lastmod;\n                    }\n                    if (Object.keys(sitemapDocData).length !== 0) {\n                        documents[i].metadata.sitemap = sitemapDocData;\n                    }\n                }\n            }\n        }\n        return documents;\n    }\n    constructor(){\n        this.urls = [\n            \"\"\n        ];\n        this.mode = \"single_urls\";\n        this.limit = 10000;\n        this.concurrentRequests = 20;\n        this.generateImgAltText = false;\n        this.replaceAllPathsWithAbsolutePaths = false;\n        this.generateImgAltTextModel = \"gpt-4-turbo\";\n        this.generatesImgAltText = async (documents)=>{\n            await Promise.all(documents.map(async (document)=>{\n                const images = document.content.match(/!\\[.*?\\]\\((.*?)\\)/g) || [];\n                await Promise.all(images.map(async (image)=>{\n                    let imageUrl = image.match(/\\(([^)]+)\\)/)[1];\n                    let altText = image.match(/\\[(.*?)\\]/)[1];\n                    if (!altText && !imageUrl.startsWith(\"data:image\") && /\\.(png|jpeg|gif|webp)$/.test(imageUrl)) {\n                        const imageIndex = document.content.indexOf(image);\n                        const contentLength = document.content.length;\n                        let backText = document.content.substring(imageIndex + image.length, Math.min(imageIndex + image.length + 1000, contentLength));\n                        let frontTextStartIndex = Math.max(imageIndex - 1000, 0);\n                        let frontText = document.content.substring(frontTextStartIndex, imageIndex);\n                        altText = await (0,_utils_imageDescription__WEBPACK_IMPORTED_MODULE_4__.getImageDescription)(imageUrl, backText, frontText, this.generateImgAltTextModel);\n                    }\n                    document.content = document.content.replace(image, `![${altText}](${imageUrl})`);\n                }));\n            }));\n            return documents;\n        };\n    }\n}\n\n__webpack_async_result__();\n} catch(e) { __webpack_async_result__(e); } });//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(api)/./src/scraper/WebScraper/index.ts\n");

/***/ }),

/***/ "(api)/./src/scraper/WebScraper/single_url.ts":
/*!**********************************************!*\
  !*** ./src/scraper/WebScraper/single_url.ts ***!
  \**********************************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.a(module, async (__webpack_handle_async_dependencies__, __webpack_async_result__) => { try {\n__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   generateRequestParams: () => (/* binding */ generateRequestParams),\n/* harmony export */   scrapSingleUrl: () => (/* binding */ scrapSingleUrl),\n/* harmony export */   scrapWithCustomFirecrawl: () => (/* binding */ scrapWithCustomFirecrawl),\n/* harmony export */   scrapWithPlaywright: () => (/* binding */ scrapWithPlaywright),\n/* harmony export */   scrapWithScrapingBee: () => (/* binding */ scrapWithScrapingBee)\n/* harmony export */ });\n/* harmony import */ var cheerio__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! cheerio */ \"cheerio\");\n/* harmony import */ var scrapingbee__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! scrapingbee */ \"scrapingbee\");\n/* harmony import */ var scrapingbee__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(scrapingbee__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var _utils_metadata__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./utils/metadata */ \"(api)/./src/scraper/WebScraper/utils/metadata.ts\");\n/* harmony import */ var dotenv__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! dotenv */ \"dotenv\");\n/* harmony import */ var dotenv__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(dotenv__WEBPACK_IMPORTED_MODULE_3__);\n/* harmony import */ var _lib_html_to_markdown__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../lib/html-to-markdown */ \"(api)/./src/lib/html-to-markdown.ts\");\n/* harmony import */ var _utils_excludeTags__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./utils/excludeTags */ \"(api)/./src/scraper/WebScraper/utils/excludeTags.ts\");\n/* harmony import */ var _utils_custom_website_params__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./utils/custom/website_params */ \"(api)/./src/scraper/WebScraper/utils/custom/website_params.ts\");\nvar __webpack_async_dependencies__ = __webpack_handle_async_dependencies__([cheerio__WEBPACK_IMPORTED_MODULE_0__]);\ncheerio__WEBPACK_IMPORTED_MODULE_0__ = (__webpack_async_dependencies__.then ? (await __webpack_async_dependencies__)() : __webpack_async_dependencies__)[0];\n\n\n\n\n\n\n\ndotenv__WEBPACK_IMPORTED_MODULE_3___default().config();\nasync function generateRequestParams(url, wait_browser = \"domcontentloaded\", timeout = 15000) {\n    const defaultParams = {\n        url: url,\n        params: {\n            timeout: timeout,\n            wait_browser: wait_browser\n        },\n        headers: {\n            \"ScrapingService-Request\": \"TRUE\"\n        }\n    };\n    try {\n        const urlKey = new URL(url).hostname;\n        if (_utils_custom_website_params__WEBPACK_IMPORTED_MODULE_6__.urlSpecificParams.hasOwnProperty(urlKey)) {\n            return {\n                ...defaultParams,\n                ..._utils_custom_website_params__WEBPACK_IMPORTED_MODULE_6__.urlSpecificParams[urlKey]\n            };\n        } else {\n            return defaultParams;\n        }\n    } catch (error) {\n        console.error(`Error generating URL key: ${error}`);\n        return defaultParams;\n    }\n}\nasync function scrapWithCustomFirecrawl(url, options) {\n    try {\n        // TODO: merge the custom firecrawl scraper into mono-repo when ready\n        return null;\n    } catch (error) {\n        console.error(`Error scraping with custom firecrawl-scraper: ${error}`);\n        return \"\";\n    }\n}\nasync function scrapWithScrapingBee(url, wait_browser = \"domcontentloaded\", timeout = 15000) {\n    try {\n        const client = new scrapingbee__WEBPACK_IMPORTED_MODULE_1__.ScrapingBeeClient(process.env.SCRAPING_BEE_API_KEY);\n        const clientParams = await generateRequestParams(url, wait_browser, timeout);\n        const response = await client.get(clientParams);\n        if (response.status !== 200 && response.status !== 404) {\n            console.error(`Scraping bee error in ${url} with status code ${response.status}`);\n            return \"\";\n        }\n        const decoder = new TextDecoder();\n        const text = decoder.decode(response.data);\n        return text;\n    } catch (error) {\n        console.error(`Error scraping with Scraping Bee: ${error}`);\n        return \"\";\n    }\n}\nasync function scrapWithPlaywright(url) {\n    try {\n        const response = await fetch(process.env.PLAYWRIGHT_MICROSERVICE_URL, {\n            method: \"POST\",\n            headers: {\n                \"Content-Type\": \"application/json\"\n            },\n            body: JSON.stringify({\n                url: url\n            })\n        });\n        if (!response.ok) {\n            console.error(`Error fetching w/ playwright server -> URL: ${url} with status: ${response.status}`);\n            return \"\";\n        }\n        const data = await response.json();\n        const html = data.content;\n        return html ?? \"\";\n    } catch (error) {\n        console.error(`Error scraping with Puppeteer: ${error}`);\n        return \"\";\n    }\n}\nasync function scrapSingleUrl(urlToScrap, toMarkdown = true, pageOptions = {\n    onlyMainContent: true\n}) {\n    urlToScrap = urlToScrap.trim();\n    const removeUnwantedElements = (html, pageOptions)=>{\n        const soup = cheerio__WEBPACK_IMPORTED_MODULE_0__.load(html);\n        soup(\"script, style, iframe, noscript, meta, head\").remove();\n        if (pageOptions.onlyMainContent) {\n            // remove any other tags that are not in the main content\n            _utils_excludeTags__WEBPACK_IMPORTED_MODULE_5__.excludeNonMainTags.forEach((tag)=>{\n                soup(tag).remove();\n            });\n        }\n        return soup.html();\n    };\n    const attemptScraping = async (url, method)=>{\n        let text = \"\";\n        switch(method){\n            case \"firecrawl-scraper\":\n                text = await scrapWithCustomFirecrawl(url);\n                break;\n            case \"scrapingBee\":\n                if (process.env.SCRAPING_BEE_API_KEY) {\n                    text = await scrapWithScrapingBee(url, \"domcontentloaded\", pageOptions.fallback === false ? 7000 : 15000);\n                }\n                break;\n            case \"playwright\":\n                if (process.env.PLAYWRIGHT_MICROSERVICE_URL) {\n                    text = await scrapWithPlaywright(url);\n                }\n                break;\n            case \"scrapingBeeLoad\":\n                if (process.env.SCRAPING_BEE_API_KEY) {\n                    text = await scrapWithScrapingBee(url, \"networkidle2\");\n                }\n                break;\n            case \"fetch\":\n                try {\n                    const response = await fetch(url);\n                    if (!response.ok) {\n                        console.error(`Error fetching URL: ${url} with status: ${response.status}`);\n                        return \"\";\n                    }\n                    text = await response.text();\n                } catch (error) {\n                    console.error(`Error scraping URL: ${error}`);\n                    return \"\";\n                }\n                break;\n        }\n        //* TODO: add an optional to return markdown or structured/extracted content \n        let cleanedHtml = removeUnwantedElements(text, pageOptions);\n        return [\n            await (0,_lib_html_to_markdown__WEBPACK_IMPORTED_MODULE_4__.parseMarkdown)(cleanedHtml),\n            text\n        ];\n    };\n    try {\n        // TODO: comment this out once we're ready to merge firecrawl-scraper into the mono-repo\n        // let [text, html] = await attemptScraping(urlToScrap, 'firecrawl-scraper');\n        // if (!text || text.length < 100) {\n        //   console.log(\"Falling back to scraping bee load\");\n        //   [text, html] = await attemptScraping(urlToScrap, 'scrapingBeeLoad');\n        // }\n        let [text, html] = await attemptScraping(urlToScrap, \"scrapingBee\");\n        // Basically means that it is using /search endpoint\n        if (pageOptions.fallback === false) {\n            const soup = cheerio__WEBPACK_IMPORTED_MODULE_0__.load(html);\n            const metadata = (0,_utils_metadata__WEBPACK_IMPORTED_MODULE_2__.extractMetadata)(soup, urlToScrap);\n            return {\n                url: urlToScrap,\n                content: text,\n                markdown: text,\n                metadata: {\n                    ...metadata,\n                    sourceURL: urlToScrap\n                }\n            };\n        }\n        if (!text || text.length < 100) {\n            console.log(\"Falling back to playwright\");\n            [text, html] = await attemptScraping(urlToScrap, \"playwright\");\n        }\n        if (!text || text.length < 100) {\n            console.log(\"Falling back to scraping bee load\");\n            [text, html] = await attemptScraping(urlToScrap, \"scrapingBeeLoad\");\n        }\n        if (!text || text.length < 100) {\n            console.log(\"Falling back to fetch\");\n            [text, html] = await attemptScraping(urlToScrap, \"fetch\");\n        }\n        const soup = cheerio__WEBPACK_IMPORTED_MODULE_0__.load(html);\n        const metadata = (0,_utils_metadata__WEBPACK_IMPORTED_MODULE_2__.extractMetadata)(soup, urlToScrap);\n        return {\n            content: text,\n            markdown: text,\n            metadata: {\n                ...metadata,\n                sourceURL: urlToScrap\n            }\n        };\n    } catch (error) {\n        console.error(`Error: ${error} - Failed to fetch URL: ${urlToScrap}`);\n        return {\n            content: \"\",\n            markdown: \"\",\n            metadata: {\n                sourceURL: urlToScrap\n            }\n        };\n    }\n}\n\n__webpack_async_result__();\n} catch(e) { __webpack_async_result__(e); } });//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(api)/./src/scraper/WebScraper/single_url.ts\n");

/***/ }),

/***/ "(api)/./src/scraper/WebScraper/sitemap.ts":
/*!*******************************************!*\
  !*** ./src/scraper/WebScraper/sitemap.ts ***!
  \*******************************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.a(module, async (__webpack_handle_async_dependencies__, __webpack_async_result__) => { try {\n__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   fetchSitemapData: () => (/* binding */ fetchSitemapData),\n/* harmony export */   getLinksFromSitemap: () => (/* binding */ getLinksFromSitemap)\n/* harmony export */ });\n/* harmony import */ var axios__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! axios */ \"axios\");\n/* harmony import */ var xml2js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! xml2js */ \"xml2js\");\n/* harmony import */ var xml2js__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(xml2js__WEBPACK_IMPORTED_MODULE_1__);\nvar __webpack_async_dependencies__ = __webpack_handle_async_dependencies__([axios__WEBPACK_IMPORTED_MODULE_0__]);\naxios__WEBPACK_IMPORTED_MODULE_0__ = (__webpack_async_dependencies__.then ? (await __webpack_async_dependencies__)() : __webpack_async_dependencies__)[0];\n\n\nasync function getLinksFromSitemap(sitemapUrl, allUrls = []) {\n    try {\n        let content;\n        try {\n            const response = await axios__WEBPACK_IMPORTED_MODULE_0__[\"default\"].get(sitemapUrl);\n            content = response.data;\n        } catch (error) {\n            console.error(`Request failed for ${sitemapUrl}: ${error}`);\n            return allUrls;\n        }\n        const parsed = await (0,xml2js__WEBPACK_IMPORTED_MODULE_1__.parseStringPromise)(content);\n        const root = parsed.urlset || parsed.sitemapindex;\n        if (root && root.sitemap) {\n            for (const sitemap of root.sitemap){\n                if (sitemap.loc && sitemap.loc.length > 0) {\n                    await getLinksFromSitemap(sitemap.loc[0], allUrls);\n                }\n            }\n        } else if (root && root.url) {\n            for (const url of root.url){\n                if (url.loc && url.loc.length > 0) {\n                    allUrls.push(url.loc[0]);\n                }\n            }\n        }\n    } catch (error) {\n        console.error(`Error processing ${sitemapUrl}: ${error}`);\n    }\n    return allUrls;\n}\nconst fetchSitemapData = async (url)=>{\n    const sitemapUrl = url.endsWith(\"/sitemap.xml\") ? url : `${url}/sitemap.xml`;\n    try {\n        const response = await axios__WEBPACK_IMPORTED_MODULE_0__[\"default\"].get(sitemapUrl);\n        if (response.status === 200) {\n            const xml = response.data;\n            const parsedXml = await (0,xml2js__WEBPACK_IMPORTED_MODULE_1__.parseStringPromise)(xml);\n            const sitemapData = [];\n            if (parsedXml.urlset && parsedXml.urlset.url) {\n                for (const urlElement of parsedXml.urlset.url){\n                    const sitemapEntry = {\n                        loc: urlElement.loc[0]\n                    };\n                    if (urlElement.lastmod) sitemapEntry.lastmod = urlElement.lastmod[0];\n                    if (urlElement.changefreq) sitemapEntry.changefreq = urlElement.changefreq[0];\n                    if (urlElement.priority) sitemapEntry.priority = Number(urlElement.priority[0]);\n                    sitemapData.push(sitemapEntry);\n                }\n            }\n            return sitemapData;\n        }\n        return null;\n    } catch (error) {\n    // Error handling for failed sitemap fetch\n    }\n    return [];\n};\n\n__webpack_async_result__();\n} catch(e) { __webpack_async_result__(e); } });//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwaSkvLi9zcmMvc2NyYXBlci9XZWJTY3JhcGVyL3NpdGVtYXAudHMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7QUFBMEI7QUFDa0I7QUFFckMsZUFBZUUsb0JBQ3BCQyxVQUFrQixFQUNsQkMsVUFBb0IsRUFBRTtJQUV0QixJQUFJO1FBQ0YsSUFBSUM7UUFDSixJQUFJO1lBQ0YsTUFBTUMsV0FBVyxNQUFNTixpREFBU08sQ0FBQ0o7WUFDakNFLFVBQVVDLFNBQVNFO1FBQ3JCLEVBQUUsT0FBT0MsT0FBTztZQUNkQyxRQUFRRCxNQUFNLENBQUMsbUJBQW1CLEVBQUVOLFdBQVcsRUFBRSxFQUFFTSxNQUFNLENBQUM7WUFDMUQsT0FBT0w7UUFDVDtRQUVBLE1BQU1PLFNBQVMsTUFBTVYsMERBQWtCQSxDQUFDSTtRQUN4QyxNQUFNTyxPQUFPRCxPQUFPRSxVQUFVRixPQUFPRztRQUVyQyxJQUFJRixRQUFRQSxLQUFLRyxTQUFTO1lBQ3hCLEtBQUssTUFBTUEsV0FBV0gsS0FBS0csUUFBUztnQkFDbEMsSUFBSUEsUUFBUUMsT0FBT0QsUUFBUUMsSUFBSUMsU0FBUyxHQUFHO29CQUN6QyxNQUFNZixvQkFBb0JhLFFBQVFDLEdBQUcsQ0FBQyxFQUFFLEVBQUVaO2dCQUM1QztZQUNGO1FBQ0YsT0FBTyxJQUFJUSxRQUFRQSxLQUFLTSxLQUFLO1lBQzNCLEtBQUssTUFBTUEsT0FBT04sS0FBS00sSUFBSztnQkFDMUIsSUFBSUEsSUFBSUYsT0FBT0UsSUFBSUYsSUFBSUMsU0FBUyxHQUFHO29CQUNqQ2IsUUFBUWUsS0FBS0QsSUFBSUYsR0FBRyxDQUFDLEVBQUU7Z0JBQ3pCO1lBQ0Y7UUFDRjtJQUNGLEVBQUUsT0FBT1AsT0FBTztRQUNkQyxRQUFRRCxNQUFNLENBQUMsaUJBQWlCLEVBQUVOLFdBQVcsRUFBRSxFQUFFTSxNQUFNLENBQUM7SUFDMUQ7SUFFQSxPQUFPTDtBQUNUO0FBRU8sTUFBTWdCLG1CQUFtQixPQUFPRjtJQUNyQyxNQUFNZixhQUFhZSxJQUFJRyxTQUFTLGtCQUFrQkgsTUFBTSxDQUFDLEVBQUVBLElBQUksWUFBWSxDQUFDO0lBQzVFLElBQUk7UUFDRixNQUFNWixXQUFXLE1BQU1OLGlEQUFTTyxDQUFDSjtRQUNqQyxJQUFJRyxTQUFTZ0IsV0FBVyxLQUFLO1lBQzNCLE1BQU1DLE1BQU1qQixTQUFTRTtZQUNyQixNQUFNZ0IsWUFBWSxNQUFNdkIsMERBQWtCQSxDQUFDc0I7WUFFM0MsTUFBTUUsY0FBOEIsRUFBRTtZQUN0QyxJQUFJRCxVQUFVWCxVQUFVVyxVQUFVWCxPQUFPSyxLQUFLO2dCQUM1QyxLQUFLLE1BQU1RLGNBQWNGLFVBQVVYLE9BQU9LLElBQUs7b0JBQzdDLE1BQU1TLGVBQTZCO3dCQUFFWCxLQUFLVSxXQUFXVixHQUFHLENBQUMsRUFBRTtvQkFBQztvQkFDNUQsSUFBSVUsV0FBV0UsU0FBU0QsYUFBYUMsVUFBVUYsV0FBV0UsT0FBTyxDQUFDLEVBQUU7b0JBQ3BFLElBQUlGLFdBQVdHLFlBQVlGLGFBQWFFLGFBQWFILFdBQVdHLFVBQVUsQ0FBQyxFQUFFO29CQUM3RSxJQUFJSCxXQUFXSSxVQUFVSCxhQUFhRyxXQUFXQyxPQUFPTCxXQUFXSSxRQUFRLENBQUMsRUFBRTtvQkFDOUVMLFlBQVlOLEtBQUtRO2dCQUNuQjtZQUNGO1lBRUEsT0FBT0Y7UUFDVDtRQUNBLE9BQU87SUFDVCxFQUFFLE9BQU9oQixPQUFPO0lBQ2QsMENBQTBDO0lBQzVDO0lBQ0EsT0FBTyxFQUFFO0FBQ1gsRUFBQyIsInNvdXJjZXMiOlsid2VicGFjazovL2ZpcmVjcmF3bC1zY3JhcGVyLWpzLy4vc3JjL3NjcmFwZXIvV2ViU2NyYXBlci9zaXRlbWFwLnRzPzMwNGQiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IGF4aW9zIGZyb20gXCJheGlvc1wiO1xuaW1wb3J0IHsgcGFyc2VTdHJpbmdQcm9taXNlIH0gZnJvbSBcInhtbDJqc1wiO1xuXG5leHBvcnQgYXN5bmMgZnVuY3Rpb24gZ2V0TGlua3NGcm9tU2l0ZW1hcChcbiAgc2l0ZW1hcFVybDogc3RyaW5nLFxuICBhbGxVcmxzOiBzdHJpbmdbXSA9IFtdXG4pOiBQcm9taXNlPHN0cmluZ1tdPiB7XG4gIHRyeSB7XG4gICAgbGV0IGNvbnRlbnQ6IHN0cmluZztcbiAgICB0cnkge1xuICAgICAgY29uc3QgcmVzcG9uc2UgPSBhd2FpdCBheGlvcy5nZXQoc2l0ZW1hcFVybCk7XG4gICAgICBjb250ZW50ID0gcmVzcG9uc2UuZGF0YTtcbiAgICB9IGNhdGNoIChlcnJvcikge1xuICAgICAgY29uc29sZS5lcnJvcihgUmVxdWVzdCBmYWlsZWQgZm9yICR7c2l0ZW1hcFVybH06ICR7ZXJyb3J9YCk7XG4gICAgICByZXR1cm4gYWxsVXJscztcbiAgICB9XG5cbiAgICBjb25zdCBwYXJzZWQgPSBhd2FpdCBwYXJzZVN0cmluZ1Byb21pc2UoY29udGVudCk7XG4gICAgY29uc3Qgcm9vdCA9IHBhcnNlZC51cmxzZXQgfHwgcGFyc2VkLnNpdGVtYXBpbmRleDtcblxuICAgIGlmIChyb290ICYmIHJvb3Quc2l0ZW1hcCkge1xuICAgICAgZm9yIChjb25zdCBzaXRlbWFwIG9mIHJvb3Quc2l0ZW1hcCkge1xuICAgICAgICBpZiAoc2l0ZW1hcC5sb2MgJiYgc2l0ZW1hcC5sb2MubGVuZ3RoID4gMCkge1xuICAgICAgICAgIGF3YWl0IGdldExpbmtzRnJvbVNpdGVtYXAoc2l0ZW1hcC5sb2NbMF0sIGFsbFVybHMpO1xuICAgICAgICB9XG4gICAgICB9XG4gICAgfSBlbHNlIGlmIChyb290ICYmIHJvb3QudXJsKSB7XG4gICAgICBmb3IgKGNvbnN0IHVybCBvZiByb290LnVybCkge1xuICAgICAgICBpZiAodXJsLmxvYyAmJiB1cmwubG9jLmxlbmd0aCA+IDApIHtcbiAgICAgICAgICBhbGxVcmxzLnB1c2godXJsLmxvY1swXSk7XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICB9XG4gIH0gY2F0Y2ggKGVycm9yKSB7XG4gICAgY29uc29sZS5lcnJvcihgRXJyb3IgcHJvY2Vzc2luZyAke3NpdGVtYXBVcmx9OiAke2Vycm9yfWApO1xuICB9XG5cbiAgcmV0dXJuIGFsbFVybHM7XG59XG5cbmV4cG9ydCBjb25zdCBmZXRjaFNpdGVtYXBEYXRhID0gYXN5bmMgKHVybDogc3RyaW5nKTogUHJvbWlzZTxTaXRlbWFwRW50cnlbXSB8IG51bGw+ID0+IHtcbiAgY29uc3Qgc2l0ZW1hcFVybCA9IHVybC5lbmRzV2l0aChcIi9zaXRlbWFwLnhtbFwiKSA/IHVybCA6IGAke3VybH0vc2l0ZW1hcC54bWxgO1xuICB0cnkge1xuICAgIGNvbnN0IHJlc3BvbnNlID0gYXdhaXQgYXhpb3MuZ2V0KHNpdGVtYXBVcmwpO1xuICAgIGlmIChyZXNwb25zZS5zdGF0dXMgPT09IDIwMCkge1xuICAgICAgY29uc3QgeG1sID0gcmVzcG9uc2UuZGF0YTtcbiAgICAgIGNvbnN0IHBhcnNlZFhtbCA9IGF3YWl0IHBhcnNlU3RyaW5nUHJvbWlzZSh4bWwpO1xuXG4gICAgICBjb25zdCBzaXRlbWFwRGF0YTogU2l0ZW1hcEVudHJ5W10gPSBbXTtcbiAgICAgIGlmIChwYXJzZWRYbWwudXJsc2V0ICYmIHBhcnNlZFhtbC51cmxzZXQudXJsKSB7XG4gICAgICAgIGZvciAoY29uc3QgdXJsRWxlbWVudCBvZiBwYXJzZWRYbWwudXJsc2V0LnVybCkge1xuICAgICAgICAgIGNvbnN0IHNpdGVtYXBFbnRyeTogU2l0ZW1hcEVudHJ5ID0geyBsb2M6IHVybEVsZW1lbnQubG9jWzBdIH07XG4gICAgICAgICAgaWYgKHVybEVsZW1lbnQubGFzdG1vZCkgc2l0ZW1hcEVudHJ5Lmxhc3Rtb2QgPSB1cmxFbGVtZW50Lmxhc3Rtb2RbMF07XG4gICAgICAgICAgaWYgKHVybEVsZW1lbnQuY2hhbmdlZnJlcSkgc2l0ZW1hcEVudHJ5LmNoYW5nZWZyZXEgPSB1cmxFbGVtZW50LmNoYW5nZWZyZXFbMF07XG4gICAgICAgICAgaWYgKHVybEVsZW1lbnQucHJpb3JpdHkpIHNpdGVtYXBFbnRyeS5wcmlvcml0eSA9IE51bWJlcih1cmxFbGVtZW50LnByaW9yaXR5WzBdKTtcbiAgICAgICAgICBzaXRlbWFwRGF0YS5wdXNoKHNpdGVtYXBFbnRyeSk7XG4gICAgICAgIH1cbiAgICAgIH1cblxuICAgICAgcmV0dXJuIHNpdGVtYXBEYXRhO1xuICAgIH1cbiAgICByZXR1cm4gbnVsbDtcbiAgfSBjYXRjaCAoZXJyb3IpIHtcbiAgICAvLyBFcnJvciBoYW5kbGluZyBmb3IgZmFpbGVkIHNpdGVtYXAgZmV0Y2hcbiAgfVxuICByZXR1cm4gW107XG59XG5cbmV4cG9ydCBpbnRlcmZhY2UgU2l0ZW1hcEVudHJ5IHtcbiAgbG9jOiBzdHJpbmc7XG4gIGxhc3Rtb2Q/OiBzdHJpbmc7XG4gIGNoYW5nZWZyZXE/OiBzdHJpbmc7XG4gIHByaW9yaXR5PzogbnVtYmVyO1xufSJdLCJuYW1lcyI6WyJheGlvcyIsInBhcnNlU3RyaW5nUHJvbWlzZSIsImdldExpbmtzRnJvbVNpdGVtYXAiLCJzaXRlbWFwVXJsIiwiYWxsVXJscyIsImNvbnRlbnQiLCJyZXNwb25zZSIsImdldCIsImRhdGEiLCJlcnJvciIsImNvbnNvbGUiLCJwYXJzZWQiLCJyb290IiwidXJsc2V0Iiwic2l0ZW1hcGluZGV4Iiwic2l0ZW1hcCIsImxvYyIsImxlbmd0aCIsInVybCIsInB1c2giLCJmZXRjaFNpdGVtYXBEYXRhIiwiZW5kc1dpdGgiLCJzdGF0dXMiLCJ4bWwiLCJwYXJzZWRYbWwiLCJzaXRlbWFwRGF0YSIsInVybEVsZW1lbnQiLCJzaXRlbWFwRW50cnkiLCJsYXN0bW9kIiwiY2hhbmdlZnJlcSIsInByaW9yaXR5IiwiTnVtYmVyIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(api)/./src/scraper/WebScraper/sitemap.ts\n");

/***/ }),

/***/ "(api)/./src/scraper/WebScraper/utils/blocklist.ts":
/*!***************************************************!*\
  !*** ./src/scraper/WebScraper/utils/blocklist.ts ***!
  \***************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   isUrlBlocked: () => (/* binding */ isUrlBlocked)\n/* harmony export */ });\nconst socialMediaBlocklist = [\n    \"facebook.com\",\n    \"twitter.com\",\n    \"instagram.com\",\n    \"linkedin.com\",\n    \"pinterest.com\",\n    \"snapchat.com\",\n    \"tiktok.com\",\n    \"reddit.com\",\n    \"tumblr.com\",\n    \"flickr.com\",\n    \"whatsapp.com\",\n    \"wechat.com\",\n    \"telegram.org\"\n];\nconst allowedUrls = [\n    \"linkedin.com/pulse\"\n];\nfunction isUrlBlocked(url) {\n    if (allowedUrls.some((allowedUrl)=>url.includes(allowedUrl))) {\n        return false;\n    }\n    return socialMediaBlocklist.some((domain)=>url.includes(domain));\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwaSkvLi9zcmMvc2NyYXBlci9XZWJTY3JhcGVyL3V0aWxzL2Jsb2NrbGlzdC50cyIsIm1hcHBpbmdzIjoiOzs7O0FBQUEsTUFBTUEsdUJBQXVCO0lBQzNCO0lBQ0E7SUFDQTtJQUNBO0lBQ0E7SUFDQTtJQUNBO0lBQ0E7SUFDQTtJQUNBO0lBQ0E7SUFDQTtJQUNBO0NBQ0Q7QUFFRCxNQUFNQyxjQUFjO0lBQ2xCO0NBQ0Q7QUFFTSxTQUFTQyxhQUFhQyxHQUFXO0lBQ3RDLElBQUlGLFlBQVlHLEtBQUtDLENBQUFBLGFBQWNGLElBQUlHLFNBQVNELGNBQWM7UUFDNUQsT0FBTztJQUNUO0lBRUEsT0FBT0wscUJBQXFCSSxLQUFLRyxDQUFBQSxTQUFVSixJQUFJRyxTQUFTQztBQUMxRCIsInNvdXJjZXMiOlsid2VicGFjazovL2ZpcmVjcmF3bC1zY3JhcGVyLWpzLy4vc3JjL3NjcmFwZXIvV2ViU2NyYXBlci91dGlscy9ibG9ja2xpc3QudHM/NmZmMiJdLCJzb3VyY2VzQ29udGVudCI6WyJjb25zdCBzb2NpYWxNZWRpYUJsb2NrbGlzdCA9IFtcbiAgJ2ZhY2Vib29rLmNvbScsXG4gICd0d2l0dGVyLmNvbScsXG4gICdpbnN0YWdyYW0uY29tJyxcbiAgJ2xpbmtlZGluLmNvbScsXG4gICdwaW50ZXJlc3QuY29tJyxcbiAgJ3NuYXBjaGF0LmNvbScsXG4gICd0aWt0b2suY29tJyxcbiAgJ3JlZGRpdC5jb20nLFxuICAndHVtYmxyLmNvbScsXG4gICdmbGlja3IuY29tJyxcbiAgJ3doYXRzYXBwLmNvbScsXG4gICd3ZWNoYXQuY29tJyxcbiAgJ3RlbGVncmFtLm9yZycsXG5dO1xuXG5jb25zdCBhbGxvd2VkVXJscyA9IFtcbiAgJ2xpbmtlZGluLmNvbS9wdWxzZSdcbl07XG5cbmV4cG9ydCBmdW5jdGlvbiBpc1VybEJsb2NrZWQodXJsOiBzdHJpbmcpOiBib29sZWFuIHtcbiAgaWYgKGFsbG93ZWRVcmxzLnNvbWUoYWxsb3dlZFVybCA9PiB1cmwuaW5jbHVkZXMoYWxsb3dlZFVybCkpKSB7XG4gICAgcmV0dXJuIGZhbHNlO1xuICB9XG5cbiAgcmV0dXJuIHNvY2lhbE1lZGlhQmxvY2tsaXN0LnNvbWUoZG9tYWluID0+IHVybC5pbmNsdWRlcyhkb21haW4pKTtcbn1cbiJdLCJuYW1lcyI6WyJzb2NpYWxNZWRpYUJsb2NrbGlzdCIsImFsbG93ZWRVcmxzIiwiaXNVcmxCbG9ja2VkIiwidXJsIiwic29tZSIsImFsbG93ZWRVcmwiLCJpbmNsdWRlcyIsImRvbWFpbiJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(api)/./src/scraper/WebScraper/utils/blocklist.ts\n");

/***/ }),

/***/ "(api)/./src/scraper/WebScraper/utils/custom/website_params.ts":
/*!***************************************************************!*\
  !*** ./src/scraper/WebScraper/utils/custom/website_params.ts ***!
  \***************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   urlSpecificParams: () => (/* binding */ urlSpecificParams)\n/* harmony export */ });\nconst urlSpecificParams = {\n    \"platform.openai.com\": {\n        params: {\n            wait_browser: \"networkidle2\",\n            block_resources: false\n        },\n        headers: {\n            \"User-Agent\": \"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/124.0.0.0 Safari/537.36\",\n            \"sec-fetch-site\": \"same-origin\",\n            \"sec-fetch-mode\": \"cors\",\n            \"sec-fetch-dest\": \"empty\",\n            referer: \"https://www.google.com/\",\n            \"accept-language\": \"en-US,en;q=0.9\",\n            \"accept-encoding\": \"gzip, deflate, br\",\n            accept: \"text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.9\"\n        },\n        cookies: {\n            __cf_bm: \"mC1On8P2GWT3A5UeSYH6z_MP94xcTAdZ5jfNi9IT2U0-1714327136-1.0.1.1-ILAP5pSX_Oo9PPo2iHEYCYX.p9a0yRBNLr58GHyrzYNDJ537xYpG50MXxUYVdfrD.h3FV5O7oMlRKGA0scbxaQ\"\n        }\n    },\n    \"support.greenpay.me\": {\n        params: {\n            wait_browser: \"networkidle2\",\n            block_resources: false\n        },\n        headers: {\n            \"User-Agent\": \"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/124.0.0.0 Safari/537.36\",\n            \"sec-fetch-site\": \"same-origin\",\n            \"sec-fetch-mode\": \"cors\",\n            \"sec-fetch-dest\": \"empty\",\n            referer: \"https://www.google.com/\",\n            \"accept-language\": \"en-US,en;q=0.9\",\n            \"accept-encoding\": \"gzip, deflate, br\",\n            accept: \"text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.9\"\n        }\n    }\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwaSkvLi9zcmMvc2NyYXBlci9XZWJTY3JhcGVyL3V0aWxzL2N1c3RvbS93ZWJzaXRlX3BhcmFtcy50cyIsIm1hcHBpbmdzIjoiOzs7O0FBQU8sTUFBTUEsb0JBQW9CO0lBQy9CLHVCQUF1QjtRQUNyQkMsUUFBUTtZQUNOQyxjQUFjO1lBQ2RDLGlCQUFpQjtRQUNuQjtRQUNBQyxTQUFTO1lBQ1AsY0FDRTtZQUNGLGtCQUFrQjtZQUNsQixrQkFBa0I7WUFDbEIsa0JBQWtCO1lBQ2xCQyxTQUFTO1lBQ1QsbUJBQW1CO1lBQ25CLG1CQUFtQjtZQUNuQkMsUUFDRTtRQUNKO1FBQ0FDLFNBQVM7WUFDUEMsU0FDRTtRQUNKO0lBQ0Y7SUFDQSx1QkFBc0I7UUFDcEJQLFFBQVE7WUFDSkMsY0FBYztZQUNkQyxpQkFBaUI7UUFDbkI7UUFDQUMsU0FBUztZQUNQLGNBQ0U7WUFDRixrQkFBa0I7WUFDbEIsa0JBQWtCO1lBQ2xCLGtCQUFrQjtZQUNsQkMsU0FBUztZQUNULG1CQUFtQjtZQUNuQixtQkFBbUI7WUFDbkJDLFFBQ0U7UUFDSjtJQUNKO0FBQ0YsRUFBRSIsInNvdXJjZXMiOlsid2VicGFjazovL2ZpcmVjcmF3bC1zY3JhcGVyLWpzLy4vc3JjL3NjcmFwZXIvV2ViU2NyYXBlci91dGlscy9jdXN0b20vd2Vic2l0ZV9wYXJhbXMudHM/MTBkYSJdLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQgY29uc3QgdXJsU3BlY2lmaWNQYXJhbXMgPSB7XG4gIFwicGxhdGZvcm0ub3BlbmFpLmNvbVwiOiB7XG4gICAgcGFyYW1zOiB7XG4gICAgICB3YWl0X2Jyb3dzZXI6IFwibmV0d29ya2lkbGUyXCIsXG4gICAgICBibG9ja19yZXNvdXJjZXM6IGZhbHNlLFxuICAgIH0sXG4gICAgaGVhZGVyczoge1xuICAgICAgXCJVc2VyLUFnZW50XCI6XG4gICAgICAgIFwiTW96aWxsYS81LjAgKE1hY2ludG9zaDsgSW50ZWwgTWFjIE9TIFggMTBfMTVfNykgQXBwbGVXZWJLaXQvNTM3LjM2IChLSFRNTCwgbGlrZSBHZWNrbykgQ2hyb21lLzEyNC4wLjAuMCBTYWZhcmkvNTM3LjM2XCIsXG4gICAgICBcInNlYy1mZXRjaC1zaXRlXCI6IFwic2FtZS1vcmlnaW5cIixcbiAgICAgIFwic2VjLWZldGNoLW1vZGVcIjogXCJjb3JzXCIsXG4gICAgICBcInNlYy1mZXRjaC1kZXN0XCI6IFwiZW1wdHlcIixcbiAgICAgIHJlZmVyZXI6IFwiaHR0cHM6Ly93d3cuZ29vZ2xlLmNvbS9cIixcbiAgICAgIFwiYWNjZXB0LWxhbmd1YWdlXCI6IFwiZW4tVVMsZW47cT0wLjlcIixcbiAgICAgIFwiYWNjZXB0LWVuY29kaW5nXCI6IFwiZ3ppcCwgZGVmbGF0ZSwgYnJcIixcbiAgICAgIGFjY2VwdDpcbiAgICAgICAgXCJ0ZXh0L2h0bWwsYXBwbGljYXRpb24veGh0bWwreG1sLGFwcGxpY2F0aW9uL3htbDtxPTAuOSxpbWFnZS9hdmlmLGltYWdlL3dlYnAsaW1hZ2UvYXBuZywqLyo7cT0wLjgsYXBwbGljYXRpb24vc2lnbmVkLWV4Y2hhbmdlO3Y9YjM7cT0wLjlcIixcbiAgICB9LFxuICAgIGNvb2tpZXM6IHtcbiAgICAgIF9fY2ZfYm06XG4gICAgICAgIFwibUMxT244UDJHV1QzQTVVZVNZSDZ6X01QOTR4Y1RBZFo1amZOaTlJVDJVMC0xNzE0MzI3MTM2LTEuMC4xLjEtSUxBUDVwU1hfT285UFBvMmlIRVlDWVgucDlhMHlSQk5McjU4R0h5cnpZTkRKNTM3eFlwRzUwTVh4VVlWZGZyRC5oM0ZWNU83b01sUktHQTBzY2J4YVFcIixcbiAgICB9LFxuICB9LFxuICBcInN1cHBvcnQuZ3JlZW5wYXkubWVcIjp7XG4gICAgcGFyYW1zOiB7XG4gICAgICAgIHdhaXRfYnJvd3NlcjogXCJuZXR3b3JraWRsZTJcIixcbiAgICAgICAgYmxvY2tfcmVzb3VyY2VzOiBmYWxzZSxcbiAgICAgIH0sXG4gICAgICBoZWFkZXJzOiB7XG4gICAgICAgIFwiVXNlci1BZ2VudFwiOlxuICAgICAgICAgIFwiTW96aWxsYS81LjAgKE1hY2ludG9zaDsgSW50ZWwgTWFjIE9TIFggMTBfMTVfNykgQXBwbGVXZWJLaXQvNTM3LjM2IChLSFRNTCwgbGlrZSBHZWNrbykgQ2hyb21lLzEyNC4wLjAuMCBTYWZhcmkvNTM3LjM2XCIsXG4gICAgICAgIFwic2VjLWZldGNoLXNpdGVcIjogXCJzYW1lLW9yaWdpblwiLFxuICAgICAgICBcInNlYy1mZXRjaC1tb2RlXCI6IFwiY29yc1wiLFxuICAgICAgICBcInNlYy1mZXRjaC1kZXN0XCI6IFwiZW1wdHlcIixcbiAgICAgICAgcmVmZXJlcjogXCJodHRwczovL3d3dy5nb29nbGUuY29tL1wiLFxuICAgICAgICBcImFjY2VwdC1sYW5ndWFnZVwiOiBcImVuLVVTLGVuO3E9MC45XCIsXG4gICAgICAgIFwiYWNjZXB0LWVuY29kaW5nXCI6IFwiZ3ppcCwgZGVmbGF0ZSwgYnJcIixcbiAgICAgICAgYWNjZXB0OlxuICAgICAgICAgIFwidGV4dC9odG1sLGFwcGxpY2F0aW9uL3hodG1sK3htbCxhcHBsaWNhdGlvbi94bWw7cT0wLjksaW1hZ2UvYXZpZixpbWFnZS93ZWJwLGltYWdlL2FwbmcsKi8qO3E9MC44LGFwcGxpY2F0aW9uL3NpZ25lZC1leGNoYW5nZTt2PWIzO3E9MC45XCIsXG4gICAgICB9LFxuICB9XG59O1xuIl0sIm5hbWVzIjpbInVybFNwZWNpZmljUGFyYW1zIiwicGFyYW1zIiwid2FpdF9icm93c2VyIiwiYmxvY2tfcmVzb3VyY2VzIiwiaGVhZGVycyIsInJlZmVyZXIiLCJhY2NlcHQiLCJjb29raWVzIiwiX19jZl9ibSJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(api)/./src/scraper/WebScraper/utils/custom/website_params.ts\n");

/***/ }),

/***/ "(api)/./src/scraper/WebScraper/utils/excludeTags.ts":
/*!*****************************************************!*\
  !*** ./src/scraper/WebScraper/utils/excludeTags.ts ***!
  \*****************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   excludeNonMainTags: () => (/* binding */ excludeNonMainTags)\n/* harmony export */ });\nconst excludeNonMainTags = [\n    \"header\",\n    \"footer\",\n    \"nav\",\n    \"aside\",\n    \".header\",\n    \".top\",\n    \".navbar\",\n    \"#header\",\n    \".footer\",\n    \".bottom\",\n    \"#footer\",\n    \".sidebar\",\n    \".side\",\n    \".aside\",\n    \"#sidebar\",\n    \".modal\",\n    \".popup\",\n    \"#modal\",\n    \".overlay\",\n    \".ad\",\n    \".ads\",\n    \".advert\",\n    \"#ad\",\n    \".lang-selector\",\n    \".language\",\n    \"#language-selector\",\n    \".social\",\n    \".social-media\",\n    \".social-links\",\n    \"#social\",\n    \".menu\",\n    \".navigation\",\n    \"#nav\",\n    \".breadcrumbs\",\n    \"#breadcrumbs\",\n    \".form\",\n    \"form\",\n    \"#search-form\",\n    \".search\",\n    \"#search\",\n    \".share\",\n    \"#share\",\n    \".pagination\",\n    \"#pagination\",\n    \".widget\",\n    \"#widget\",\n    \".related\",\n    \"#related\",\n    \".tag\",\n    \"#tag\",\n    \".category\",\n    \"#category\",\n    \".comment\",\n    \"#comment\",\n    \".reply\",\n    \"#reply\",\n    \".author\",\n    \"#author\"\n];\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwaSkvLi9zcmMvc2NyYXBlci9XZWJTY3JhcGVyL3V0aWxzL2V4Y2x1ZGVUYWdzLnRzIiwibWFwcGluZ3MiOiI7Ozs7QUFBTyxNQUFNQSxxQkFBcUI7SUFDaEM7SUFDQTtJQUNBO0lBQ0E7SUFDQTtJQUNBO0lBQ0E7SUFDQTtJQUNBO0lBQ0E7SUFDQTtJQUNBO0lBQ0E7SUFDQTtJQUNBO0lBQ0E7SUFDQTtJQUNBO0lBQ0E7SUFDQTtJQUNBO0lBQ0E7SUFDQTtJQUNBO0lBQ0E7SUFDQTtJQUNBO0lBQ0E7SUFDQTtJQUNBO0lBQ0E7SUFDQTtJQUNBO0lBQ0E7SUFDQTtJQUNBO0lBQ0E7SUFDQTtJQUNBO0lBQ0E7SUFDQTtJQUNBO0lBQ0E7SUFDQTtJQUNBO0lBQ0E7SUFDQTtJQUNBO0lBQ0E7SUFDQTtJQUNBO0lBQ0E7SUFDQTtJQUNBO0lBQ0E7SUFDQTtJQUNBO0lBQ0E7Q0FDRCxDQUFDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vZmlyZWNyYXdsLXNjcmFwZXItanMvLi9zcmMvc2NyYXBlci9XZWJTY3JhcGVyL3V0aWxzL2V4Y2x1ZGVUYWdzLnRzPzkyZWUiXSwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0IGNvbnN0IGV4Y2x1ZGVOb25NYWluVGFncyA9IFtcbiAgXCJoZWFkZXJcIixcbiAgXCJmb290ZXJcIixcbiAgXCJuYXZcIixcbiAgXCJhc2lkZVwiLFxuICBcIi5oZWFkZXJcIixcbiAgXCIudG9wXCIsXG4gIFwiLm5hdmJhclwiLFxuICBcIiNoZWFkZXJcIixcbiAgXCIuZm9vdGVyXCIsXG4gIFwiLmJvdHRvbVwiLFxuICBcIiNmb290ZXJcIixcbiAgXCIuc2lkZWJhclwiLFxuICBcIi5zaWRlXCIsXG4gIFwiLmFzaWRlXCIsXG4gIFwiI3NpZGViYXJcIixcbiAgXCIubW9kYWxcIixcbiAgXCIucG9wdXBcIixcbiAgXCIjbW9kYWxcIixcbiAgXCIub3ZlcmxheVwiLFxuICBcIi5hZFwiLFxuICBcIi5hZHNcIixcbiAgXCIuYWR2ZXJ0XCIsXG4gIFwiI2FkXCIsXG4gIFwiLmxhbmctc2VsZWN0b3JcIixcbiAgXCIubGFuZ3VhZ2VcIixcbiAgXCIjbGFuZ3VhZ2Utc2VsZWN0b3JcIixcbiAgXCIuc29jaWFsXCIsXG4gIFwiLnNvY2lhbC1tZWRpYVwiLFxuICBcIi5zb2NpYWwtbGlua3NcIixcbiAgXCIjc29jaWFsXCIsXG4gIFwiLm1lbnVcIixcbiAgXCIubmF2aWdhdGlvblwiLFxuICBcIiNuYXZcIixcbiAgXCIuYnJlYWRjcnVtYnNcIixcbiAgXCIjYnJlYWRjcnVtYnNcIixcbiAgXCIuZm9ybVwiLFxuICBcImZvcm1cIixcbiAgXCIjc2VhcmNoLWZvcm1cIixcbiAgXCIuc2VhcmNoXCIsXG4gIFwiI3NlYXJjaFwiLFxuICBcIi5zaGFyZVwiLFxuICBcIiNzaGFyZVwiLFxuICBcIi5wYWdpbmF0aW9uXCIsXG4gIFwiI3BhZ2luYXRpb25cIixcbiAgXCIud2lkZ2V0XCIsXG4gIFwiI3dpZGdldFwiLFxuICBcIi5yZWxhdGVkXCIsXG4gIFwiI3JlbGF0ZWRcIixcbiAgXCIudGFnXCIsXG4gIFwiI3RhZ1wiLFxuICBcIi5jYXRlZ29yeVwiLFxuICBcIiNjYXRlZ29yeVwiLFxuICBcIi5jb21tZW50XCIsXG4gIFwiI2NvbW1lbnRcIixcbiAgXCIucmVwbHlcIixcbiAgXCIjcmVwbHlcIixcbiAgXCIuYXV0aG9yXCIsXG4gIFwiI2F1dGhvclwiLFxuXTtcbiJdLCJuYW1lcyI6WyJleGNsdWRlTm9uTWFpblRhZ3MiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(api)/./src/scraper/WebScraper/utils/excludeTags.ts\n");

/***/ }),

/***/ "(api)/./src/scraper/WebScraper/utils/imageDescription.ts":
/*!**********************************************************!*\
  !*** ./src/scraper/WebScraper/utils/imageDescription.ts ***!
  \**********************************************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.a(module, async (__webpack_handle_async_dependencies__, __webpack_async_result__) => { try {\n__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   getImageDescription: () => (/* binding */ getImageDescription)\n/* harmony export */ });\n/* harmony import */ var _anthropic_ai_sdk__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @anthropic-ai/sdk */ \"@anthropic-ai/sdk\");\n/* harmony import */ var axios__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! axios */ \"axios\");\nvar __webpack_async_dependencies__ = __webpack_handle_async_dependencies__([_anthropic_ai_sdk__WEBPACK_IMPORTED_MODULE_0__, axios__WEBPACK_IMPORTED_MODULE_1__]);\n([_anthropic_ai_sdk__WEBPACK_IMPORTED_MODULE_0__, axios__WEBPACK_IMPORTED_MODULE_1__] = __webpack_async_dependencies__.then ? (await __webpack_async_dependencies__)() : __webpack_async_dependencies__);\n\n\nasync function getImageDescription(imageUrl, backText, frontText, model = \"gpt-4-turbo\") {\n    try {\n        const prompt = \"What's in the image? You need to answer with the content for the alt tag of the image. To help you with the context, the image is in the following text: \" + backText + \" and the following text: \" + frontText + \". Be super concise.\";\n        switch(model){\n            case \"claude-3-opus\":\n                {\n                    if (!process.env.ANTHROPIC_API_KEY) {\n                        throw new Error(\"No Anthropic API key provided\");\n                    }\n                    const imageRequest = await axios__WEBPACK_IMPORTED_MODULE_1__[\"default\"].get(imageUrl, {\n                        responseType: \"arraybuffer\"\n                    });\n                    const imageMediaType = \"image/png\";\n                    const imageData = Buffer.from(imageRequest.data, \"binary\").toString(\"base64\");\n                    const anthropic = new _anthropic_ai_sdk__WEBPACK_IMPORTED_MODULE_0__[\"default\"]();\n                    const response = await anthropic.messages.create({\n                        model: \"claude-3-opus-20240229\",\n                        max_tokens: 1024,\n                        messages: [\n                            {\n                                role: \"user\",\n                                content: [\n                                    {\n                                        type: \"image\",\n                                        source: {\n                                            type: \"base64\",\n                                            media_type: imageMediaType,\n                                            data: imageData\n                                        }\n                                    },\n                                    {\n                                        type: \"text\",\n                                        text: prompt\n                                    }\n                                ]\n                            }\n                        ]\n                    });\n                    return response.content[0].text;\n                }\n            default:\n                {\n                    if (!process.env.OPENAI_API_KEY) {\n                        throw new Error(\"No OpenAI API key provided\");\n                    }\n                    const { OpenAI } = __webpack_require__(/*! openai */ \"openai?22eb\");\n                    const openai = new OpenAI();\n                    const response = await openai.chat.completions.create({\n                        model: \"gpt-4-turbo\",\n                        messages: [\n                            {\n                                role: \"user\",\n                                content: [\n                                    {\n                                        type: \"text\",\n                                        text: prompt\n                                    },\n                                    {\n                                        type: \"image_url\",\n                                        image_url: {\n                                            url: imageUrl\n                                        }\n                                    }\n                                ]\n                            }\n                        ]\n                    });\n                    return response.choices[0].message.content;\n                }\n        }\n    } catch (error) {\n        console.error(\"Error generating image alt text:\", error?.message);\n        return \"\";\n    }\n}\n\n__webpack_async_result__();\n} catch(e) { __webpack_async_result__(e); } });//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwaSkvLi9zcmMvc2NyYXBlci9XZWJTY3JhcGVyL3V0aWxzL2ltYWdlRGVzY3JpcHRpb24udHMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7O0FBQTBDO0FBQ2hCO0FBRW5CLGVBQWVFLG9CQUNwQkMsUUFBZ0IsRUFDaEJDLFFBQWdCLEVBQ2hCQyxTQUFpQixFQUNqQkMsUUFBZ0IsYUFBYTtJQUU3QixJQUFJO1FBQ0YsTUFBTUMsU0FBUyw4SkFDYkgsV0FDQSw4QkFDQUMsWUFDQTtRQUVGLE9BQVFDO1lBQ04sS0FBSztnQkFBaUI7b0JBQ3BCLElBQUksQ0FBQ0UsUUFBUUMsSUFBSUMsbUJBQW1CO3dCQUNsQyxNQUFNLElBQUlDLE1BQU07b0JBQ2xCO29CQUNBLE1BQU1DLGVBQWUsTUFBTVgsaURBQVNZLENBQUNWLFVBQVU7d0JBQUVXLGNBQWM7b0JBQWM7b0JBQzdFLE1BQU1DLGlCQUFpQjtvQkFDdkIsTUFBTUMsWUFBWUMsT0FBT0MsS0FBS04sYUFBYU8sTUFBTSxVQUFVQyxTQUFTO29CQUVwRSxNQUFNQyxZQUFZLElBQUlyQix5REFBU0E7b0JBQy9CLE1BQU1zQixXQUFXLE1BQU1ELFVBQVVFLFNBQVNDLE9BQU87d0JBQy9DbEIsT0FBTzt3QkFDUG1CLFlBQVk7d0JBQ1pGLFVBQVU7NEJBQ1I7Z0NBQ0VHLE1BQU07Z0NBQ05DLFNBQVM7b0NBQ1A7d0NBQ0VDLE1BQU07d0NBQ05DLFFBQVE7NENBQ05ELE1BQU07NENBQ05FLFlBQVlmOzRDQUNaSSxNQUFNSDt3Q0FDUjtvQ0FDRjtvQ0FDQTt3Q0FDRVksTUFBTTt3Q0FDTkcsTUFBTXhCO29DQUNSO2lDQUNEOzRCQUNIO3lCQUNEO29CQUNIO29CQUVBLE9BQU9lLFNBQVNLLE9BQU8sQ0FBQyxFQUFFLENBQUNJO2dCQUM3QjtZQUNBO2dCQUFTO29CQUNQLElBQUksQ0FBQ3ZCLFFBQVFDLElBQUl1QixnQkFBZ0I7d0JBQy9CLE1BQU0sSUFBSXJCLE1BQU07b0JBQ2xCO29CQUVBLE1BQU0sRUFBRXNCLE1BQU0sRUFBRSxHQUFHQyxtQkFBT0EsQ0FBQywyQkFBUTtvQkFDbkMsTUFBTUMsU0FBUyxJQUFJRjtvQkFFbkIsTUFBTVgsV0FBVyxNQUFNYSxPQUFPQyxLQUFLQyxZQUFZYixPQUFPO3dCQUNwRGxCLE9BQU87d0JBQ1BpQixVQUFVOzRCQUNSO2dDQUNFRyxNQUFNO2dDQUNOQyxTQUFTO29DQUNQO3dDQUNFQyxNQUFNO3dDQUNORyxNQUFNeEI7b0NBQ1I7b0NBQ0E7d0NBQ0VxQixNQUFNO3dDQUNOVSxXQUFXOzRDQUNUQyxLQUFLcEM7d0NBQ1A7b0NBQ0Y7aUNBQ0Q7NEJBQ0g7eUJBQ0Q7b0JBQ0g7b0JBQ0EsT0FBT21CLFNBQVNrQixPQUFPLENBQUMsRUFBRSxDQUFDQyxRQUFRZDtnQkFDckM7UUFDRjtJQUNGLEVBQUUsT0FBT2UsT0FBTztRQUNkQyxRQUFRRCxNQUFNLG9DQUFvQ0EsT0FBT0Q7UUFDekQsT0FBTztJQUNUO0FBQ0YiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9maXJlY3Jhd2wtc2NyYXBlci1qcy8uL3NyYy9zY3JhcGVyL1dlYlNjcmFwZXIvdXRpbHMvaW1hZ2VEZXNjcmlwdGlvbi50cz84N2QzIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBBbnRocm9waWMgZnJvbSAnQGFudGhyb3BpYy1haS9zZGsnO1xuaW1wb3J0IGF4aW9zIGZyb20gJ2F4aW9zJztcblxuZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIGdldEltYWdlRGVzY3JpcHRpb24oXG4gIGltYWdlVXJsOiBzdHJpbmcsXG4gIGJhY2tUZXh0OiBzdHJpbmcsXG4gIGZyb250VGV4dDogc3RyaW5nLFxuICBtb2RlbDogc3RyaW5nID0gXCJncHQtNC10dXJib1wiXG4pOiBQcm9taXNlPHN0cmluZz4ge1xuICB0cnkge1xuICAgIGNvbnN0IHByb21wdCA9IFwiV2hhdCdzIGluIHRoZSBpbWFnZT8gWW91IG5lZWQgdG8gYW5zd2VyIHdpdGggdGhlIGNvbnRlbnQgZm9yIHRoZSBhbHQgdGFnIG9mIHRoZSBpbWFnZS4gVG8gaGVscCB5b3Ugd2l0aCB0aGUgY29udGV4dCwgdGhlIGltYWdlIGlzIGluIHRoZSBmb2xsb3dpbmcgdGV4dDogXCIgK1xuICAgICAgYmFja1RleHQgK1xuICAgICAgXCIgYW5kIHRoZSBmb2xsb3dpbmcgdGV4dDogXCIgK1xuICAgICAgZnJvbnRUZXh0ICtcbiAgICAgIFwiLiBCZSBzdXBlciBjb25jaXNlLlwiXG5cbiAgICBzd2l0Y2ggKG1vZGVsKSB7XG4gICAgICBjYXNlICdjbGF1ZGUtMy1vcHVzJzoge1xuICAgICAgICBpZiAoIXByb2Nlc3MuZW52LkFOVEhST1BJQ19BUElfS0VZKSB7XG4gICAgICAgICAgdGhyb3cgbmV3IEVycm9yKFwiTm8gQW50aHJvcGljIEFQSSBrZXkgcHJvdmlkZWRcIik7XG4gICAgICAgIH1cbiAgICAgICAgY29uc3QgaW1hZ2VSZXF1ZXN0ID0gYXdhaXQgYXhpb3MuZ2V0KGltYWdlVXJsLCB7IHJlc3BvbnNlVHlwZTogJ2FycmF5YnVmZmVyJyB9KTtcbiAgICAgICAgY29uc3QgaW1hZ2VNZWRpYVR5cGUgPSAnaW1hZ2UvcG5nJztcbiAgICAgICAgY29uc3QgaW1hZ2VEYXRhID0gQnVmZmVyLmZyb20oaW1hZ2VSZXF1ZXN0LmRhdGEsICdiaW5hcnknKS50b1N0cmluZygnYmFzZTY0Jyk7XG5cbiAgICAgICAgY29uc3QgYW50aHJvcGljID0gbmV3IEFudGhyb3BpYygpO1xuICAgICAgICBjb25zdCByZXNwb25zZSA9IGF3YWl0IGFudGhyb3BpYy5tZXNzYWdlcy5jcmVhdGUoe1xuICAgICAgICAgIG1vZGVsOiBcImNsYXVkZS0zLW9wdXMtMjAyNDAyMjlcIixcbiAgICAgICAgICBtYXhfdG9rZW5zOiAxMDI0LFxuICAgICAgICAgIG1lc3NhZ2VzOiBbXG4gICAgICAgICAgICB7XG4gICAgICAgICAgICAgIHJvbGU6IFwidXNlclwiLFxuICAgICAgICAgICAgICBjb250ZW50OiBbXG4gICAgICAgICAgICAgICAge1xuICAgICAgICAgICAgICAgICAgdHlwZTogXCJpbWFnZVwiLFxuICAgICAgICAgICAgICAgICAgc291cmNlOiB7XG4gICAgICAgICAgICAgICAgICAgIHR5cGU6IFwiYmFzZTY0XCIsXG4gICAgICAgICAgICAgICAgICAgIG1lZGlhX3R5cGU6IGltYWdlTWVkaWFUeXBlLFxuICAgICAgICAgICAgICAgICAgICBkYXRhOiBpbWFnZURhdGEsXG4gICAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAge1xuICAgICAgICAgICAgICAgICAgdHlwZTogXCJ0ZXh0XCIsXG4gICAgICAgICAgICAgICAgICB0ZXh0OiBwcm9tcHRcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgIF0sXG4gICAgICAgICAgICB9XG4gICAgICAgICAgXVxuICAgICAgICB9KTtcblxuICAgICAgICByZXR1cm4gcmVzcG9uc2UuY29udGVudFswXS50ZXh0O1xuICAgICAgfVxuICAgICAgZGVmYXVsdDoge1xuICAgICAgICBpZiAoIXByb2Nlc3MuZW52Lk9QRU5BSV9BUElfS0VZKSB7XG4gICAgICAgICAgdGhyb3cgbmV3IEVycm9yKFwiTm8gT3BlbkFJIEFQSSBrZXkgcHJvdmlkZWRcIik7XG4gICAgICAgIH1cblxuICAgICAgICBjb25zdCB7IE9wZW5BSSB9ID0gcmVxdWlyZShcIm9wZW5haVwiKTtcbiAgICAgICAgY29uc3Qgb3BlbmFpID0gbmV3IE9wZW5BSSgpO1xuICAgICAgXG4gICAgICAgIGNvbnN0IHJlc3BvbnNlID0gYXdhaXQgb3BlbmFpLmNoYXQuY29tcGxldGlvbnMuY3JlYXRlKHtcbiAgICAgICAgICBtb2RlbDogXCJncHQtNC10dXJib1wiLFxuICAgICAgICAgIG1lc3NhZ2VzOiBbXG4gICAgICAgICAgICB7XG4gICAgICAgICAgICAgIHJvbGU6IFwidXNlclwiLFxuICAgICAgICAgICAgICBjb250ZW50OiBbXG4gICAgICAgICAgICAgICAge1xuICAgICAgICAgICAgICAgICAgdHlwZTogXCJ0ZXh0XCIsXG4gICAgICAgICAgICAgICAgICB0ZXh0OiBwcm9tcHQsXG4gICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICB7XG4gICAgICAgICAgICAgICAgICB0eXBlOiBcImltYWdlX3VybFwiLFxuICAgICAgICAgICAgICAgICAgaW1hZ2VfdXJsOiB7XG4gICAgICAgICAgICAgICAgICAgIHVybDogaW1hZ2VVcmwsXG4gICAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgIF0sXG4gICAgICAgICAgICB9LFxuICAgICAgICAgIF0sXG4gICAgICAgIH0pO1xuICAgICAgICByZXR1cm4gcmVzcG9uc2UuY2hvaWNlc1swXS5tZXNzYWdlLmNvbnRlbnQ7XG4gICAgICB9XG4gICAgfVxuICB9IGNhdGNoIChlcnJvcikge1xuICAgIGNvbnNvbGUuZXJyb3IoXCJFcnJvciBnZW5lcmF0aW5nIGltYWdlIGFsdCB0ZXh0OlwiLCBlcnJvcj8ubWVzc2FnZSk7XG4gICAgcmV0dXJuIFwiXCI7XG4gIH1cbn1cbiJdLCJuYW1lcyI6WyJBbnRocm9waWMiLCJheGlvcyIsImdldEltYWdlRGVzY3JpcHRpb24iLCJpbWFnZVVybCIsImJhY2tUZXh0IiwiZnJvbnRUZXh0IiwibW9kZWwiLCJwcm9tcHQiLCJwcm9jZXNzIiwiZW52IiwiQU5USFJPUElDX0FQSV9LRVkiLCJFcnJvciIsImltYWdlUmVxdWVzdCIsImdldCIsInJlc3BvbnNlVHlwZSIsImltYWdlTWVkaWFUeXBlIiwiaW1hZ2VEYXRhIiwiQnVmZmVyIiwiZnJvbSIsImRhdGEiLCJ0b1N0cmluZyIsImFudGhyb3BpYyIsInJlc3BvbnNlIiwibWVzc2FnZXMiLCJjcmVhdGUiLCJtYXhfdG9rZW5zIiwicm9sZSIsImNvbnRlbnQiLCJ0eXBlIiwic291cmNlIiwibWVkaWFfdHlwZSIsInRleHQiLCJPUEVOQUlfQVBJX0tFWSIsIk9wZW5BSSIsInJlcXVpcmUiLCJvcGVuYWkiLCJjaGF0IiwiY29tcGxldGlvbnMiLCJpbWFnZV91cmwiLCJ1cmwiLCJjaG9pY2VzIiwibWVzc2FnZSIsImVycm9yIiwiY29uc29sZSJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(api)/./src/scraper/WebScraper/utils/imageDescription.ts\n");

/***/ }),

/***/ "(api)/./src/scraper/WebScraper/utils/metadata.ts":
/*!**************************************************!*\
  !*** ./src/scraper/WebScraper/utils/metadata.ts ***!
  \**************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   extractMetadata: () => (/* binding */ extractMetadata)\n/* harmony export */ });\nfunction extractMetadata(soup, url) {\n    let title = null;\n    let description = null;\n    let language = null;\n    let keywords = null;\n    let robots = null;\n    let ogTitle = null;\n    let ogDescription = null;\n    let ogUrl = null;\n    let ogImage = null;\n    let ogAudio = null;\n    let ogDeterminer = null;\n    let ogLocale = null;\n    let ogLocaleAlternate = null;\n    let ogSiteName = null;\n    let ogVideo = null;\n    let dctermsCreated = null;\n    let dcDateCreated = null;\n    let dcDate = null;\n    let dctermsType = null;\n    let dcType = null;\n    let dctermsAudience = null;\n    let dctermsSubject = null;\n    let dcSubject = null;\n    let dcDescription = null;\n    let dctermsKeywords = null;\n    let modifiedTime = null;\n    let publishedTime = null;\n    let articleTag = null;\n    let articleSection = null;\n    try {\n        title = soup(\"title\").text() || null;\n        description = soup('meta[name=\"description\"]').attr(\"content\") || null;\n        // Assuming the language is part of the URL as per the regex pattern\n        const pattern = /([a-zA-Z]+-[A-Z]{2})/;\n        const match = pattern.exec(url);\n        language = match ? match[1] : null;\n        keywords = soup('meta[name=\"keywords\"]').attr(\"content\") || null;\n        robots = soup('meta[name=\"robots\"]').attr(\"content\") || null;\n        ogTitle = soup('meta[property=\"og:title\"]').attr(\"content\") || null;\n        ogDescription = soup('meta[property=\"og:description\"]').attr(\"content\") || null;\n        ogUrl = soup('meta[property=\"og:url\"]').attr(\"content\") || null;\n        ogImage = soup('meta[property=\"og:image\"]').attr(\"content\") || null;\n        ogAudio = soup('meta[property=\"og:audio\"]').attr(\"content\") || null;\n        ogDeterminer = soup('meta[property=\"og:determiner\"]').attr(\"content\") || null;\n        ogLocale = soup('meta[property=\"og:locale\"]').attr(\"content\") || null;\n        ogLocaleAlternate = soup('meta[property=\"og:locale:alternate\"]').map((i, el)=>soup(el).attr(\"content\")).get() || null;\n        ogSiteName = soup('meta[property=\"og:site_name\"]').attr(\"content\") || null;\n        ogVideo = soup('meta[property=\"og:video\"]').attr(\"content\") || null;\n        articleSection = soup('meta[name=\"article:section\"]').attr(\"content\") || null;\n        articleTag = soup('meta[name=\"article:tag\"]').attr(\"content\") || null;\n        publishedTime = soup('meta[property=\"article:published_time\"]').attr(\"content\") || null;\n        modifiedTime = soup('meta[property=\"article:modified_time\"]').attr(\"content\") || null;\n        dctermsKeywords = soup('meta[name=\"dcterms.keywords\"]').attr(\"content\") || null;\n        dcDescription = soup('meta[name=\"dc.description\"]').attr(\"content\") || null;\n        dcSubject = soup('meta[name=\"dc.subject\"]').attr(\"content\") || null;\n        dctermsSubject = soup('meta[name=\"dcterms.subject\"]').attr(\"content\") || null;\n        dctermsAudience = soup('meta[name=\"dcterms.audience\"]').attr(\"content\") || null;\n        dcType = soup('meta[name=\"dc.type\"]').attr(\"content\") || null;\n        dctermsType = soup('meta[name=\"dcterms.type\"]').attr(\"content\") || null;\n        dcDate = soup('meta[name=\"dc.date\"]').attr(\"content\") || null;\n        dcDateCreated = soup('meta[name=\"dc.date.created\"]').attr(\"content\") || null;\n        dctermsCreated = soup('meta[name=\"dcterms.created\"]').attr(\"content\") || null;\n    } catch (error) {\n        console.error(\"Error extracting metadata:\", error);\n    }\n    return {\n        ...title ? {\n            title\n        } : {},\n        ...description ? {\n            description\n        } : {},\n        ...language ? {\n            language\n        } : {},\n        ...keywords ? {\n            keywords\n        } : {},\n        ...robots ? {\n            robots\n        } : {},\n        ...ogTitle ? {\n            ogTitle\n        } : {},\n        ...ogDescription ? {\n            ogDescription\n        } : {},\n        ...ogUrl ? {\n            ogUrl\n        } : {},\n        ...ogImage ? {\n            ogImage\n        } : {},\n        ...ogAudio ? {\n            ogAudio\n        } : {},\n        ...ogDeterminer ? {\n            ogDeterminer\n        } : {},\n        ...ogLocale ? {\n            ogLocale\n        } : {},\n        ...ogLocaleAlternate ? {\n            ogLocaleAlternate\n        } : {},\n        ...ogSiteName ? {\n            ogSiteName\n        } : {},\n        ...ogVideo ? {\n            ogVideo\n        } : {},\n        ...dctermsCreated ? {\n            dctermsCreated\n        } : {},\n        ...dcDateCreated ? {\n            dcDateCreated\n        } : {},\n        ...dcDate ? {\n            dcDate\n        } : {},\n        ...dctermsType ? {\n            dctermsType\n        } : {},\n        ...dcType ? {\n            dcType\n        } : {},\n        ...dctermsAudience ? {\n            dctermsAudience\n        } : {},\n        ...dctermsSubject ? {\n            dctermsSubject\n        } : {},\n        ...dcSubject ? {\n            dcSubject\n        } : {},\n        ...dcDescription ? {\n            dcDescription\n        } : {},\n        ...dctermsKeywords ? {\n            dctermsKeywords\n        } : {},\n        ...modifiedTime ? {\n            modifiedTime\n        } : {},\n        ...publishedTime ? {\n            publishedTime\n        } : {},\n        ...articleTag ? {\n            articleTag\n        } : {},\n        ...articleSection ? {\n            articleSection\n        } : {}\n    };\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(api)/./src/scraper/WebScraper/utils/metadata.ts\n");

/***/ }),

/***/ "(api)/./src/scraper/WebScraper/utils/pdfProcessor.ts":
/*!******************************************************!*\
  !*** ./src/scraper/WebScraper/utils/pdfProcessor.ts ***!
  \******************************************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.a(module, async (__webpack_handle_async_dependencies__, __webpack_async_result__) => { try {\n__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   fetchAndProcessPdf: () => (/* binding */ fetchAndProcessPdf),\n/* harmony export */   processPdfToText: () => (/* binding */ processPdfToText)\n/* harmony export */ });\n/* harmony import */ var axios__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! axios */ \"axios\");\n/* harmony import */ var fs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! fs */ \"fs\");\n/* harmony import */ var fs__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(fs__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var node_fs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! node:fs */ \"node:fs\");\n/* harmony import */ var node_fs__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(node_fs__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var form_data__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! form-data */ \"form-data\");\n/* harmony import */ var form_data__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(form_data__WEBPACK_IMPORTED_MODULE_3__);\n/* harmony import */ var dotenv__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! dotenv */ \"dotenv\");\n/* harmony import */ var dotenv__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(dotenv__WEBPACK_IMPORTED_MODULE_4__);\n/* harmony import */ var pdf_parse__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! pdf-parse */ \"pdf-parse\");\n/* harmony import */ var pdf_parse__WEBPACK_IMPORTED_MODULE_5___default = /*#__PURE__*/__webpack_require__.n(pdf_parse__WEBPACK_IMPORTED_MODULE_5__);\n/* harmony import */ var path__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! path */ \"path\");\n/* harmony import */ var path__WEBPACK_IMPORTED_MODULE_6___default = /*#__PURE__*/__webpack_require__.n(path__WEBPACK_IMPORTED_MODULE_6__);\n/* harmony import */ var os__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! os */ \"os\");\n/* harmony import */ var os__WEBPACK_IMPORTED_MODULE_7___default = /*#__PURE__*/__webpack_require__.n(os__WEBPACK_IMPORTED_MODULE_7__);\nvar __webpack_async_dependencies__ = __webpack_handle_async_dependencies__([axios__WEBPACK_IMPORTED_MODULE_0__]);\naxios__WEBPACK_IMPORTED_MODULE_0__ = (__webpack_async_dependencies__.then ? (await __webpack_async_dependencies__)() : __webpack_async_dependencies__)[0];\n\n\n\n\n\n\n\n\ndotenv__WEBPACK_IMPORTED_MODULE_4___default().config();\nasync function fetchAndProcessPdf(url) {\n    const tempFilePath = await downloadPdf(url);\n    const content = await processPdfToText(tempFilePath);\n    fs__WEBPACK_IMPORTED_MODULE_1___default().unlinkSync(tempFilePath); // Clean up the temporary file\n    return content;\n}\nasync function downloadPdf(url) {\n    const response = await (0,axios__WEBPACK_IMPORTED_MODULE_0__[\"default\"])({\n        url,\n        method: \"GET\",\n        responseType: \"stream\"\n    });\n    const tempFilePath = path__WEBPACK_IMPORTED_MODULE_6___default().join(os__WEBPACK_IMPORTED_MODULE_7___default().tmpdir(), `tempPdf-${Date.now()}.pdf`);\n    const writer = (0,node_fs__WEBPACK_IMPORTED_MODULE_2__.createWriteStream)(tempFilePath);\n    response.data.pipe(writer);\n    return new Promise((resolve, reject)=>{\n        writer.on(\"finish\", ()=>resolve(tempFilePath));\n        writer.on(\"error\", reject);\n    });\n}\nasync function processPdfToText(filePath) {\n    let content = \"\";\n    if (process.env.LLAMAPARSE_API_KEY) {\n        const apiKey = process.env.LLAMAPARSE_API_KEY;\n        const headers = {\n            Authorization: `Bearer ${apiKey}`\n        };\n        const base_url = \"https://api.cloud.llamaindex.ai/api/parsing\";\n        const fileType2 = \"application/pdf\";\n        try {\n            const formData = new (form_data__WEBPACK_IMPORTED_MODULE_3___default())();\n            formData.append(\"file\", (0,node_fs__WEBPACK_IMPORTED_MODULE_2__.createReadStream)(filePath), {\n                filename: filePath,\n                contentType: fileType2\n            });\n            const uploadUrl = `${base_url}/upload`;\n            const uploadResponse = await axios__WEBPACK_IMPORTED_MODULE_0__[\"default\"].post(uploadUrl, formData, {\n                headers: {\n                    ...headers,\n                    ...formData.getHeaders()\n                }\n            });\n            const jobId = uploadResponse.data.id;\n            const resultType = \"text\";\n            const resultUrl = `${base_url}/job/${jobId}/result/${resultType}`;\n            let resultResponse;\n            let attempt = 0;\n            const maxAttempts = 10; // Maximum number of attempts\n            let resultAvailable = false;\n            while(attempt < maxAttempts && !resultAvailable){\n                try {\n                    resultResponse = await axios__WEBPACK_IMPORTED_MODULE_0__[\"default\"].get(resultUrl, {\n                        headers\n                    });\n                    if (resultResponse.status === 200) {\n                        resultAvailable = true; // Exit condition met\n                    } else {\n                        // If the status code is not 200, increment the attempt counter and wait\n                        attempt++;\n                        await new Promise((resolve)=>setTimeout(resolve, 250)); // Wait for 2 seconds\n                    }\n                } catch (error) {\n                    console.error(\"Error fetching result:\", error);\n                    attempt++;\n                    await new Promise((resolve)=>setTimeout(resolve, 250)); // Wait for 2 seconds before retrying\n                // You may want to handle specific errors differently\n                }\n            }\n            if (!resultAvailable) {\n                content = await processPdf(filePath);\n            }\n            content = resultResponse.data[resultType];\n        } catch (error) {\n            console.error(\"Error processing document:\", filePath, error);\n            content = await processPdf(filePath);\n        }\n    } else {\n        content = await processPdf(filePath);\n    }\n    return content;\n}\nasync function processPdf(file) {\n    const fileContent = fs__WEBPACK_IMPORTED_MODULE_1___default().readFileSync(file);\n    const data = await pdf_parse__WEBPACK_IMPORTED_MODULE_5___default()(fileContent);\n    return data.text;\n}\n\n__webpack_async_result__();\n} catch(e) { __webpack_async_result__(e); } });//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwaSkvLi9zcmMvc2NyYXBlci9XZWJTY3JhcGVyL3V0aWxzL3BkZlByb2Nlc3Nvci50cyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQUE2QztBQUN6QjtBQUMwQztBQUM3QjtBQUNMO0FBQ0E7QUFDSjtBQUNKO0FBRXBCSyxvREFBYUk7QUFFTixlQUFlQyxtQkFBbUJDLEdBQVc7SUFDbEQsTUFBTUMsZUFBZSxNQUFNQyxZQUFZRjtJQUN2QyxNQUFNRyxVQUFVLE1BQU1DLGlCQUFpQkg7SUFDdkNYLG9EQUFhZSxDQUFDSixlQUFlLDhCQUE4QjtJQUMzRCxPQUFPRTtBQUNUO0FBRUEsZUFBZUQsWUFBWUYsR0FBVztJQUNwQyxNQUFNTSxXQUFXLE1BQU1qQixpREFBS0EsQ0FBQztRQUMzQlc7UUFDQU8sUUFBUTtRQUNSQyxjQUFjO0lBQ2hCO0lBRUEsTUFBTVAsZUFBZUwsZ0RBQVNhLENBQUNaLGdEQUFTYSxJQUFJLENBQUMsUUFBUSxFQUFFQyxLQUFLQyxNQUFNLElBQUksQ0FBQztJQUN2RSxNQUFNQyxTQUFTckIsMERBQWlCQSxDQUFDUztJQUVqQ0ssU0FBU1EsS0FBS0MsS0FBS0Y7SUFFbkIsT0FBTyxJQUFJRyxRQUFRLENBQUNDLFNBQVNDO1FBQzNCTCxPQUFPTSxHQUFHLFVBQVUsSUFBTUYsUUFBUWhCO1FBQ2xDWSxPQUFPTSxHQUFHLFNBQVNEO0lBQ3JCO0FBQ0Y7QUFFTyxlQUFlZCxpQkFBaUJnQixRQUFnQjtJQUNyRCxJQUFJakIsVUFBVTtJQUVkLElBQUlrQixRQUFRQyxJQUFJQyxvQkFBb0I7UUFDbEMsTUFBTUMsU0FBU0gsUUFBUUMsSUFBSUM7UUFDM0IsTUFBTUUsVUFBVTtZQUNkQyxlQUFlLENBQUMsT0FBTyxFQUFFRixPQUFPLENBQUM7UUFDbkM7UUFDQSxNQUFNRyxXQUFXO1FBQ2pCLE1BQU1DLFlBQVk7UUFFbEIsSUFBSTtZQUNGLE1BQU1DLFdBQVcsSUFBSXBDLGtEQUFRQTtZQUM3Qm9DLFNBQVNDLE9BQU8sUUFBUXZDLHlEQUFnQkEsQ0FBQzZCLFdBQVc7Z0JBQ2xEVyxVQUFVWDtnQkFDVlksYUFBYUo7WUFDZjtZQUVBLE1BQU1LLFlBQVksQ0FBQyxFQUFFTixTQUFTLE9BQU8sQ0FBQztZQUN0QyxNQUFNTyxpQkFBaUIsTUFBTTdDLGtEQUFVOEMsQ0FBQ0YsV0FBV0osVUFBVTtnQkFDM0RKLFNBQVM7b0JBQ1AsR0FBR0EsT0FBTztvQkFDVixHQUFHSSxTQUFTTyxZQUFZO2dCQUMxQjtZQUNGO1lBRUEsTUFBTUMsUUFBUUgsZUFBZXBCLEtBQUt3QjtZQUNsQyxNQUFNQyxhQUFhO1lBQ25CLE1BQU1DLFlBQVksQ0FBQyxFQUFFYixTQUFTLEtBQUssRUFBRVUsTUFBTSxRQUFRLEVBQUVFLFdBQVcsQ0FBQztZQUVqRSxJQUFJRTtZQUNKLElBQUlDLFVBQVU7WUFDZCxNQUFNQyxjQUFjLElBQUksNkJBQTZCO1lBQ3JELElBQUlDLGtCQUFrQjtZQUV0QixNQUFPRixVQUFVQyxlQUFlLENBQUNDLGdCQUFpQjtnQkFDaEQsSUFBSTtvQkFDRkgsaUJBQWlCLE1BQU1wRCxpREFBU3dELENBQUNMLFdBQVc7d0JBQUVmO29CQUFRO29CQUN0RCxJQUFJZ0IsZUFBZUssV0FBVyxLQUFLO3dCQUNqQ0Ysa0JBQWtCLE1BQU0scUJBQXFCO29CQUMvQyxPQUFPO3dCQUNMLHdFQUF3RTt3QkFDeEVGO3dCQUNBLE1BQU0sSUFBSTFCLFFBQVEsQ0FBQ0MsVUFBWThCLFdBQVc5QixTQUFTLE9BQU8scUJBQXFCO29CQUNqRjtnQkFDRixFQUFFLE9BQU8rQixPQUFPO29CQUNkQyxRQUFRRCxNQUFNLDBCQUEwQkE7b0JBQ3hDTjtvQkFDQSxNQUFNLElBQUkxQixRQUFRLENBQUNDLFVBQVk4QixXQUFXOUIsU0FBUyxPQUFPLHFDQUFxQztnQkFDL0YscURBQXFEO2dCQUN2RDtZQUNGO1lBRUEsSUFBSSxDQUFDMkIsaUJBQWlCO2dCQUNwQnpDLFVBQVUsTUFBTStDLFdBQVc5QjtZQUM3QjtZQUNBakIsVUFBVXNDLGVBQWUzQixJQUFJLENBQUN5QixXQUFXO1FBQzNDLEVBQUUsT0FBT1MsT0FBTztZQUNkQyxRQUFRRCxNQUFNLDhCQUE4QjVCLFVBQVU0QjtZQUN0RDdDLFVBQVUsTUFBTStDLFdBQVc5QjtRQUM3QjtJQUNGLE9BQU87UUFDTGpCLFVBQVUsTUFBTStDLFdBQVc5QjtJQUM3QjtJQUNBLE9BQU9qQjtBQUNUO0FBRUEsZUFBZStDLFdBQVdDLElBQVk7SUFDcEMsTUFBTUMsY0FBYzlELHNEQUFlK0QsQ0FBQ0Y7SUFDcEMsTUFBTXJDLE9BQU8sTUFBTW5CLGdEQUFHQSxDQUFDeUQ7SUFDdkIsT0FBT3RDLEtBQUt3QztBQUNkIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vZmlyZWNyYXdsLXNjcmFwZXItanMvLi9zcmMvc2NyYXBlci9XZWJTY3JhcGVyL3V0aWxzL3BkZlByb2Nlc3Nvci50cz9mOTk2Il0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBheGlvcywgeyBBeGlvc1Jlc3BvbnNlIH0gZnJvbSBcImF4aW9zXCI7XG5pbXBvcnQgZnMgZnJvbSBcImZzXCI7XG5pbXBvcnQgeyBjcmVhdGVSZWFkU3RyZWFtLCBjcmVhdGVXcml0ZVN0cmVhbSB9IGZyb20gXCJub2RlOmZzXCI7XG5pbXBvcnQgRm9ybURhdGEgZnJvbSBcImZvcm0tZGF0YVwiO1xuaW1wb3J0IGRvdGVudiBmcm9tIFwiZG90ZW52XCI7XG5pbXBvcnQgcGRmIGZyb20gXCJwZGYtcGFyc2VcIjtcbmltcG9ydCBwYXRoIGZyb20gXCJwYXRoXCI7XG5pbXBvcnQgb3MgZnJvbSBcIm9zXCI7XG5cbmRvdGVudi5jb25maWcoKTtcblxuZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIGZldGNoQW5kUHJvY2Vzc1BkZih1cmw6IHN0cmluZyk6IFByb21pc2U8c3RyaW5nPiB7XG4gIGNvbnN0IHRlbXBGaWxlUGF0aCA9IGF3YWl0IGRvd25sb2FkUGRmKHVybCk7XG4gIGNvbnN0IGNvbnRlbnQgPSBhd2FpdCBwcm9jZXNzUGRmVG9UZXh0KHRlbXBGaWxlUGF0aCk7XG4gIGZzLnVubGlua1N5bmModGVtcEZpbGVQYXRoKTsgLy8gQ2xlYW4gdXAgdGhlIHRlbXBvcmFyeSBmaWxlXG4gIHJldHVybiBjb250ZW50O1xufVxuXG5hc3luYyBmdW5jdGlvbiBkb3dubG9hZFBkZih1cmw6IHN0cmluZyk6IFByb21pc2U8c3RyaW5nPiB7XG4gIGNvbnN0IHJlc3BvbnNlID0gYXdhaXQgYXhpb3Moe1xuICAgIHVybCxcbiAgICBtZXRob2Q6ICdHRVQnLFxuICAgIHJlc3BvbnNlVHlwZTogJ3N0cmVhbScsXG4gIH0pO1xuXG4gIGNvbnN0IHRlbXBGaWxlUGF0aCA9IHBhdGguam9pbihvcy50bXBkaXIoKSwgYHRlbXBQZGYtJHtEYXRlLm5vdygpfS5wZGZgKTtcbiAgY29uc3Qgd3JpdGVyID0gY3JlYXRlV3JpdGVTdHJlYW0odGVtcEZpbGVQYXRoKTtcblxuICByZXNwb25zZS5kYXRhLnBpcGUod3JpdGVyKTtcblxuICByZXR1cm4gbmV3IFByb21pc2UoKHJlc29sdmUsIHJlamVjdCkgPT4ge1xuICAgIHdyaXRlci5vbignZmluaXNoJywgKCkgPT4gcmVzb2x2ZSh0ZW1wRmlsZVBhdGgpKTtcbiAgICB3cml0ZXIub24oJ2Vycm9yJywgcmVqZWN0KTtcbiAgfSk7XG59XG5cbmV4cG9ydCBhc3luYyBmdW5jdGlvbiBwcm9jZXNzUGRmVG9UZXh0KGZpbGVQYXRoOiBzdHJpbmcpOiBQcm9taXNlPHN0cmluZz4ge1xuICBsZXQgY29udGVudCA9IFwiXCI7XG5cbiAgaWYgKHByb2Nlc3MuZW52LkxMQU1BUEFSU0VfQVBJX0tFWSkge1xuICAgIGNvbnN0IGFwaUtleSA9IHByb2Nlc3MuZW52LkxMQU1BUEFSU0VfQVBJX0tFWTtcbiAgICBjb25zdCBoZWFkZXJzID0ge1xuICAgICAgQXV0aG9yaXphdGlvbjogYEJlYXJlciAke2FwaUtleX1gLFxuICAgIH07XG4gICAgY29uc3QgYmFzZV91cmwgPSBcImh0dHBzOi8vYXBpLmNsb3VkLmxsYW1haW5kZXguYWkvYXBpL3BhcnNpbmdcIjtcbiAgICBjb25zdCBmaWxlVHlwZTIgPSBcImFwcGxpY2F0aW9uL3BkZlwiO1xuXG4gICAgdHJ5IHtcbiAgICAgIGNvbnN0IGZvcm1EYXRhID0gbmV3IEZvcm1EYXRhKCk7XG4gICAgICBmb3JtRGF0YS5hcHBlbmQoXCJmaWxlXCIsIGNyZWF0ZVJlYWRTdHJlYW0oZmlsZVBhdGgpLCB7XG4gICAgICAgIGZpbGVuYW1lOiBmaWxlUGF0aCxcbiAgICAgICAgY29udGVudFR5cGU6IGZpbGVUeXBlMixcbiAgICAgIH0pO1xuXG4gICAgICBjb25zdCB1cGxvYWRVcmwgPSBgJHtiYXNlX3VybH0vdXBsb2FkYDtcbiAgICAgIGNvbnN0IHVwbG9hZFJlc3BvbnNlID0gYXdhaXQgYXhpb3MucG9zdCh1cGxvYWRVcmwsIGZvcm1EYXRhLCB7XG4gICAgICAgIGhlYWRlcnM6IHtcbiAgICAgICAgICAuLi5oZWFkZXJzLFxuICAgICAgICAgIC4uLmZvcm1EYXRhLmdldEhlYWRlcnMoKSxcbiAgICAgICAgfSxcbiAgICAgIH0pO1xuXG4gICAgICBjb25zdCBqb2JJZCA9IHVwbG9hZFJlc3BvbnNlLmRhdGEuaWQ7XG4gICAgICBjb25zdCByZXN1bHRUeXBlID0gXCJ0ZXh0XCI7XG4gICAgICBjb25zdCByZXN1bHRVcmwgPSBgJHtiYXNlX3VybH0vam9iLyR7am9iSWR9L3Jlc3VsdC8ke3Jlc3VsdFR5cGV9YDtcblxuICAgICAgbGV0IHJlc3VsdFJlc3BvbnNlOiBBeGlvc1Jlc3BvbnNlO1xuICAgICAgbGV0IGF0dGVtcHQgPSAwO1xuICAgICAgY29uc3QgbWF4QXR0ZW1wdHMgPSAxMDsgLy8gTWF4aW11bSBudW1iZXIgb2YgYXR0ZW1wdHNcbiAgICAgIGxldCByZXN1bHRBdmFpbGFibGUgPSBmYWxzZTtcblxuICAgICAgd2hpbGUgKGF0dGVtcHQgPCBtYXhBdHRlbXB0cyAmJiAhcmVzdWx0QXZhaWxhYmxlKSB7XG4gICAgICAgIHRyeSB7XG4gICAgICAgICAgcmVzdWx0UmVzcG9uc2UgPSBhd2FpdCBheGlvcy5nZXQocmVzdWx0VXJsLCB7IGhlYWRlcnMgfSk7XG4gICAgICAgICAgaWYgKHJlc3VsdFJlc3BvbnNlLnN0YXR1cyA9PT0gMjAwKSB7XG4gICAgICAgICAgICByZXN1bHRBdmFpbGFibGUgPSB0cnVlOyAvLyBFeGl0IGNvbmRpdGlvbiBtZXRcbiAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgLy8gSWYgdGhlIHN0YXR1cyBjb2RlIGlzIG5vdCAyMDAsIGluY3JlbWVudCB0aGUgYXR0ZW1wdCBjb3VudGVyIGFuZCB3YWl0XG4gICAgICAgICAgICBhdHRlbXB0Kys7XG4gICAgICAgICAgICBhd2FpdCBuZXcgUHJvbWlzZSgocmVzb2x2ZSkgPT4gc2V0VGltZW91dChyZXNvbHZlLCAyNTApKTsgLy8gV2FpdCBmb3IgMiBzZWNvbmRzXG4gICAgICAgICAgfVxuICAgICAgICB9IGNhdGNoIChlcnJvcikge1xuICAgICAgICAgIGNvbnNvbGUuZXJyb3IoXCJFcnJvciBmZXRjaGluZyByZXN1bHQ6XCIsIGVycm9yKTtcbiAgICAgICAgICBhdHRlbXB0Kys7XG4gICAgICAgICAgYXdhaXQgbmV3IFByb21pc2UoKHJlc29sdmUpID0+IHNldFRpbWVvdXQocmVzb2x2ZSwgMjUwKSk7IC8vIFdhaXQgZm9yIDIgc2Vjb25kcyBiZWZvcmUgcmV0cnlpbmdcbiAgICAgICAgICAvLyBZb3UgbWF5IHdhbnQgdG8gaGFuZGxlIHNwZWNpZmljIGVycm9ycyBkaWZmZXJlbnRseVxuICAgICAgICB9XG4gICAgICB9XG5cbiAgICAgIGlmICghcmVzdWx0QXZhaWxhYmxlKSB7XG4gICAgICAgIGNvbnRlbnQgPSBhd2FpdCBwcm9jZXNzUGRmKGZpbGVQYXRoKTtcbiAgICAgIH1cbiAgICAgIGNvbnRlbnQgPSByZXN1bHRSZXNwb25zZS5kYXRhW3Jlc3VsdFR5cGVdO1xuICAgIH0gY2F0Y2ggKGVycm9yKSB7XG4gICAgICBjb25zb2xlLmVycm9yKFwiRXJyb3IgcHJvY2Vzc2luZyBkb2N1bWVudDpcIiwgZmlsZVBhdGgsIGVycm9yKTtcbiAgICAgIGNvbnRlbnQgPSBhd2FpdCBwcm9jZXNzUGRmKGZpbGVQYXRoKTtcbiAgICB9XG4gIH0gZWxzZSB7XG4gICAgY29udGVudCA9IGF3YWl0IHByb2Nlc3NQZGYoZmlsZVBhdGgpO1xuICB9XG4gIHJldHVybiBjb250ZW50O1xufVxuXG5hc3luYyBmdW5jdGlvbiBwcm9jZXNzUGRmKGZpbGU6IHN0cmluZyl7XG4gIGNvbnN0IGZpbGVDb250ZW50ID0gZnMucmVhZEZpbGVTeW5jKGZpbGUpO1xuICBjb25zdCBkYXRhID0gYXdhaXQgcGRmKGZpbGVDb250ZW50KTtcbiAgcmV0dXJuIGRhdGEudGV4dDtcbn0iXSwibmFtZXMiOlsiYXhpb3MiLCJmcyIsImNyZWF0ZVJlYWRTdHJlYW0iLCJjcmVhdGVXcml0ZVN0cmVhbSIsIkZvcm1EYXRhIiwiZG90ZW52IiwicGRmIiwicGF0aCIsIm9zIiwiY29uZmlnIiwiZmV0Y2hBbmRQcm9jZXNzUGRmIiwidXJsIiwidGVtcEZpbGVQYXRoIiwiZG93bmxvYWRQZGYiLCJjb250ZW50IiwicHJvY2Vzc1BkZlRvVGV4dCIsInVubGlua1N5bmMiLCJyZXNwb25zZSIsIm1ldGhvZCIsInJlc3BvbnNlVHlwZSIsImpvaW4iLCJ0bXBkaXIiLCJEYXRlIiwibm93Iiwid3JpdGVyIiwiZGF0YSIsInBpcGUiLCJQcm9taXNlIiwicmVzb2x2ZSIsInJlamVjdCIsIm9uIiwiZmlsZVBhdGgiLCJwcm9jZXNzIiwiZW52IiwiTExBTUFQQVJTRV9BUElfS0VZIiwiYXBpS2V5IiwiaGVhZGVycyIsIkF1dGhvcml6YXRpb24iLCJiYXNlX3VybCIsImZpbGVUeXBlMiIsImZvcm1EYXRhIiwiYXBwZW5kIiwiZmlsZW5hbWUiLCJjb250ZW50VHlwZSIsInVwbG9hZFVybCIsInVwbG9hZFJlc3BvbnNlIiwicG9zdCIsImdldEhlYWRlcnMiLCJqb2JJZCIsImlkIiwicmVzdWx0VHlwZSIsInJlc3VsdFVybCIsInJlc3VsdFJlc3BvbnNlIiwiYXR0ZW1wdCIsIm1heEF0dGVtcHRzIiwicmVzdWx0QXZhaWxhYmxlIiwiZ2V0Iiwic3RhdHVzIiwic2V0VGltZW91dCIsImVycm9yIiwiY29uc29sZSIsInByb2Nlc3NQZGYiLCJmaWxlIiwiZmlsZUNvbnRlbnQiLCJyZWFkRmlsZVN5bmMiLCJ0ZXh0Il0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(api)/./src/scraper/WebScraper/utils/pdfProcessor.ts\n");

/***/ }),

/***/ "(api)/./src/scraper/WebScraper/utils/replacePaths.ts":
/*!******************************************************!*\
  !*** ./src/scraper/WebScraper/utils/replacePaths.ts ***!
  \******************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   replaceImgPathsWithAbsolutePaths: () => (/* binding */ replaceImgPathsWithAbsolutePaths),\n/* harmony export */   replacePathsWithAbsolutePaths: () => (/* binding */ replacePathsWithAbsolutePaths)\n/* harmony export */ });\nconst replacePathsWithAbsolutePaths = (documents)=>{\n    try {\n        documents.forEach((document)=>{\n            const baseUrl = new URL(document.metadata.sourceURL).origin;\n            const paths = document.content.match(/(!?\\[.*?\\])\\(((?:[^()]+|\\((?:[^()]+|\\([^()]*\\))*\\))*)\\)|href=\"([^\"]+)\"/g) || [];\n            paths.forEach((path)=>{\n                const isImage = path.startsWith(\"!\");\n                let matchedUrl = path.match(/\\(([^)]+)\\)/) || path.match(/href=\"([^\"]+)\"/);\n                let url = matchedUrl[1];\n                if (!url.startsWith(\"data:\") && !url.startsWith(\"http\")) {\n                    if (url.startsWith(\"/\")) {\n                        url = url.substring(1);\n                    }\n                    url = new URL(url, baseUrl).toString();\n                }\n                const markdownLinkOrImageText = path.match(/(!?\\[.*?\\])/)[0];\n                if (isImage) {\n                    document.content = document.content.replace(path, `${markdownLinkOrImageText}(${url})`);\n                } else {\n                    document.content = document.content.replace(path, `${markdownLinkOrImageText}(${url})`);\n                }\n            });\n        });\n        return documents;\n    } catch (error) {\n        console.error(\"Error replacing paths with absolute paths\", error);\n        return documents;\n    }\n};\nconst replaceImgPathsWithAbsolutePaths = (documents)=>{\n    try {\n        documents.forEach((document)=>{\n            const baseUrl = new URL(document.metadata.sourceURL).origin;\n            const images = document.content.match(/!\\[.*?\\]\\(((?:[^()]+|\\((?:[^()]+|\\([^()]*\\))*\\))*)\\)/g) || [];\n            images.forEach((image)=>{\n                let imageUrl = image.match(/\\(([^)]+)\\)/)[1];\n                let altText = image.match(/\\[(.*?)\\]/)[1];\n                if (!imageUrl.startsWith(\"data:image\")) {\n                    if (!imageUrl.startsWith(\"http\")) {\n                        if (imageUrl.startsWith(\"/\")) {\n                            imageUrl = imageUrl.substring(1);\n                        }\n                        imageUrl = new URL(imageUrl, baseUrl).toString();\n                    }\n                }\n                document.content = document.content.replace(image, `![${altText}](${imageUrl})`);\n            });\n        });\n        return documents;\n    } catch (error) {\n        console.error(\"Error replacing img paths with absolute paths\", error);\n        return documents;\n    }\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwaSkvLi9zcmMvc2NyYXBlci9XZWJTY3JhcGVyL3V0aWxzL3JlcGxhY2VQYXRocy50cyIsIm1hcHBpbmdzIjoiOzs7OztBQUVPLE1BQU1BLGdDQUFnQyxDQUFDQztJQUM1QyxJQUFJO1FBQ0ZBLFVBQVVDLFFBQVEsQ0FBQ0M7WUFDakIsTUFBTUMsVUFBVSxJQUFJQyxJQUFJRixTQUFTRyxTQUFTQyxXQUFXQztZQUNyRCxNQUFNQyxRQUNKTixTQUFTTyxRQUFRQyxNQUNmLDhFQUNHLEVBQUU7WUFFVEYsTUFBTVAsUUFBUSxDQUFDVTtnQkFDYixNQUFNQyxVQUFVRCxLQUFLRSxXQUFXO2dCQUNoQyxJQUFJQyxhQUFhSCxLQUFLRCxNQUFNLGtCQUFrQkMsS0FBS0QsTUFBTTtnQkFDekQsSUFBSUssTUFBTUQsVUFBVSxDQUFDLEVBQUU7Z0JBRXZCLElBQUksQ0FBQ0MsSUFBSUYsV0FBVyxZQUFZLENBQUNFLElBQUlGLFdBQVcsU0FBUztvQkFDdkQsSUFBSUUsSUFBSUYsV0FBVyxNQUFNO3dCQUN2QkUsTUFBTUEsSUFBSUMsVUFBVTtvQkFDdEI7b0JBQ0FELE1BQU0sSUFBSVgsSUFBSVcsS0FBS1osU0FBU2M7Z0JBQzlCO2dCQUVBLE1BQU1DLDBCQUEwQlAsS0FBS0QsTUFBTSxjQUFjLENBQUMsRUFBRTtnQkFDNUQsSUFBSUUsU0FBUztvQkFDWFYsU0FBU08sVUFBVVAsU0FBU08sUUFBUVUsUUFDbENSLE1BQ0EsQ0FBQyxFQUFFTyx3QkFBd0IsQ0FBQyxFQUFFSCxJQUFJLENBQUMsQ0FBQztnQkFFeEMsT0FBTztvQkFDTGIsU0FBU08sVUFBVVAsU0FBU08sUUFBUVUsUUFDbENSLE1BQ0EsQ0FBQyxFQUFFTyx3QkFBd0IsQ0FBQyxFQUFFSCxJQUFJLENBQUMsQ0FBQztnQkFFeEM7WUFDRjtRQUNGO1FBRUEsT0FBT2Y7SUFDVCxFQUFFLE9BQU9vQixPQUFPO1FBQ2RDLFFBQVFELE1BQU0sNkNBQTZDQTtRQUMzRCxPQUFPcEI7SUFDVDtBQUNGLEVBQUU7QUFFSyxNQUFNc0IsbUNBQW1DLENBQUN0QjtJQUMvQyxJQUFJO1FBQ0ZBLFVBQVVDLFFBQVEsQ0FBQ0M7WUFDakIsTUFBTUMsVUFBVSxJQUFJQyxJQUFJRixTQUFTRyxTQUFTQyxXQUFXQztZQUNyRCxNQUFNZ0IsU0FDSnJCLFNBQVNPLFFBQVFDLE1BQ2YsNERBQ0csRUFBRTtZQUVUYSxPQUFPdEIsUUFBUSxDQUFDdUI7Z0JBQ2QsSUFBSUMsV0FBV0QsTUFBTWQsTUFBTSxjQUFjLENBQUMsRUFBRTtnQkFDNUMsSUFBSWdCLFVBQVVGLE1BQU1kLE1BQU0sWUFBWSxDQUFDLEVBQUU7Z0JBRXpDLElBQUksQ0FBQ2UsU0FBU1osV0FBVyxlQUFlO29CQUN0QyxJQUFJLENBQUNZLFNBQVNaLFdBQVcsU0FBUzt3QkFDaEMsSUFBSVksU0FBU1osV0FBVyxNQUFNOzRCQUM1QlksV0FBV0EsU0FBU1QsVUFBVTt3QkFDaEM7d0JBQ0FTLFdBQVcsSUFBSXJCLElBQUlxQixVQUFVdEIsU0FBU2M7b0JBQ3hDO2dCQUNGO2dCQUVBZixTQUFTTyxVQUFVUCxTQUFTTyxRQUFRVSxRQUNsQ0ssT0FDQSxDQUFDLEVBQUUsRUFBRUUsUUFBUSxFQUFFLEVBQUVELFNBQVMsQ0FBQyxDQUFDO1lBRWhDO1FBQ0Y7UUFFQSxPQUFPekI7SUFDVCxFQUFFLE9BQU9vQixPQUFPO1FBQ2RDLFFBQVFELE1BQU0saURBQWlEQTtRQUMvRCxPQUFPcEI7SUFDVDtBQUNGLEVBQUUiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9maXJlY3Jhd2wtc2NyYXBlci1qcy8uL3NyYy9zY3JhcGVyL1dlYlNjcmFwZXIvdXRpbHMvcmVwbGFjZVBhdGhzLnRzPzJlMTciXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgRG9jdW1lbnQgfSBmcm9tIFwiLi4vLi4vLi4vbGliL2VudGl0aWVzXCI7XG5cbmV4cG9ydCBjb25zdCByZXBsYWNlUGF0aHNXaXRoQWJzb2x1dGVQYXRocyA9IChkb2N1bWVudHM6IERvY3VtZW50W10pOiBEb2N1bWVudFtdID0+IHtcbiAgdHJ5IHtcbiAgICBkb2N1bWVudHMuZm9yRWFjaCgoZG9jdW1lbnQpID0+IHtcbiAgICAgIGNvbnN0IGJhc2VVcmwgPSBuZXcgVVJMKGRvY3VtZW50Lm1ldGFkYXRhLnNvdXJjZVVSTCkub3JpZ2luO1xuICAgICAgY29uc3QgcGF0aHMgPVxuICAgICAgICBkb2N1bWVudC5jb250ZW50Lm1hdGNoKFxuICAgICAgICAgIC8oIT9cXFsuKj9cXF0pXFwoKCg/OlteKCldK3xcXCgoPzpbXigpXSt8XFwoW14oKV0qXFwpKSpcXCkpKilcXCl8aHJlZj1cIihbXlwiXSspXCIvZ1xuICAgICAgICApIHx8IFtdO1xuXG4gICAgICBwYXRocy5mb3JFYWNoKChwYXRoOiBzdHJpbmcpID0+IHtcbiAgICAgICAgY29uc3QgaXNJbWFnZSA9IHBhdGguc3RhcnRzV2l0aChcIiFcIik7XG4gICAgICAgIGxldCBtYXRjaGVkVXJsID0gcGF0aC5tYXRjaCgvXFwoKFteKV0rKVxcKS8pIHx8IHBhdGgubWF0Y2goL2hyZWY9XCIoW15cIl0rKVwiLyk7XG4gICAgICAgIGxldCB1cmwgPSBtYXRjaGVkVXJsWzFdO1xuXG4gICAgICAgIGlmICghdXJsLnN0YXJ0c1dpdGgoXCJkYXRhOlwiKSAmJiAhdXJsLnN0YXJ0c1dpdGgoXCJodHRwXCIpKSB7XG4gICAgICAgICAgaWYgKHVybC5zdGFydHNXaXRoKFwiL1wiKSkge1xuICAgICAgICAgICAgdXJsID0gdXJsLnN1YnN0cmluZygxKTtcbiAgICAgICAgICB9XG4gICAgICAgICAgdXJsID0gbmV3IFVSTCh1cmwsIGJhc2VVcmwpLnRvU3RyaW5nKCk7XG4gICAgICAgIH1cblxuICAgICAgICBjb25zdCBtYXJrZG93bkxpbmtPckltYWdlVGV4dCA9IHBhdGgubWF0Y2goLyghP1xcWy4qP1xcXSkvKVswXTtcbiAgICAgICAgaWYgKGlzSW1hZ2UpIHtcbiAgICAgICAgICBkb2N1bWVudC5jb250ZW50ID0gZG9jdW1lbnQuY29udGVudC5yZXBsYWNlKFxuICAgICAgICAgICAgcGF0aCxcbiAgICAgICAgICAgIGAke21hcmtkb3duTGlua09ySW1hZ2VUZXh0fSgke3VybH0pYFxuICAgICAgICAgICk7XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgZG9jdW1lbnQuY29udGVudCA9IGRvY3VtZW50LmNvbnRlbnQucmVwbGFjZShcbiAgICAgICAgICAgIHBhdGgsXG4gICAgICAgICAgICBgJHttYXJrZG93bkxpbmtPckltYWdlVGV4dH0oJHt1cmx9KWBcbiAgICAgICAgICApO1xuICAgICAgICB9XG4gICAgICB9KTtcbiAgICB9KTtcblxuICAgIHJldHVybiBkb2N1bWVudHM7XG4gIH0gY2F0Y2ggKGVycm9yKSB7XG4gICAgY29uc29sZS5lcnJvcihcIkVycm9yIHJlcGxhY2luZyBwYXRocyB3aXRoIGFic29sdXRlIHBhdGhzXCIsIGVycm9yKTtcbiAgICByZXR1cm4gZG9jdW1lbnRzO1xuICB9XG59O1xuXG5leHBvcnQgY29uc3QgcmVwbGFjZUltZ1BhdGhzV2l0aEFic29sdXRlUGF0aHMgPSAoZG9jdW1lbnRzOiBEb2N1bWVudFtdKTogRG9jdW1lbnRbXSA9PiB7XG4gIHRyeSB7XG4gICAgZG9jdW1lbnRzLmZvckVhY2goKGRvY3VtZW50KSA9PiB7XG4gICAgICBjb25zdCBiYXNlVXJsID0gbmV3IFVSTChkb2N1bWVudC5tZXRhZGF0YS5zb3VyY2VVUkwpLm9yaWdpbjtcbiAgICAgIGNvbnN0IGltYWdlcyA9XG4gICAgICAgIGRvY3VtZW50LmNvbnRlbnQubWF0Y2goXG4gICAgICAgICAgLyFcXFsuKj9cXF1cXCgoKD86W14oKV0rfFxcKCg/OlteKCldK3xcXChbXigpXSpcXCkpKlxcKSkqKVxcKS9nXG4gICAgICAgICkgfHwgW107XG5cbiAgICAgIGltYWdlcy5mb3JFYWNoKChpbWFnZTogc3RyaW5nKSA9PiB7XG4gICAgICAgIGxldCBpbWFnZVVybCA9IGltYWdlLm1hdGNoKC9cXCgoW14pXSspXFwpLylbMV07XG4gICAgICAgIGxldCBhbHRUZXh0ID0gaW1hZ2UubWF0Y2goL1xcWyguKj8pXFxdLylbMV07XG5cbiAgICAgICAgaWYgKCFpbWFnZVVybC5zdGFydHNXaXRoKFwiZGF0YTppbWFnZVwiKSkge1xuICAgICAgICAgIGlmICghaW1hZ2VVcmwuc3RhcnRzV2l0aChcImh0dHBcIikpIHtcbiAgICAgICAgICAgIGlmIChpbWFnZVVybC5zdGFydHNXaXRoKFwiL1wiKSkge1xuICAgICAgICAgICAgICBpbWFnZVVybCA9IGltYWdlVXJsLnN1YnN0cmluZygxKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGltYWdlVXJsID0gbmV3IFVSTChpbWFnZVVybCwgYmFzZVVybCkudG9TdHJpbmcoKTtcbiAgICAgICAgICB9XG4gICAgICAgIH1cblxuICAgICAgICBkb2N1bWVudC5jb250ZW50ID0gZG9jdW1lbnQuY29udGVudC5yZXBsYWNlKFxuICAgICAgICAgIGltYWdlLFxuICAgICAgICAgIGAhWyR7YWx0VGV4dH1dKCR7aW1hZ2VVcmx9KWBcbiAgICAgICAgKTtcbiAgICAgIH0pO1xuICAgIH0pO1xuXG4gICAgcmV0dXJuIGRvY3VtZW50cztcbiAgfSBjYXRjaCAoZXJyb3IpIHtcbiAgICBjb25zb2xlLmVycm9yKFwiRXJyb3IgcmVwbGFjaW5nIGltZyBwYXRocyB3aXRoIGFic29sdXRlIHBhdGhzXCIsIGVycm9yKTtcbiAgICByZXR1cm4gZG9jdW1lbnRzO1xuICB9XG59OyJdLCJuYW1lcyI6WyJyZXBsYWNlUGF0aHNXaXRoQWJzb2x1dGVQYXRocyIsImRvY3VtZW50cyIsImZvckVhY2giLCJkb2N1bWVudCIsImJhc2VVcmwiLCJVUkwiLCJtZXRhZGF0YSIsInNvdXJjZVVSTCIsIm9yaWdpbiIsInBhdGhzIiwiY29udGVudCIsIm1hdGNoIiwicGF0aCIsImlzSW1hZ2UiLCJzdGFydHNXaXRoIiwibWF0Y2hlZFVybCIsInVybCIsInN1YnN0cmluZyIsInRvU3RyaW5nIiwibWFya2Rvd25MaW5rT3JJbWFnZVRleHQiLCJyZXBsYWNlIiwiZXJyb3IiLCJjb25zb2xlIiwicmVwbGFjZUltZ1BhdGhzV2l0aEFic29sdXRlUGF0aHMiLCJpbWFnZXMiLCJpbWFnZSIsImltYWdlVXJsIiwiYWx0VGV4dCJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(api)/./src/scraper/WebScraper/utils/replacePaths.ts\n");

/***/ }),

/***/ "(api)/./src/services/billing/credit_billing.ts":
/*!************************************************!*\
  !*** ./src/services/billing/credit_billing.ts ***!
  \************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   billTeam: () => (/* binding */ billTeam),\n/* harmony export */   checkTeamCredits: () => (/* binding */ checkTeamCredits),\n/* harmony export */   countCreditsAndRemainingForCurrentBillingPeriod: () => (/* binding */ countCreditsAndRemainingForCurrentBillingPeriod),\n/* harmony export */   supaBillTeam: () => (/* binding */ supaBillTeam),\n/* harmony export */   supaCheckTeamCredits: () => (/* binding */ supaCheckTeamCredits)\n/* harmony export */ });\n/* harmony import */ var _lib_withAuth__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../lib/withAuth */ \"(api)/./src/lib/withAuth.ts\");\n/* harmony import */ var _supabase__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../supabase */ \"(api)/./src/services/supabase.ts\");\n\n\nconst FREE_CREDITS = 300;\nasync function billTeam(team_id, credits) {\n    return (0,_lib_withAuth__WEBPACK_IMPORTED_MODULE_0__.withAuth)(supaBillTeam)(team_id, credits);\n}\nasync function supaBillTeam(team_id, credits) {\n    if (team_id === \"preview\") {\n        return {\n            success: true,\n            message: \"Preview team, no credits used\"\n        };\n    }\n    console.log(`Billing team ${team_id} for ${credits} credits`);\n    //   When the API is used, you can log the credit usage in the credit_usage table:\n    // team_id: The ID of the team using the API.\n    // subscription_id: The ID of the team's active subscription.\n    // credits_used: The number of credits consumed by the API call.\n    // created_at: The timestamp of the API usage.\n    // 1. get the subscription\n    const { data: subscription } = await _supabase__WEBPACK_IMPORTED_MODULE_1__.supabase_service.from(\"subscriptions\").select(\"*\").eq(\"team_id\", team_id).eq(\"status\", \"active\").single();\n    // 2. Check for available coupons\n    const { data: coupons } = await _supabase__WEBPACK_IMPORTED_MODULE_1__.supabase_service.from(\"coupons\").select(\"id, credits\").eq(\"team_id\", team_id).eq(\"status\", \"active\");\n    let couponCredits = 0;\n    if (coupons && coupons.length > 0) {\n        couponCredits = coupons.reduce((total, coupon)=>total + coupon.credits, 0);\n    }\n    let sortedCoupons = coupons.sort((a, b)=>b.credits - a.credits);\n    // using coupon credits:\n    if (couponCredits > 0) {\n        // if there is no subscription and they have enough coupon credits\n        if (!subscription) {\n            // using only coupon credits:\n            // if there are enough coupon credits\n            if (couponCredits >= credits) {\n                // remove credits from coupon credits\n                let usedCredits = credits;\n                while(usedCredits > 0){\n                    // update coupons\n                    if (sortedCoupons[0].credits < usedCredits) {\n                        usedCredits = usedCredits - sortedCoupons[0].credits;\n                        // update coupon credits\n                        await _supabase__WEBPACK_IMPORTED_MODULE_1__.supabase_service.from(\"coupons\").update({\n                            credits: 0\n                        }).eq(\"id\", sortedCoupons[0].id);\n                        sortedCoupons.shift();\n                    } else {\n                        // update coupon credits\n                        await _supabase__WEBPACK_IMPORTED_MODULE_1__.supabase_service.from(\"coupons\").update({\n                            credits: sortedCoupons[0].credits - usedCredits\n                        }).eq(\"id\", sortedCoupons[0].id);\n                        usedCredits = 0;\n                    }\n                }\n                return await createCreditUsage({\n                    team_id,\n                    credits: 0\n                });\n            // not enough coupon credits and no subscription\n            } else {\n                // update coupon credits\n                const usedCredits = credits - couponCredits;\n                for(let i = 0; i < sortedCoupons.length; i++){\n                    await _supabase__WEBPACK_IMPORTED_MODULE_1__.supabase_service.from(\"coupons\").update({\n                        credits: 0\n                    }).eq(\"id\", sortedCoupons[i].id);\n                }\n                return await createCreditUsage({\n                    team_id,\n                    credits: usedCredits\n                });\n            }\n        }\n        // with subscription\n        // using coupon + subscription credits:\n        if (credits > couponCredits) {\n            // update coupon credits\n            for(let i = 0; i < sortedCoupons.length; i++){\n                await _supabase__WEBPACK_IMPORTED_MODULE_1__.supabase_service.from(\"coupons\").update({\n                    credits: 0\n                }).eq(\"id\", sortedCoupons[i].id);\n            }\n            const usedCredits = credits - couponCredits;\n            return await createCreditUsage({\n                team_id,\n                subscription_id: subscription.id,\n                credits: usedCredits\n            });\n        } else {\n            let usedCredits = credits;\n            while(usedCredits > 0){\n                // update coupons\n                if (sortedCoupons[0].credits < usedCredits) {\n                    usedCredits = usedCredits - sortedCoupons[0].credits;\n                    // update coupon credits\n                    await _supabase__WEBPACK_IMPORTED_MODULE_1__.supabase_service.from(\"coupons\").update({\n                        credits: 0\n                    }).eq(\"id\", sortedCoupons[0].id);\n                    sortedCoupons.shift();\n                } else {\n                    // update coupon credits\n                    await _supabase__WEBPACK_IMPORTED_MODULE_1__.supabase_service.from(\"coupons\").update({\n                        credits: sortedCoupons[0].credits - usedCredits\n                    }).eq(\"id\", sortedCoupons[0].id);\n                    usedCredits = 0;\n                }\n            }\n            return await createCreditUsage({\n                team_id,\n                subscription_id: subscription.id,\n                credits: 0\n            });\n        }\n    }\n    // not using coupon credits\n    if (!subscription) {\n        return await createCreditUsage({\n            team_id,\n            credits\n        });\n    }\n    return await createCreditUsage({\n        team_id,\n        subscription_id: subscription.id,\n        credits\n    });\n}\nasync function checkTeamCredits(team_id, credits) {\n    return (0,_lib_withAuth__WEBPACK_IMPORTED_MODULE_0__.withAuth)(supaCheckTeamCredits)(team_id, credits);\n}\n// if team has enough credits for the operation, return true, else return false\nasync function supaCheckTeamCredits(team_id, credits) {\n    if (team_id === \"preview\") {\n        return {\n            success: true,\n            message: \"Preview team, no credits used\"\n        };\n    }\n    // Retrieve the team's active subscription\n    const { data: subscription, error: subscriptionError } = await _supabase__WEBPACK_IMPORTED_MODULE_1__.supabase_service.from(\"subscriptions\").select(\"id, price_id, current_period_start, current_period_end\").eq(\"team_id\", team_id).eq(\"status\", \"active\").single();\n    // Check for available coupons\n    const { data: coupons } = await _supabase__WEBPACK_IMPORTED_MODULE_1__.supabase_service.from(\"coupons\").select(\"credits\").eq(\"team_id\", team_id).eq(\"status\", \"active\");\n    let couponCredits = 0;\n    if (coupons && coupons.length > 0) {\n        couponCredits = coupons.reduce((total, coupon)=>total + coupon.credits, 0);\n    }\n    // Free credits, no coupons\n    if (subscriptionError || !subscription) {\n        // If there is no active subscription but there are available coupons\n        if (couponCredits >= credits) {\n            return {\n                success: true,\n                message: \"Sufficient credits available\"\n            };\n        }\n        const { data: creditUsages, error: creditUsageError } = await _supabase__WEBPACK_IMPORTED_MODULE_1__.supabase_service.from(\"credit_usage\").select(\"credits_used\").is(\"subscription_id\", null).eq(\"team_id\", team_id);\n        // .gte(\"created_at\", subscription.current_period_start)\n        // .lte(\"created_at\", subscription.current_period_end);\n        if (creditUsageError) {\n            throw new Error(`Failed to retrieve credit usage for subscription_id: ${subscription.id}`);\n        }\n        const totalCreditsUsed = creditUsages.reduce((acc, usage)=>acc + usage.credits_used, 0);\n        console.log(\"totalCreditsUsed\", totalCreditsUsed);\n        // 5. Compare the total credits used with the credits allowed by the plan.\n        if (totalCreditsUsed + credits > FREE_CREDITS) {\n            return {\n                success: false,\n                message: \"Insufficient credits, please upgrade!\"\n            };\n        }\n        return {\n            success: true,\n            message: \"Sufficient credits available\"\n        };\n    }\n    // Calculate the total credits used by the team within the current billing period\n    const { data: creditUsages, error: creditUsageError } = await _supabase__WEBPACK_IMPORTED_MODULE_1__.supabase_service.from(\"credit_usage\").select(\"credits_used\").eq(\"subscription_id\", subscription.id).gte(\"created_at\", subscription.current_period_start).lte(\"created_at\", subscription.current_period_end);\n    if (creditUsageError) {\n        throw new Error(`Failed to retrieve credit usage for subscription_id: ${subscription.id}`);\n    }\n    const totalCreditsUsed = creditUsages.reduce((acc, usage)=>acc + usage.credits_used, 0);\n    // Adjust total credits used by subtracting coupon value\n    const adjustedCreditsUsed = Math.max(0, totalCreditsUsed - couponCredits);\n    // Get the price details\n    const { data: price, error: priceError } = await _supabase__WEBPACK_IMPORTED_MODULE_1__.supabase_service.from(\"prices\").select(\"credits\").eq(\"id\", subscription.price_id).single();\n    if (priceError) {\n        throw new Error(`Failed to retrieve price for price_id: ${subscription.price_id}`);\n    }\n    // Compare the adjusted total credits used with the credits allowed by the plan\n    if (adjustedCreditsUsed + credits > price.credits) {\n        return {\n            success: false,\n            message: \"Insufficient credits, please upgrade!\"\n        };\n    }\n    return {\n        success: true,\n        message: \"Sufficient credits available\"\n    };\n}\n// Count the total credits used by a team within the current billing period and return the remaining credits.\nasync function countCreditsAndRemainingForCurrentBillingPeriod(team_id) {\n    // 1. Retrieve the team's active subscription based on the team_id.\n    const { data: subscription, error: subscriptionError } = await _supabase__WEBPACK_IMPORTED_MODULE_1__.supabase_service.from(\"subscriptions\").select(\"id, price_id, current_period_start, current_period_end\").eq(\"team_id\", team_id).single();\n    const { data: coupons } = await _supabase__WEBPACK_IMPORTED_MODULE_1__.supabase_service.from(\"coupons\").select(\"credits\").eq(\"team_id\", team_id).eq(\"status\", \"active\");\n    let couponCredits = 0;\n    if (coupons && coupons.length > 0) {\n        couponCredits = coupons.reduce((total, coupon)=>total + coupon.credits, 0);\n    }\n    if (subscriptionError || !subscription) {\n        // Free\n        const { data: creditUsages, error: creditUsageError } = await _supabase__WEBPACK_IMPORTED_MODULE_1__.supabase_service.from(\"credit_usage\").select(\"credits_used\").is(\"subscription_id\", null).eq(\"team_id\", team_id);\n        if (creditUsageError || !creditUsages) {\n            throw new Error(`Failed to retrieve credit usage for team_id: ${team_id}`);\n        }\n        const totalCreditsUsed = creditUsages.reduce((acc, usage)=>acc + usage.credits_used, 0);\n        const remainingCredits = FREE_CREDITS + couponCredits - totalCreditsUsed;\n        return {\n            totalCreditsUsed: totalCreditsUsed,\n            remainingCredits,\n            totalCredits: FREE_CREDITS + couponCredits\n        };\n    }\n    const { data: creditUsages, error: creditUsageError } = await _supabase__WEBPACK_IMPORTED_MODULE_1__.supabase_service.from(\"credit_usage\").select(\"credits_used\").eq(\"subscription_id\", subscription.id).gte(\"created_at\", subscription.current_period_start).lte(\"created_at\", subscription.current_period_end);\n    if (creditUsageError || !creditUsages) {\n        throw new Error(`Failed to retrieve credit usage for subscription_id: ${subscription.id}`);\n    }\n    const totalCreditsUsed = creditUsages.reduce((acc, usage)=>acc + usage.credits_used, 0);\n    const { data: price, error: priceError } = await _supabase__WEBPACK_IMPORTED_MODULE_1__.supabase_service.from(\"prices\").select(\"credits\").eq(\"id\", subscription.price_id).single();\n    if (priceError || !price) {\n        throw new Error(`Failed to retrieve price for price_id: ${subscription.price_id}`);\n    }\n    const remainingCredits = price.credits + couponCredits - totalCreditsUsed;\n    return {\n        totalCreditsUsed,\n        remainingCredits,\n        totalCredits: price.credits\n    };\n}\nasync function createCreditUsage({ team_id, subscription_id, credits }) {\n    const { data: credit_usage } = await _supabase__WEBPACK_IMPORTED_MODULE_1__.supabase_service.from(\"credit_usage\").insert([\n        {\n            team_id,\n            credits_used: credits,\n            subscription_id: subscription_id || null,\n            created_at: new Date()\n        }\n    ]).select();\n    return {\n        success: true,\n        credit_usage\n    };\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(api)/./src/services/billing/credit_billing.ts\n");

/***/ }),

/***/ "(api)/./src/services/logging/log_job.ts":
/*!*****************************************!*\
  !*** ./src/services/logging/log_job.ts ***!
  \*****************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   logJob: () => (/* binding */ logJob)\n/* harmony export */ });\n/* harmony import */ var _supabase__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../supabase */ \"(api)/./src/services/supabase.ts\");\n/* harmony import */ var dotenv_config__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! dotenv/config */ \"dotenv/config\");\n/* harmony import */ var dotenv_config__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(dotenv_config__WEBPACK_IMPORTED_MODULE_1__);\n\n\nasync function logJob(job) {\n    try {\n        // Only log jobs in production\n        if (process.env.ENV !== \"production\") {\n            return;\n        }\n        const { data, error } = await _supabase__WEBPACK_IMPORTED_MODULE_0__.supabase_service.from(\"firecrawl_jobs\").insert([\n            {\n                success: job.success,\n                message: job.message,\n                num_docs: job.num_docs,\n                docs: job.docs,\n                time_taken: job.time_taken,\n                team_id: job.team_id === \"preview\" ? null : job.team_id,\n                mode: job.mode,\n                url: job.url,\n                crawler_options: job.crawlerOptions,\n                page_options: job.pageOptions,\n                origin: job.origin,\n                extractor_options: job.extractor_options,\n                num_tokens: job.num_tokens\n            }\n        ]);\n        if (error) {\n            console.error(\"Error logging job:\\n\", error);\n        }\n    } catch (error) {\n        console.error(\"Error logging job:\\n\", error);\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwaSkvLi9zcmMvc2VydmljZXMvbG9nZ2luZy9sb2dfam9iLnRzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7QUFDK0M7QUFFeEI7QUFFaEIsZUFBZUMsT0FBT0MsR0FBaUI7SUFDNUMsSUFBSTtRQUNGLDhCQUE4QjtRQUM5QixJQUFJQyxRQUFRQyxJQUFJQyxRQUFRLGNBQWM7WUFDcEM7UUFDRjtRQUdBLE1BQU0sRUFBRUMsSUFBSSxFQUFFQyxLQUFLLEVBQUUsR0FBRyxNQUFNUCx1REFBZ0JBLENBQzNDUSxLQUFLLGtCQUNMQyxPQUFPO1lBQ047Z0JBQ0VDLFNBQVNSLElBQUlRO2dCQUNiQyxTQUFTVCxJQUFJUztnQkFDYkMsVUFBVVYsSUFBSVU7Z0JBQ2RDLE1BQU1YLElBQUlXO2dCQUNWQyxZQUFZWixJQUFJWTtnQkFDaEJDLFNBQVNiLElBQUlhLFlBQVksWUFBWSxPQUFPYixJQUFJYTtnQkFDaERDLE1BQU1kLElBQUljO2dCQUNWQyxLQUFLZixJQUFJZTtnQkFDVEMsaUJBQWlCaEIsSUFBSWlCO2dCQUNyQkMsY0FBY2xCLElBQUltQjtnQkFDbEJDLFFBQVFwQixJQUFJb0I7Z0JBQ1pDLG1CQUFtQnJCLElBQUlxQjtnQkFDdkJDLFlBQVl0QixJQUFJc0I7WUFDbEI7U0FDRDtRQUNILElBQUlqQixPQUFPO1lBQ1RrQixRQUFRbEIsTUFBTSx3QkFBd0JBO1FBQ3hDO0lBQ0YsRUFBRSxPQUFPQSxPQUFPO1FBQ2RrQixRQUFRbEIsTUFBTSx3QkFBd0JBO0lBQ3hDO0FBQ0YiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9maXJlY3Jhd2wtc2NyYXBlci1qcy8uL3NyYy9zZXJ2aWNlcy9sb2dnaW5nL2xvZ19qb2IudHM/YTg5MCJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBFeHRyYWN0b3JPcHRpb25zIH0gZnJvbSAnLi8uLi8uLi9saWIvZW50aXRpZXMnO1xuaW1wb3J0IHsgc3VwYWJhc2Vfc2VydmljZSB9IGZyb20gXCIuLi9zdXBhYmFzZVwiO1xuaW1wb3J0IHsgRmlyZWNyYXdsSm9iIH0gZnJvbSBcIi4uLy4uL3R5cGVzXCI7XG5pbXBvcnQgXCJkb3RlbnYvY29uZmlnXCI7XG5cbmV4cG9ydCBhc3luYyBmdW5jdGlvbiBsb2dKb2Ioam9iOiBGaXJlY3Jhd2xKb2IpIHtcbiAgdHJ5IHtcbiAgICAvLyBPbmx5IGxvZyBqb2JzIGluIHByb2R1Y3Rpb25cbiAgICBpZiAocHJvY2Vzcy5lbnYuRU5WICE9PSBcInByb2R1Y3Rpb25cIikge1xuICAgICAgcmV0dXJuO1xuICAgIH1cblxuICAgIFxuICAgIGNvbnN0IHsgZGF0YSwgZXJyb3IgfSA9IGF3YWl0IHN1cGFiYXNlX3NlcnZpY2VcbiAgICAgIC5mcm9tKFwiZmlyZWNyYXdsX2pvYnNcIilcbiAgICAgIC5pbnNlcnQoW1xuICAgICAgICB7XG4gICAgICAgICAgc3VjY2Vzczogam9iLnN1Y2Nlc3MsXG4gICAgICAgICAgbWVzc2FnZTogam9iLm1lc3NhZ2UsXG4gICAgICAgICAgbnVtX2RvY3M6IGpvYi5udW1fZG9jcyxcbiAgICAgICAgICBkb2NzOiBqb2IuZG9jcyxcbiAgICAgICAgICB0aW1lX3Rha2VuOiBqb2IudGltZV90YWtlbixcbiAgICAgICAgICB0ZWFtX2lkOiBqb2IudGVhbV9pZCA9PT0gXCJwcmV2aWV3XCIgPyBudWxsIDogam9iLnRlYW1faWQsXG4gICAgICAgICAgbW9kZTogam9iLm1vZGUsXG4gICAgICAgICAgdXJsOiBqb2IudXJsLFxuICAgICAgICAgIGNyYXdsZXJfb3B0aW9uczogam9iLmNyYXdsZXJPcHRpb25zLFxuICAgICAgICAgIHBhZ2Vfb3B0aW9uczogam9iLnBhZ2VPcHRpb25zLFxuICAgICAgICAgIG9yaWdpbjogam9iLm9yaWdpbixcbiAgICAgICAgICBleHRyYWN0b3Jfb3B0aW9uczogam9iLmV4dHJhY3Rvcl9vcHRpb25zLFxuICAgICAgICAgIG51bV90b2tlbnM6IGpvYi5udW1fdG9rZW5zXG4gICAgICAgIH0sXG4gICAgICBdKTtcbiAgICBpZiAoZXJyb3IpIHtcbiAgICAgIGNvbnNvbGUuZXJyb3IoXCJFcnJvciBsb2dnaW5nIGpvYjpcXG5cIiwgZXJyb3IpO1xuICAgIH1cbiAgfSBjYXRjaCAoZXJyb3IpIHtcbiAgICBjb25zb2xlLmVycm9yKFwiRXJyb3IgbG9nZ2luZyBqb2I6XFxuXCIsIGVycm9yKTtcbiAgfVxufVxuIl0sIm5hbWVzIjpbInN1cGFiYXNlX3NlcnZpY2UiLCJsb2dKb2IiLCJqb2IiLCJwcm9jZXNzIiwiZW52IiwiRU5WIiwiZGF0YSIsImVycm9yIiwiZnJvbSIsImluc2VydCIsInN1Y2Nlc3MiLCJtZXNzYWdlIiwibnVtX2RvY3MiLCJkb2NzIiwidGltZV90YWtlbiIsInRlYW1faWQiLCJtb2RlIiwidXJsIiwiY3Jhd2xlcl9vcHRpb25zIiwiY3Jhd2xlck9wdGlvbnMiLCJwYWdlX29wdGlvbnMiLCJwYWdlT3B0aW9ucyIsIm9yaWdpbiIsImV4dHJhY3Rvcl9vcHRpb25zIiwibnVtX3Rva2VucyIsImNvbnNvbGUiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(api)/./src/services/logging/log_job.ts\n");

/***/ }),

/***/ "(api)/./src/services/rate-limiter.ts":
/*!**************************************!*\
  !*** ./src/services/rate-limiter.ts ***!
  \**************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   crawlRateLimit: () => (/* binding */ crawlRateLimit),\n/* harmony export */   crawlStatusRateLimiter: () => (/* binding */ crawlStatusRateLimiter),\n/* harmony export */   getRateLimiter: () => (/* binding */ getRateLimiter),\n/* harmony export */   previewRateLimiter: () => (/* binding */ previewRateLimiter),\n/* harmony export */   serverRateLimiter: () => (/* binding */ serverRateLimiter)\n/* harmony export */ });\n/* harmony import */ var rate_limiter_flexible__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! rate-limiter-flexible */ \"rate-limiter-flexible\");\n/* harmony import */ var rate_limiter_flexible__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(rate_limiter_flexible__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _src_lib_redis__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../src/lib/redis */ \"(api)/./src/lib/redis.ts\");\n/* harmony import */ var _src_types__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../src/types */ \"(api)/./src/types.ts\");\n\n\n\nconst MAX_REQUESTS_PER_MINUTE_PREVIEW = 5;\nconst MAX_CRAWLS_PER_MINUTE_STARTER = 2;\nconst MAX_CRAWLS_PER_MINUTE_STANDARD = 4;\nconst MAX_CRAWLS_PER_MINUTE_SCALE = 20;\nconst MAX_REQUESTS_PER_MINUTE_ACCOUNT = 20;\nconst MAX_REQUESTS_PER_MINUTE_CRAWL_STATUS = 120;\nconst previewRateLimiter = new rate_limiter_flexible__WEBPACK_IMPORTED_MODULE_0__.RateLimiterRedis({\n    storeClient: _src_lib_redis__WEBPACK_IMPORTED_MODULE_1__[\"default\"],\n    keyPrefix: \"middleware\",\n    points: MAX_REQUESTS_PER_MINUTE_PREVIEW,\n    duration: 60\n});\nconst serverRateLimiter = new rate_limiter_flexible__WEBPACK_IMPORTED_MODULE_0__.RateLimiterRedis({\n    storeClient: _src_lib_redis__WEBPACK_IMPORTED_MODULE_1__[\"default\"],\n    keyPrefix: \"middleware\",\n    points: MAX_REQUESTS_PER_MINUTE_ACCOUNT,\n    duration: 60\n});\nconst crawlStatusRateLimiter = new rate_limiter_flexible__WEBPACK_IMPORTED_MODULE_0__.RateLimiterRedis({\n    storeClient: _src_lib_redis__WEBPACK_IMPORTED_MODULE_1__[\"default\"],\n    keyPrefix: \"middleware\",\n    points: MAX_REQUESTS_PER_MINUTE_CRAWL_STATUS,\n    duration: 60\n});\nfunction crawlRateLimit(plan) {\n    if (plan === \"standard\") {\n        return new rate_limiter_flexible__WEBPACK_IMPORTED_MODULE_0__.RateLimiterRedis({\n            storeClient: _src_lib_redis__WEBPACK_IMPORTED_MODULE_1__[\"default\"],\n            keyPrefix: \"middleware\",\n            points: MAX_CRAWLS_PER_MINUTE_STANDARD,\n            duration: 60\n        });\n    } else if (plan === \"scale\") {\n        return new rate_limiter_flexible__WEBPACK_IMPORTED_MODULE_0__.RateLimiterRedis({\n            storeClient: _src_lib_redis__WEBPACK_IMPORTED_MODULE_1__[\"default\"],\n            keyPrefix: \"middleware\",\n            points: MAX_CRAWLS_PER_MINUTE_SCALE,\n            duration: 60\n        });\n    }\n    return new rate_limiter_flexible__WEBPACK_IMPORTED_MODULE_0__.RateLimiterRedis({\n        storeClient: _src_lib_redis__WEBPACK_IMPORTED_MODULE_1__[\"default\"],\n        keyPrefix: \"middleware\",\n        points: MAX_CRAWLS_PER_MINUTE_STARTER,\n        duration: 60\n    });\n}\nfunction getRateLimiter(mode) {\n    switch(mode){\n        case _src_types__WEBPACK_IMPORTED_MODULE_2__.RateLimiterMode.Preview:\n            return previewRateLimiter;\n        case _src_types__WEBPACK_IMPORTED_MODULE_2__.RateLimiterMode.CrawlStatus:\n            return crawlStatusRateLimiter;\n        default:\n            return serverRateLimiter;\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwaSkvLi9zcmMvc2VydmljZXMvcmF0ZS1saW1pdGVyLnRzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7OztBQUF5RDtBQUNYO0FBQ0k7QUFFbEQsTUFBTUcsa0NBQWtDO0FBQ3hDLE1BQU1DLGdDQUFnQztBQUN0QyxNQUFNQyxpQ0FBaUM7QUFDdkMsTUFBTUMsOEJBQThCO0FBRXBDLE1BQU1DLGtDQUFrQztBQUV4QyxNQUFNQyx1Q0FBdUM7QUFJdEMsTUFBTUMscUJBQXFCLElBQUlULG1FQUFnQkEsQ0FBQztJQUNyRFUsYUFBYVQsc0RBQVdBO0lBQ3hCVSxXQUFXO0lBQ1hDLFFBQVFUO0lBQ1JVLFVBQVU7QUFDWixHQUFHO0FBRUksTUFBTUMsb0JBQW9CLElBQUlkLG1FQUFnQkEsQ0FBQztJQUNwRFUsYUFBYVQsc0RBQVdBO0lBQ3hCVSxXQUFXO0lBQ1hDLFFBQVFMO0lBQ1JNLFVBQVU7QUFDWixHQUFHO0FBRUksTUFBTUUseUJBQXlCLElBQUlmLG1FQUFnQkEsQ0FBQztJQUN6RFUsYUFBYVQsc0RBQVdBO0lBQ3hCVSxXQUFXO0lBQ1hDLFFBQVFKO0lBQ1JLLFVBQVU7QUFDWixHQUFHO0FBR0ksU0FBU0csZUFBZUMsSUFBWTtJQUN6QyxJQUFHQSxTQUFTLFlBQVc7UUFDckIsT0FBTyxJQUFJakIsbUVBQWdCQSxDQUFDO1lBQzFCVSxhQUFhVCxzREFBV0E7WUFDeEJVLFdBQVc7WUFDWEMsUUFBUVA7WUFDUlEsVUFBVTtRQUNaO0lBQ0YsT0FBTSxJQUFHSSxTQUFTLFNBQVE7UUFDeEIsT0FBTyxJQUFJakIsbUVBQWdCQSxDQUFDO1lBQzFCVSxhQUFhVCxzREFBV0E7WUFDeEJVLFdBQVc7WUFDWEMsUUFBUU47WUFDUk8sVUFBVTtRQUNaO0lBQ0Y7SUFDQSxPQUFPLElBQUliLG1FQUFnQkEsQ0FBQztRQUMxQlUsYUFBYVQsc0RBQVdBO1FBQ3hCVSxXQUFXO1FBQ1hDLFFBQVFSO1FBQ1JTLFVBQVU7SUFDWjtBQUVGO0FBS08sU0FBU0ssZUFBZUMsSUFBcUI7SUFDbEQsT0FBT0E7UUFDTCxLQUFLakIsdURBQWVBLENBQUNrQjtZQUNuQixPQUFPWDtRQUNULEtBQUtQLHVEQUFlQSxDQUFDbUI7WUFDbkIsT0FBT047UUFDVDtZQUNFLE9BQU9EO0lBQ1g7QUFDRiIsInNvdXJjZXMiOlsid2VicGFjazovL2ZpcmVjcmF3bC1zY3JhcGVyLWpzLy4vc3JjL3NlcnZpY2VzL3JhdGUtbGltaXRlci50cz8yZDg3Il0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IFJhdGVMaW1pdGVyUmVkaXMgfSBmcm9tIFwicmF0ZS1saW1pdGVyLWZsZXhpYmxlXCI7XG5pbXBvcnQgcmVkaXNDbGllbnQgZnJvbSBcIi4uLy4uL3NyYy9saWIvcmVkaXNcIjtcbmltcG9ydCB7IFJhdGVMaW1pdGVyTW9kZSB9IGZyb20gXCIuLi8uLi9zcmMvdHlwZXNcIjtcblxuY29uc3QgTUFYX1JFUVVFU1RTX1BFUl9NSU5VVEVfUFJFVklFVyA9IDU7XG5jb25zdCBNQVhfQ1JBV0xTX1BFUl9NSU5VVEVfU1RBUlRFUiA9IDI7XG5jb25zdCBNQVhfQ1JBV0xTX1BFUl9NSU5VVEVfU1RBTkRBUkQgPSA0O1xuY29uc3QgTUFYX0NSQVdMU19QRVJfTUlOVVRFX1NDQUxFID0gMjA7XG5cbmNvbnN0IE1BWF9SRVFVRVNUU19QRVJfTUlOVVRFX0FDQ09VTlQgPSAyMDtcblxuY29uc3QgTUFYX1JFUVVFU1RTX1BFUl9NSU5VVEVfQ1JBV0xfU1RBVFVTID0gMTIwO1xuXG5cblxuZXhwb3J0IGNvbnN0IHByZXZpZXdSYXRlTGltaXRlciA9IG5ldyBSYXRlTGltaXRlclJlZGlzKHtcbiAgc3RvcmVDbGllbnQ6IHJlZGlzQ2xpZW50LFxuICBrZXlQcmVmaXg6IFwibWlkZGxld2FyZVwiLFxuICBwb2ludHM6IE1BWF9SRVFVRVNUU19QRVJfTUlOVVRFX1BSRVZJRVcsXG4gIGR1cmF0aW9uOiA2MCwgLy8gRHVyYXRpb24gaW4gc2Vjb25kc1xufSk7XG5cbmV4cG9ydCBjb25zdCBzZXJ2ZXJSYXRlTGltaXRlciA9IG5ldyBSYXRlTGltaXRlclJlZGlzKHtcbiAgc3RvcmVDbGllbnQ6IHJlZGlzQ2xpZW50LFxuICBrZXlQcmVmaXg6IFwibWlkZGxld2FyZVwiLFxuICBwb2ludHM6IE1BWF9SRVFVRVNUU19QRVJfTUlOVVRFX0FDQ09VTlQsXG4gIGR1cmF0aW9uOiA2MCwgLy8gRHVyYXRpb24gaW4gc2Vjb25kc1xufSk7XG5cbmV4cG9ydCBjb25zdCBjcmF3bFN0YXR1c1JhdGVMaW1pdGVyID0gbmV3IFJhdGVMaW1pdGVyUmVkaXMoe1xuICBzdG9yZUNsaWVudDogcmVkaXNDbGllbnQsXG4gIGtleVByZWZpeDogXCJtaWRkbGV3YXJlXCIsXG4gIHBvaW50czogTUFYX1JFUVVFU1RTX1BFUl9NSU5VVEVfQ1JBV0xfU1RBVFVTLFxuICBkdXJhdGlvbjogNjAsIC8vIER1cmF0aW9uIGluIHNlY29uZHNcbn0pO1xuXG5cbmV4cG9ydCBmdW5jdGlvbiBjcmF3bFJhdGVMaW1pdChwbGFuOiBzdHJpbmcpe1xuICBpZihwbGFuID09PSBcInN0YW5kYXJkXCIpe1xuICAgIHJldHVybiBuZXcgUmF0ZUxpbWl0ZXJSZWRpcyh7XG4gICAgICBzdG9yZUNsaWVudDogcmVkaXNDbGllbnQsXG4gICAgICBrZXlQcmVmaXg6IFwibWlkZGxld2FyZVwiLFxuICAgICAgcG9pbnRzOiBNQVhfQ1JBV0xTX1BFUl9NSU5VVEVfU1RBTkRBUkQsXG4gICAgICBkdXJhdGlvbjogNjAsIC8vIER1cmF0aW9uIGluIHNlY29uZHNcbiAgICB9KTtcbiAgfWVsc2UgaWYocGxhbiA9PT0gXCJzY2FsZVwiKXtcbiAgICByZXR1cm4gbmV3IFJhdGVMaW1pdGVyUmVkaXMoe1xuICAgICAgc3RvcmVDbGllbnQ6IHJlZGlzQ2xpZW50LFxuICAgICAga2V5UHJlZml4OiBcIm1pZGRsZXdhcmVcIixcbiAgICAgIHBvaW50czogTUFYX0NSQVdMU19QRVJfTUlOVVRFX1NDQUxFLFxuICAgICAgZHVyYXRpb246IDYwLCAvLyBEdXJhdGlvbiBpbiBzZWNvbmRzXG4gICAgfSk7XG4gIH1cbiAgcmV0dXJuIG5ldyBSYXRlTGltaXRlclJlZGlzKHtcbiAgICBzdG9yZUNsaWVudDogcmVkaXNDbGllbnQsXG4gICAga2V5UHJlZml4OiBcIm1pZGRsZXdhcmVcIixcbiAgICBwb2ludHM6IE1BWF9DUkFXTFNfUEVSX01JTlVURV9TVEFSVEVSLFxuICAgIGR1cmF0aW9uOiA2MCwgLy8gRHVyYXRpb24gaW4gc2Vjb25kc1xuICB9KTtcblxufVxuXG5cblxuXG5leHBvcnQgZnVuY3Rpb24gZ2V0UmF0ZUxpbWl0ZXIobW9kZTogUmF0ZUxpbWl0ZXJNb2RlKXtcbiAgc3dpdGNoKG1vZGUpIHtcbiAgICBjYXNlIFJhdGVMaW1pdGVyTW9kZS5QcmV2aWV3OlxuICAgICAgcmV0dXJuIHByZXZpZXdSYXRlTGltaXRlcjtcbiAgICBjYXNlIFJhdGVMaW1pdGVyTW9kZS5DcmF3bFN0YXR1czpcbiAgICAgIHJldHVybiBjcmF3bFN0YXR1c1JhdGVMaW1pdGVyO1xuICAgIGRlZmF1bHQ6XG4gICAgICByZXR1cm4gc2VydmVyUmF0ZUxpbWl0ZXI7XG4gIH1cbn1cbiJdLCJuYW1lcyI6WyJSYXRlTGltaXRlclJlZGlzIiwicmVkaXNDbGllbnQiLCJSYXRlTGltaXRlck1vZGUiLCJNQVhfUkVRVUVTVFNfUEVSX01JTlVURV9QUkVWSUVXIiwiTUFYX0NSQVdMU19QRVJfTUlOVVRFX1NUQVJURVIiLCJNQVhfQ1JBV0xTX1BFUl9NSU5VVEVfU1RBTkRBUkQiLCJNQVhfQ1JBV0xTX1BFUl9NSU5VVEVfU0NBTEUiLCJNQVhfUkVRVUVTVFNfUEVSX01JTlVURV9BQ0NPVU5UIiwiTUFYX1JFUVVFU1RTX1BFUl9NSU5VVEVfQ1JBV0xfU1RBVFVTIiwicHJldmlld1JhdGVMaW1pdGVyIiwic3RvcmVDbGllbnQiLCJrZXlQcmVmaXgiLCJwb2ludHMiLCJkdXJhdGlvbiIsInNlcnZlclJhdGVMaW1pdGVyIiwiY3Jhd2xTdGF0dXNSYXRlTGltaXRlciIsImNyYXdsUmF0ZUxpbWl0IiwicGxhbiIsImdldFJhdGVMaW1pdGVyIiwibW9kZSIsIlByZXZpZXciLCJDcmF3bFN0YXR1cyJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(api)/./src/services/rate-limiter.ts\n");

/***/ }),

/***/ "(api)/./src/services/redis.ts":
/*!*******************************!*\
  !*** ./src/services/redis.ts ***!
  \*******************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   deleteKey: () => (/* binding */ deleteKey),\n/* harmony export */   getValue: () => (/* binding */ getValue),\n/* harmony export */   setValue: () => (/* binding */ setValue)\n/* harmony export */ });\n/* harmony import */ var ioredis__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ioredis */ \"ioredis\");\n/* harmony import */ var ioredis__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(ioredis__WEBPACK_IMPORTED_MODULE_0__);\n\n// Initialize Redis client\nconst redis = new (ioredis__WEBPACK_IMPORTED_MODULE_0___default())(process.env.REDIS_URL);\n/**\n * Set a value in Redis with an optional expiration time.\n * @param {string} key The key under which to store the value.\n * @param {string} value The value to store.\n * @param {number} [expire] Optional expiration time in seconds.\n */ const setValue = async (key, value, expire)=>{\n    if (expire) {\n        await redis.set(key, value, \"EX\", expire);\n    } else {\n        await redis.set(key, value);\n    }\n};\n/**\n * Get a value from Redis.\n * @param {string} key The key of the value to retrieve.\n * @returns {Promise<string|null>} The value, if found, otherwise null.\n */ const getValue = async (key)=>{\n    const value = await redis.get(key);\n    return value;\n};\n/**\n * Delete a key from Redis.\n * @param {string} key The key to delete.\n */ const deleteKey = async (key)=>{\n    await redis.del(key);\n};\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwaSkvLi9zcmMvc2VydmljZXMvcmVkaXMudHMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7QUFBNEI7QUFFNUIsMEJBQTBCO0FBQzFCLE1BQU1DLFFBQVEsSUFBSUQsZ0RBQUtBLENBQUNFLFFBQVFDLElBQUlDO0FBRXBDOzs7OztDQUtDLEdBQ0QsTUFBTUMsV0FBVyxPQUFPQyxLQUFhQyxPQUFlQztJQUNsRCxJQUFJQSxRQUFRO1FBQ1YsTUFBTVAsTUFBTVEsSUFBSUgsS0FBS0MsT0FBTyxNQUFNQztJQUNwQyxPQUFPO1FBQ0wsTUFBTVAsTUFBTVEsSUFBSUgsS0FBS0M7SUFDdkI7QUFDRjtBQUVBOzs7O0NBSUMsR0FDRCxNQUFNRyxXQUFXLE9BQU9KO0lBQ3RCLE1BQU1DLFFBQVEsTUFBTU4sTUFBTVUsSUFBSUw7SUFDOUIsT0FBT0M7QUFDVDtBQUVBOzs7Q0FHQyxHQUNELE1BQU1LLFlBQVksT0FBT047SUFDdkIsTUFBTUwsTUFBTVksSUFBSVA7QUFDbEI7QUFFeUMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9maXJlY3Jhd2wtc2NyYXBlci1qcy8uL3NyYy9zZXJ2aWNlcy9yZWRpcy50cz9mOTUxIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBSZWRpcyBmcm9tICdpb3JlZGlzJztcblxuLy8gSW5pdGlhbGl6ZSBSZWRpcyBjbGllbnRcbmNvbnN0IHJlZGlzID0gbmV3IFJlZGlzKHByb2Nlc3MuZW52LlJFRElTX1VSTCk7XG5cbi8qKlxuICogU2V0IGEgdmFsdWUgaW4gUmVkaXMgd2l0aCBhbiBvcHRpb25hbCBleHBpcmF0aW9uIHRpbWUuXG4gKiBAcGFyYW0ge3N0cmluZ30ga2V5IFRoZSBrZXkgdW5kZXIgd2hpY2ggdG8gc3RvcmUgdGhlIHZhbHVlLlxuICogQHBhcmFtIHtzdHJpbmd9IHZhbHVlIFRoZSB2YWx1ZSB0byBzdG9yZS5cbiAqIEBwYXJhbSB7bnVtYmVyfSBbZXhwaXJlXSBPcHRpb25hbCBleHBpcmF0aW9uIHRpbWUgaW4gc2Vjb25kcy5cbiAqL1xuY29uc3Qgc2V0VmFsdWUgPSBhc3luYyAoa2V5OiBzdHJpbmcsIHZhbHVlOiBzdHJpbmcsIGV4cGlyZT86IG51bWJlcikgPT4ge1xuICBpZiAoZXhwaXJlKSB7XG4gICAgYXdhaXQgcmVkaXMuc2V0KGtleSwgdmFsdWUsICdFWCcsIGV4cGlyZSk7XG4gIH0gZWxzZSB7XG4gICAgYXdhaXQgcmVkaXMuc2V0KGtleSwgdmFsdWUpO1xuICB9XG59O1xuXG4vKipcbiAqIEdldCBhIHZhbHVlIGZyb20gUmVkaXMuXG4gKiBAcGFyYW0ge3N0cmluZ30ga2V5IFRoZSBrZXkgb2YgdGhlIHZhbHVlIHRvIHJldHJpZXZlLlxuICogQHJldHVybnMge1Byb21pc2U8c3RyaW5nfG51bGw+fSBUaGUgdmFsdWUsIGlmIGZvdW5kLCBvdGhlcndpc2UgbnVsbC5cbiAqL1xuY29uc3QgZ2V0VmFsdWUgPSBhc3luYyAoa2V5OiBzdHJpbmcpOiBQcm9taXNlPHN0cmluZyB8IG51bGw+ID0+IHtcbiAgY29uc3QgdmFsdWUgPSBhd2FpdCByZWRpcy5nZXQoa2V5KTtcbiAgcmV0dXJuIHZhbHVlO1xufTtcblxuLyoqXG4gKiBEZWxldGUgYSBrZXkgZnJvbSBSZWRpcy5cbiAqIEBwYXJhbSB7c3RyaW5nfSBrZXkgVGhlIGtleSB0byBkZWxldGUuXG4gKi9cbmNvbnN0IGRlbGV0ZUtleSA9IGFzeW5jIChrZXk6IHN0cmluZykgPT4ge1xuICBhd2FpdCByZWRpcy5kZWwoa2V5KTtcbn07XG5cbmV4cG9ydCB7IHNldFZhbHVlLCBnZXRWYWx1ZSwgZGVsZXRlS2V5IH07XG4iXSwibmFtZXMiOlsiUmVkaXMiLCJyZWRpcyIsInByb2Nlc3MiLCJlbnYiLCJSRURJU19VUkwiLCJzZXRWYWx1ZSIsImtleSIsInZhbHVlIiwiZXhwaXJlIiwic2V0IiwiZ2V0VmFsdWUiLCJnZXQiLCJkZWxldGVLZXkiLCJkZWwiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(api)/./src/services/redis.ts\n");

/***/ }),

/***/ "(api)/./src/services/supabase.ts":
/*!**********************************!*\
  !*** ./src/services/supabase.ts ***!
  \**********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   supabase_service: () => (/* binding */ supabase_service)\n/* harmony export */ });\n/* harmony import */ var _supabase_supabase_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @supabase/supabase-js */ \"@supabase/supabase-js\");\n/* harmony import */ var _supabase_supabase_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_supabase_supabase_js__WEBPACK_IMPORTED_MODULE_0__);\n\n// SupabaseService class initializes the Supabase client conditionally based on environment variables.\nclass SupabaseService {\n    constructor(){\n        this.client = null;\n        const supabaseUrl = process.env.SUPABASE_URL;\n        const supabaseServiceToken = process.env.SUPABASE_SERVICE_TOKEN;\n        // Only initialize the Supabase client if both URL and Service Token are provided.\n        if (process.env.USE_DB_AUTHENTICATION === \"false\") {\n            // Warn the user that Authentication is disabled by setting the client to null\n            console.warn(\"\\x1b[33mAuthentication is disabled. Supabase client will not be initialized.\\x1b[0m\");\n            this.client = null;\n        } else if (!supabaseUrl || !supabaseServiceToken) {\n            console.error(\"\\x1b[31mSupabase environment variables aren't configured correctly. Supabase client will not be initialized. Fix ENV configuration or disable DB authentication with USE_DB_AUTHENTICATION env variable\\x1b[0m\");\n        } else {\n            this.client = (0,_supabase_supabase_js__WEBPACK_IMPORTED_MODULE_0__.createClient)(supabaseUrl, supabaseServiceToken);\n        }\n    }\n    // Provides access to the initialized Supabase client, if available.\n    getClient() {\n        return this.client;\n    }\n}\n// Using a Proxy to handle dynamic access to the Supabase client or service methods.\n// This approach ensures that if Supabase is not configured, any attempt to use it will result in a clear error.\nconst supabase_service = new Proxy(new SupabaseService(), {\n    get: function(target, prop, receiver) {\n        const client = target.getClient();\n        // If the Supabase client is not initialized, intercept property access to provide meaningful error feedback.\n        if (client === null) {\n            console.error(\"Attempted to access Supabase client when it's not configured.\");\n            return ()=>{\n                throw new Error(\"Supabase client is not configured.\");\n            };\n        }\n        // Direct access to SupabaseService properties takes precedence.\n        if (prop in target) {\n            return Reflect.get(target, prop, receiver);\n        }\n        // Otherwise, delegate access to the Supabase client.\n        return Reflect.get(client, prop, receiver);\n    }\n});\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwaSkvLi9zcmMvc2VydmljZXMvc3VwYWJhc2UudHMiLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBQXFFO0FBRXJFLHNHQUFzRztBQUN0RyxNQUFNQztJQUdKQyxhQUFjO2FBRk5DLFNBQWdDO1FBR3RDLE1BQU1DLGNBQWNDLFFBQVFDLElBQUlDO1FBQ2hDLE1BQU1DLHVCQUF1QkgsUUFBUUMsSUFBSUc7UUFDekMsa0ZBQWtGO1FBQ2xGLElBQUlKLFFBQVFDLElBQUlJLDBCQUEwQixTQUFTO1lBQ2pELDhFQUE4RTtZQUM5RUMsUUFBUUMsS0FDTjtZQUVGLElBQUksQ0FBQ1QsU0FBUztRQUNoQixPQUFPLElBQUksQ0FBQ0MsZUFBZSxDQUFDSSxzQkFBc0I7WUFDaERHLFFBQVFFLE1BQ047UUFFSixPQUFPO1lBQ0wsSUFBSSxDQUFDVixTQUFTSCxtRUFBWUEsQ0FBQ0ksYUFBYUk7UUFDMUM7SUFDRjtJQUVBLG9FQUFvRTtJQUNwRU0sWUFBbUM7UUFDakMsT0FBTyxJQUFJLENBQUNYO0lBQ2Q7QUFDRjtBQUVBLG9GQUFvRjtBQUNwRixnSEFBZ0g7QUFDekcsTUFBTVksbUJBQW1DLElBQUlDLE1BQ2xELElBQUlmLG1CQUNKO0lBQ0VnQixLQUFLLFNBQVVDLE1BQU0sRUFBRUMsSUFBSSxFQUFFQyxRQUFRO1FBQ25DLE1BQU1qQixTQUFTZSxPQUFPSjtRQUN0Qiw2R0FBNkc7UUFDN0csSUFBSVgsV0FBVyxNQUFNO1lBQ25CUSxRQUFRRSxNQUNOO1lBRUYsT0FBTztnQkFDTCxNQUFNLElBQUlRLE1BQU07WUFDbEI7UUFDRjtRQUNBLGdFQUFnRTtRQUNoRSxJQUFJRixRQUFRRCxRQUFRO1lBQ2xCLE9BQU9JLFFBQVFMLElBQUlDLFFBQVFDLE1BQU1DO1FBQ25DO1FBQ0EscURBQXFEO1FBQ3JELE9BQU9FLFFBQVFMLElBQUlkLFFBQVFnQixNQUFNQztJQUNuQztBQUNGLEdBQzZCIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vZmlyZWNyYXdsLXNjcmFwZXItanMvLi9zcmMvc2VydmljZXMvc3VwYWJhc2UudHM/MTI0NSJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBjcmVhdGVDbGllbnQsIFN1cGFiYXNlQ2xpZW50IH0gZnJvbSBcIkBzdXBhYmFzZS9zdXBhYmFzZS1qc1wiO1xuXG4vLyBTdXBhYmFzZVNlcnZpY2UgY2xhc3MgaW5pdGlhbGl6ZXMgdGhlIFN1cGFiYXNlIGNsaWVudCBjb25kaXRpb25hbGx5IGJhc2VkIG9uIGVudmlyb25tZW50IHZhcmlhYmxlcy5cbmNsYXNzIFN1cGFiYXNlU2VydmljZSB7XG4gIHByaXZhdGUgY2xpZW50OiBTdXBhYmFzZUNsaWVudCB8IG51bGwgPSBudWxsO1xuXG4gIGNvbnN0cnVjdG9yKCkge1xuICAgIGNvbnN0IHN1cGFiYXNlVXJsID0gcHJvY2Vzcy5lbnYuU1VQQUJBU0VfVVJMO1xuICAgIGNvbnN0IHN1cGFiYXNlU2VydmljZVRva2VuID0gcHJvY2Vzcy5lbnYuU1VQQUJBU0VfU0VSVklDRV9UT0tFTjtcbiAgICAvLyBPbmx5IGluaXRpYWxpemUgdGhlIFN1cGFiYXNlIGNsaWVudCBpZiBib3RoIFVSTCBhbmQgU2VydmljZSBUb2tlbiBhcmUgcHJvdmlkZWQuXG4gICAgaWYgKHByb2Nlc3MuZW52LlVTRV9EQl9BVVRIRU5USUNBVElPTiA9PT0gXCJmYWxzZVwiKSB7XG4gICAgICAvLyBXYXJuIHRoZSB1c2VyIHRoYXQgQXV0aGVudGljYXRpb24gaXMgZGlzYWJsZWQgYnkgc2V0dGluZyB0aGUgY2xpZW50IHRvIG51bGxcbiAgICAgIGNvbnNvbGUud2FybihcbiAgICAgICAgXCJcXHgxYlszM21BdXRoZW50aWNhdGlvbiBpcyBkaXNhYmxlZC4gU3VwYWJhc2UgY2xpZW50IHdpbGwgbm90IGJlIGluaXRpYWxpemVkLlxceDFiWzBtXCJcbiAgICAgICk7XG4gICAgICB0aGlzLmNsaWVudCA9IG51bGw7XG4gICAgfSBlbHNlIGlmICghc3VwYWJhc2VVcmwgfHwgIXN1cGFiYXNlU2VydmljZVRva2VuKSB7XG4gICAgICBjb25zb2xlLmVycm9yKFxuICAgICAgICBcIlxceDFiWzMxbVN1cGFiYXNlIGVudmlyb25tZW50IHZhcmlhYmxlcyBhcmVuJ3QgY29uZmlndXJlZCBjb3JyZWN0bHkuIFN1cGFiYXNlIGNsaWVudCB3aWxsIG5vdCBiZSBpbml0aWFsaXplZC4gRml4IEVOViBjb25maWd1cmF0aW9uIG9yIGRpc2FibGUgREIgYXV0aGVudGljYXRpb24gd2l0aCBVU0VfREJfQVVUSEVOVElDQVRJT04gZW52IHZhcmlhYmxlXFx4MWJbMG1cIlxuICAgICAgKTtcbiAgICB9IGVsc2Uge1xuICAgICAgdGhpcy5jbGllbnQgPSBjcmVhdGVDbGllbnQoc3VwYWJhc2VVcmwsIHN1cGFiYXNlU2VydmljZVRva2VuKTtcbiAgICB9XG4gIH1cblxuICAvLyBQcm92aWRlcyBhY2Nlc3MgdG8gdGhlIGluaXRpYWxpemVkIFN1cGFiYXNlIGNsaWVudCwgaWYgYXZhaWxhYmxlLlxuICBnZXRDbGllbnQoKTogU3VwYWJhc2VDbGllbnQgfCBudWxsIHtcbiAgICByZXR1cm4gdGhpcy5jbGllbnQ7XG4gIH1cbn1cblxuLy8gVXNpbmcgYSBQcm94eSB0byBoYW5kbGUgZHluYW1pYyBhY2Nlc3MgdG8gdGhlIFN1cGFiYXNlIGNsaWVudCBvciBzZXJ2aWNlIG1ldGhvZHMuXG4vLyBUaGlzIGFwcHJvYWNoIGVuc3VyZXMgdGhhdCBpZiBTdXBhYmFzZSBpcyBub3QgY29uZmlndXJlZCwgYW55IGF0dGVtcHQgdG8gdXNlIGl0IHdpbGwgcmVzdWx0IGluIGEgY2xlYXIgZXJyb3IuXG5leHBvcnQgY29uc3Qgc3VwYWJhc2Vfc2VydmljZTogU3VwYWJhc2VDbGllbnQgPSBuZXcgUHJveHkoXG4gIG5ldyBTdXBhYmFzZVNlcnZpY2UoKSxcbiAge1xuICAgIGdldDogZnVuY3Rpb24gKHRhcmdldCwgcHJvcCwgcmVjZWl2ZXIpIHtcbiAgICAgIGNvbnN0IGNsaWVudCA9IHRhcmdldC5nZXRDbGllbnQoKTtcbiAgICAgIC8vIElmIHRoZSBTdXBhYmFzZSBjbGllbnQgaXMgbm90IGluaXRpYWxpemVkLCBpbnRlcmNlcHQgcHJvcGVydHkgYWNjZXNzIHRvIHByb3ZpZGUgbWVhbmluZ2Z1bCBlcnJvciBmZWVkYmFjay5cbiAgICAgIGlmIChjbGllbnQgPT09IG51bGwpIHtcbiAgICAgICAgY29uc29sZS5lcnJvcihcbiAgICAgICAgICBcIkF0dGVtcHRlZCB0byBhY2Nlc3MgU3VwYWJhc2UgY2xpZW50IHdoZW4gaXQncyBub3QgY29uZmlndXJlZC5cIlxuICAgICAgICApO1xuICAgICAgICByZXR1cm4gKCkgPT4ge1xuICAgICAgICAgIHRocm93IG5ldyBFcnJvcihcIlN1cGFiYXNlIGNsaWVudCBpcyBub3QgY29uZmlndXJlZC5cIik7XG4gICAgICAgIH07XG4gICAgICB9XG4gICAgICAvLyBEaXJlY3QgYWNjZXNzIHRvIFN1cGFiYXNlU2VydmljZSBwcm9wZXJ0aWVzIHRha2VzIHByZWNlZGVuY2UuXG4gICAgICBpZiAocHJvcCBpbiB0YXJnZXQpIHtcbiAgICAgICAgcmV0dXJuIFJlZmxlY3QuZ2V0KHRhcmdldCwgcHJvcCwgcmVjZWl2ZXIpO1xuICAgICAgfVxuICAgICAgLy8gT3RoZXJ3aXNlLCBkZWxlZ2F0ZSBhY2Nlc3MgdG8gdGhlIFN1cGFiYXNlIGNsaWVudC5cbiAgICAgIHJldHVybiBSZWZsZWN0LmdldChjbGllbnQsIHByb3AsIHJlY2VpdmVyKTtcbiAgICB9LFxuICB9XG4pIGFzIHVua25vd24gYXMgU3VwYWJhc2VDbGllbnQ7XG4iXSwibmFtZXMiOlsiY3JlYXRlQ2xpZW50IiwiU3VwYWJhc2VTZXJ2aWNlIiwiY29uc3RydWN0b3IiLCJjbGllbnQiLCJzdXBhYmFzZVVybCIsInByb2Nlc3MiLCJlbnYiLCJTVVBBQkFTRV9VUkwiLCJzdXBhYmFzZVNlcnZpY2VUb2tlbiIsIlNVUEFCQVNFX1NFUlZJQ0VfVE9LRU4iLCJVU0VfREJfQVVUSEVOVElDQVRJT04iLCJjb25zb2xlIiwid2FybiIsImVycm9yIiwiZ2V0Q2xpZW50Iiwic3VwYWJhc2Vfc2VydmljZSIsIlByb3h5IiwiZ2V0IiwidGFyZ2V0IiwicHJvcCIsInJlY2VpdmVyIiwiRXJyb3IiLCJSZWZsZWN0Il0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(api)/./src/services/supabase.ts\n");

/***/ }),

/***/ "(api)/./src/types.ts":
/*!**********************!*\
  !*** ./src/types.ts ***!
  \**********************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   RateLimiterMode: () => (/* binding */ RateLimiterMode)\n/* harmony export */ });\nvar RateLimiterMode;\n(function(RateLimiterMode) {\n    RateLimiterMode[\"Crawl\"] = \"crawl\";\n    RateLimiterMode[\"CrawlStatus\"] = \"crawl-status\";\n    RateLimiterMode[\"Scrape\"] = \"scrape\";\n    RateLimiterMode[\"Preview\"] = \"preview\";\n    RateLimiterMode[\"Search\"] = \"search\";\n})(RateLimiterMode || (RateLimiterMode = {}));\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwaSkvLi9zcmMvdHlwZXMudHMiLCJtYXBwaW5ncyI6Ijs7OztJQTZDTztVQUFLQSxlQUFlO0lBQWZBLGdCQUNWQyxXQUFRO0lBREVELGdCQUVWRSxpQkFBYztJQUZKRixnQkFHVkcsWUFBUztJQUhDSCxnQkFJVkksYUFBVTtJQUpBSixnQkFLVkssWUFBUztHQUxDTCxvQkFBQUEiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9maXJlY3Jhd2wtc2NyYXBlci1qcy8uL3NyYy90eXBlcy50cz8yNjljIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IEV4dHJhY3Rvck9wdGlvbnMgfSBmcm9tIFwiLi9saWIvZW50aXRpZXNcIjtcblxuZXhwb3J0IGludGVyZmFjZSBDcmF3bFJlc3VsdCB7XG4gIHNvdXJjZTogc3RyaW5nO1xuICBjb250ZW50OiBzdHJpbmc7XG4gIG9wdGlvbnM/OiB7XG4gICAgc3VtbWFyaXplPzogYm9vbGVhbjtcbiAgICBzdW1tYXJpemVfbWF4X2NoYXJzPzogbnVtYmVyO1xuICB9O1xuICBtZXRhZGF0YT86IGFueTtcbiAgcmF3X2NvbnRleHRfaWQ/OiBudW1iZXIgfCBzdHJpbmc7XG4gIHBlcm1pc3Npb25zPzogYW55W107XG59XG5cbmV4cG9ydCBpbnRlcmZhY2UgSW5nZXN0UmVzdWx0IHtcbiAgc3VjY2VzczogYm9vbGVhbjtcbiAgZXJyb3I6IHN0cmluZztcbiAgZGF0YTogQ3Jhd2xSZXN1bHRbXTtcbn1cblxuZXhwb3J0IGludGVyZmFjZSBXZWJTY3JhcGVyT3B0aW9ucyB7XG4gIHVybDogc3RyaW5nO1xuICBtb2RlOiBcImNyYXdsXCIgfCBcInNpbmdsZV91cmxzXCIgfCBcInNpdGVtYXBcIjtcbiAgY3Jhd2xlck9wdGlvbnM6IGFueTtcbiAgcGFnZU9wdGlvbnM6IGFueTtcbiAgdGVhbV9pZDogc3RyaW5nO1xuICBvcmlnaW4/OiBzdHJpbmc7XG59XG5cbmV4cG9ydCBpbnRlcmZhY2UgRmlyZWNyYXdsSm9iIHtcbiAgc3VjY2VzczogYm9vbGVhbjtcbiAgbWVzc2FnZTogc3RyaW5nO1xuICBudW1fZG9jczogbnVtYmVyO1xuICBkb2NzOiBhbnlbXTtcbiAgdGltZV90YWtlbjogbnVtYmVyO1xuICB0ZWFtX2lkOiBzdHJpbmc7XG4gIG1vZGU6IHN0cmluZztcbiAgdXJsOiBzdHJpbmc7XG4gIGNyYXdsZXJPcHRpb25zPzogYW55O1xuICBwYWdlT3B0aW9ucz86IGFueTtcbiAgb3JpZ2luOiBzdHJpbmc7XG4gIGV4dHJhY3Rvcl9vcHRpb25zPzogRXh0cmFjdG9yT3B0aW9ucyxcbiAgbnVtX3Rva2Vucz86IG51bWJlclxufVxuXG5leHBvcnQgZW51bSBSYXRlTGltaXRlck1vZGUge1xuICBDcmF3bCA9IFwiY3Jhd2xcIixcbiAgQ3Jhd2xTdGF0dXMgPSBcImNyYXdsLXN0YXR1c1wiLFxuICBTY3JhcGUgPSBcInNjcmFwZVwiLFxuICBQcmV2aWV3ID0gXCJwcmV2aWV3XCIsXG4gIFNlYXJjaCA9IFwic2VhcmNoXCIsXG5cbn1cblxuZXhwb3J0IGludGVyZmFjZSBBdXRoUmVzcG9uc2Uge1xuICBzdWNjZXNzOiBib29sZWFuO1xuICB0ZWFtX2lkPzogc3RyaW5nO1xuICBlcnJvcj86IHN0cmluZztcbiAgc3RhdHVzPzogbnVtYmVyO1xufVxuXG5cbiJdLCJuYW1lcyI6WyJSYXRlTGltaXRlck1vZGUiLCJDcmF3bCIsIkNyYXdsU3RhdHVzIiwiU2NyYXBlIiwiUHJldmlldyIsIlNlYXJjaCJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(api)/./src/types.ts\n");

/***/ })

};
;

// load runtime
var __webpack_require__ = require("../../webpack-api-runtime.js");
__webpack_require__.C(exports);
var __webpack_exec__ = (moduleId) => (__webpack_require__(__webpack_require__.s = moduleId))
var __webpack_exports__ = (__webpack_exec__("(api)/./src/pages/api/scrape.ts"));
module.exports = __webpack_exports__;

})();